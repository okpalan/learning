{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1","program":"C:\\Users\\Researchers\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","lazy_static","C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=62cf7194975149f2","-C","extra-filename=-62cf7194975149f2","--out-dir","c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Researchers\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps\\liblazy_static-62cf7194975149f2.rmeta"},"prelude":{"crate_id":{"name":"lazy_static","disambiguator":[5176779442058269625,0]},"crate_root":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src","external_crates":[{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[6130085985959571423,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10834538756664496827,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16052532455530240381,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":4,"id":{"name":"std","disambiguator":[10096348926132587111,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":5,"id":{"name":"alloc","disambiguator":[9943859611570948275,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":6,"id":{"name":"libc","disambiguator":[2085945775536176072,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":7,"id":{"name":"unwind","disambiguator":[9544986399897469044,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17772512906340842432,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2307131819628043677,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8458190703300588207,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5770881746596919874,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":12,"id":{"name":"std_detect","disambiguator":[9756748775720564409,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13144887679811945557,0]}}],"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":342,"byte_end":7003,"line_start":8,"line_end":222,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":7696},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7449,"byte_end":7458,"line_start":12,"line_end":12,"column_start":26,"column_end":35},"alias_span":null,"name":"ONCE_INIT","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":1,"index":3215},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":3776,"byte_end":3781,"line_start":124,"line_end":124,"column_start":20,"column_end":25},"alias_span":null,"name":"__Deref","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":342,"byte_end":7003,"line_start":8,"line_end":222,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33}],"decl_id":null,"docs":"A macro for declaring lazily evaluated statics.","sig":null,"attributes":[{"value":"*\nA macro for declaring lazily evaluated statics.\n\nUsing this macro, it is possible to have `static`s that require code to be\nexecuted at runtime in order to be initialized.\nThis includes anything requiring heap allocations, like vectors or hash maps,\nas well as anything that requires function calls to be computed.\n\n# Syntax\n\n```ignore\nlazy_static! {\n    [pub] static ref NAME_1: TYPE_1 = EXPR_1;\n    [pub] static ref NAME_2: TYPE_2 = EXPR_2;\n    ...\n    [pub] static ref NAME_N: TYPE_N = EXPR_N;\n}\n```\n\nAttributes (including doc comments) are supported as well:\n\n```rust\n# #[macro_use]\n# extern crate lazy_static;\n# fn main() {\nlazy_static! {\n    /// This is an example for using doc comment attributes\n    static ref EXAMPLE: u8 = 42;\n}\n# }\n```\n\n# Semantics\n\nFor a given `static ref NAME: TYPE = EXPR;`, the macro generates a unique type that\nimplements `Deref<TYPE>` and stores it in a static with name `NAME`. (Attributes end up\nattaching to this type.)\n\nOn first deref, `EXPR` gets evaluated and stored internally, such that all further derefs\ncan return a reference to the same object. Note that this can lead to deadlocks\nif you have multiple lazy statics that depend on each other in their initialization.\n\nApart from the lazy initialization, the resulting \"static ref\" variables\nhave generally the same properties as regular \"static\" variables:\n\n- Any type in them needs to fulfill the `Sync` trait.\n- If the type has a destructor, then it will not run when the process exits.\n\n# Example\n\nUsing the macro:\n\n```rust\n#[macro_use]\nextern crate lazy_static;\n\nuse std::collections::HashMap;\n\nlazy_static! {\n    static ref HASHMAP: HashMap<u32, &'static str> = {\n        let mut m = HashMap::new();\n        m.insert(0, \"foo\");\n        m.insert(1, \"bar\");\n        m.insert(2, \"baz\");\n        m\n    };\n    static ref COUNT: usize = HASHMAP.len();\n    static ref NUMBER: u32 = times_two(21);\n}\n\nfn times_two(n: u32) -> u32 { n * 2 }\n\nfn main() {\n    println!(\"The map has {} entries.\", *COUNT);\n    println!(\"The entry for `0` is \\\"{}\\\".\", HASHMAP.get(&0).unwrap());\n    println!(\"A expensive calculation on a static results in: {}.\", *NUMBER);\n}\n```\n\n# Implementation details\n\nThe `Deref` implementation uses a hidden static variable that is guarded by an atomic check on each access.\n\n# Cargo features\n\nThis crate provides two cargo features:\n\n- `nightly`: This uses unstable language features only available on the nightly release channel for a more optimal implementation. In practice this currently means avoiding a heap allocation per static. This feature might get deprecated at a later point once all relevant optimizations are usable from stable.\n- `spin_no_std` (implies `nightly`): This allows using this crate in a no-std environment, by depending on the standalone `spin` crate.\n\nBoth features depend on unstable language features, which means\nno guarantees can be made about them in regard to SemVer stability.\n\n*/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":342,"byte_end":3274,"line_start":8,"line_end":101,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":3447,"byte_end":3457,"line_start":107,"line_end":107,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lazy","qualname":"::lazy","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":23},{"krate":0,"index":25}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":3459,"byte_end":3489,"line_start":109,"line_end":109,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7472,"byte_end":7476,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::lazy::Lazy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7486,"byte_end":7498,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"name":"0","qualname":"::lazy::Lazy::0","value":"*const T","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7500,"byte_end":7508,"line_start":14,"line_end":14,"column_start":40,"column_end":48},"name":"1","qualname":"::lazy::Lazy::1","value":"lazy::std::sync::Once","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7569,"byte_end":7572,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"get","qualname":"<Lazy<T>>::get","value":"pub fn get<F>(&'static mut Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7540,"byte_end":7557,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6323,"byte_end":6333,"line_start":192,"line_end":192,"column_start":11,"column_end":21},"name":"LazyStatic","qualname":"::LazyStatic","value":"LazyStatic","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" Support trait for enabling a few common operation on lazy static values.","sig":null,"attributes":[{"value":"/ Support trait for enabling a few common operation on lazy static values.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6129,"byte_end":6205,"line_start":188,"line_end":188,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6206,"byte_end":6209,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This is implemented by each defined lazy static, and","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6210,"byte_end":6266,"line_start":190,"line_end":190,"column_start":1,"column_end":57}},{"value":"/ used by the free functions in this crate.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6267,"byte_end":6312,"line_start":191,"line_end":191,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6362,"byte_end":6372,"line_start":194,"line_end":194,"column_start":8,"column_end":18},"name":"initialize","qualname":"::LazyStatic::initialize","value":"pub fn initialize(&Self)","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6930,"byte_end":6940,"line_start":220,"line_end":220,"column_start":8,"column_end":18},"name":"initialize","qualname":"::initialize","value":"pub fn initialize<T: LazyStatic>(&T)","parent":null,"children":[],"decl_id":null,"docs":" Takes a shared reference to a lazy static and initializes\n it if it has not been already.","sig":null,"attributes":[{"value":"/ Takes a shared reference to a lazy static and initializes","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6390,"byte_end":6451,"line_start":197,"line_end":197,"column_start":1,"column_end":62}},{"value":"/ it if it has not been already.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6452,"byte_end":6486,"line_start":198,"line_end":198,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6487,"byte_end":6490,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ This can be used to control the initialization point of a lazy static.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6491,"byte_end":6565,"line_start":200,"line_end":200,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6566,"byte_end":6569,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6570,"byte_end":6582,"line_start":202,"line_end":202,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6583,"byte_end":6586,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6587,"byte_end":6598,"line_start":204,"line_end":204,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6599,"byte_end":6615,"line_start":205,"line_end":205,"column_start":1,"column_end":17}},{"value":"/ extern crate lazy_static;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6616,"byte_end":6645,"line_start":206,"line_end":206,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6646,"byte_end":6649,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ lazy_static! {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6650,"byte_end":6668,"line_start":208,"line_end":208,"column_start":1,"column_end":19}},{"value":"/     static ref BUFFER: Vec<u8> = (0..65537).collect();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6669,"byte_end":6727,"line_start":209,"line_end":209,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6728,"byte_end":6733,"line_start":210,"line_end":210,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6734,"byte_end":6737,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6738,"byte_end":6753,"line_start":212,"line_end":212,"column_start":1,"column_end":16}},{"value":"/     lazy_static::initialize(&BUFFER);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6754,"byte_end":6795,"line_start":213,"line_end":213,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6796,"byte_end":6799,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6800,"byte_end":6814,"line_start":215,"line_end":215,"column_start":1,"column_end":15}},{"value":"/     work_with_initialized_data(&BUFFER);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6815,"byte_end":6859,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6860,"byte_end":6865,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/ # fn work_with_initialized_data(_: &[u8]) {}","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6866,"byte_end":6914,"line_start":218,"line_end":218,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":6915,"byte_end":6922,"line_start":219,"line_end":219,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7526,"byte_end":7530,"line_start":16,"line_end":16,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7866,"byte_end":7870,"line_start":32,"line_end":32,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lib.rs","byte_start":3513,"byte_end":3517,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7526,"byte_end":7530,"line_start":16,"line_end":16,"column_start":15,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lazy_static-1.0.1\\src\\lazy.rs","byte_start":7866,"byte_end":7870,"line_start":32,"line_end":32,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":3016}}]}