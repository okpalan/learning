{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3","program":"C:\\Users\\Researchers\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","quote","C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"proc-macro\"","-C","metadata=2384e327e3aa71ee","-C","extra-filename=-2384e327e3aa71ee","--out-dir","c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps","--extern","proc_macro2=c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps\\libproc_macro2-d62da8b62e384859.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Researchers\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps\\libquote-2384e327e3aa71ee.rmeta"},"prelude":{"crate_id":{"name":"quote","disambiguator":[8902313740379955468,0]},"crate_root":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src","external_crates":[{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10096348926132587111,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6130085985959571423,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10834538756664496827,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16052532455530240381,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9943859611570948275,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2085945775536176072,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9544986399897469044,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17772512906340842432,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2307131819628043677,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8458190703300588207,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5770881746596919874,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[9756748775720564409,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13144887679811945557,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":14,"id":{"name":"proc_macro","disambiguator":[17248395172418170143,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[2516820049161161499,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","num":16,"id":{"name":"unicode_xid","disambiguator":[2726315217012006760,0]}}],"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":0,"byte_end":16415,"line_start":1,"line_end":511,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":3484,"byte_end":3498,"line_start":102,"line_end":102,"column_start":14,"column_end":28},"alias_span":null,"name":"TokenStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":3535,"byte_end":3543,"line_start":105,"line_end":105,"column_start":20,"column_end":28},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":3643,"byte_end":3644,"line_start":111,"line_end":111,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"Span, TokenStream","parent":{"krate":0,"index":124}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":0,"byte_end":16415,"line_start":1,"line_end":511,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" This crate provides the [`quote!`] macro for turning Rust syntax tree data\n structures into tokens of source code.","sig":null,"attributes":[{"value":"/ This crate provides the [`quote!`] macro for turning Rust syntax tree data","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ structures into tokens of source code.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":79,"byte_end":121,"line_start":2,"line_end":2,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":122,"byte_end":125,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`quote!`]: macro.quote.html","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":126,"byte_end":158,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":159,"byte_end":162,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Procedural macros in Rust receive a stream of tokens as input, execute","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":163,"byte_end":237,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ arbitrary Rust code to determine how to manipulate those tokens, and produce","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":238,"byte_end":318,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ a stream of tokens to hand back to the compiler to compile into the caller's","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":319,"byte_end":399,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ crate. Quasi-quoting is a solution to one piece of that -- producing tokens","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":400,"byte_end":479,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ to return to the compiler.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":480,"byte_end":510,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":511,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The idea of quasi-quoting is that we write *code* that we treat as *data*.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":515,"byte_end":593,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ Within the `quote!` macro, we can write what looks like code to our text","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":594,"byte_end":670,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ editor or IDE. We get all the benefits of the editor's brace matching,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":671,"byte_end":745,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ syntax highlighting, indentation, and maybe autocompletion. But rather than","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":746,"byte_end":825,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ compiling that as code into the current crate, we can treat it as data, pass","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":826,"byte_end":906,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ it around, mutate it, and eventually hand it back to the compiler as tokens","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":907,"byte_end":986,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ to compile into the macro caller's crate.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":987,"byte_end":1032,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1033,"byte_end":1036,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate is motivated by the procedural macro use case, but is a","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1037,"byte_end":1107,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ general-purpose Rust quasi-quoting library and is not specific to procedural","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1108,"byte_end":1188,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ macros.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1189,"byte_end":1200,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1201,"byte_end":1204,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ *Version requirement: Quote supports any compiler version back to Rust's","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1205,"byte_end":1281,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ very first support for procedural macros in Rust 1.15.0.*","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1282,"byte_end":1343,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1344,"byte_end":1347,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1348,"byte_end":1359,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1360,"byte_end":1378,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ quote = \"0.6\"","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1379,"byte_end":1396,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1397,"byte_end":1404,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1405,"byte_end":1408,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1409,"byte_end":1416,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1417,"byte_end":1433,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/ extern crate quote;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1434,"byte_end":1457,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1458,"byte_end":1463,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1464,"byte_end":1482,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1483,"byte_end":1490,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1491,"byte_end":1494,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1495,"byte_end":1508,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1509,"byte_end":1512,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The following quasi-quoted block of code is something you might find in [a]","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1513,"byte_end":1592,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ procedural macro having to do with data structure serialization. The `#var`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1593,"byte_end":1672,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ syntax performs interpolation of runtime variables into the quoted tokens.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1673,"byte_end":1751,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ Check out the documentation of the [`quote!`] macro for more detail about","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1752,"byte_end":1829,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ the syntax. See also the [`quote_spanned!`] macro which is important for","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1830,"byte_end":1906,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ implementing hygienic procedural macros.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1907,"byte_end":1951,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1952,"byte_end":1955,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [a]: https://serde.rs/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1956,"byte_end":1982,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/ [`quote_spanned!`]: macro.quote_spanned.html","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":1983,"byte_end":2031,"line_start":49,"line_end":49,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2032,"byte_end":2035,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2036,"byte_end":2043,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2044,"byte_end":2062,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/ # extern crate quote;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2063,"byte_end":2088,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2089,"byte_end":2094,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2095,"byte_end":2112,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/ #     let generics = \"\";","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2113,"byte_end":2141,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"/ #     let where_clause = \"\";","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2142,"byte_end":2174,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/ #     let field_ty = \"\";","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2175,"byte_end":2203,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/ #     let item_ty = \"\";","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2204,"byte_end":2231,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/ #     let path = \"\";","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2232,"byte_end":2256,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/ #     let value = \"\";","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2257,"byte_end":2282,"line_start":61,"line_end":61,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2283,"byte_end":2288,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ let tokens = quote! {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2289,"byte_end":2314,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/     struct SerializeWith #generics #where_clause {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2315,"byte_end":2369,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/         value: &'a #field_ty,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2370,"byte_end":2403,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/         phantom: ::std::marker::PhantomData<#item_ty>,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2404,"byte_end":2462,"line_start":66,"line_end":66,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2463,"byte_end":2472,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2473,"byte_end":2476,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     impl #generics serde::Serialize for SerializeWith #generics #where_clause {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2477,"byte_end":2560,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"/         fn serialize<S>(&self, s: &mut S) -> Result<(), S::Error>","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2561,"byte_end":2630,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/         where","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2631,"byte_end":2648,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"/             S: serde::Serializer,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2649,"byte_end":2686,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/         {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2687,"byte_end":2700,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/             #path(self.value, s)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2701,"byte_end":2737,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2738,"byte_end":2751,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2752,"byte_end":2761,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2762,"byte_end":2765,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     SerializeWith {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2766,"byte_end":2789,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/         value: #value,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2790,"byte_end":2816,"line_start":79,"line_end":79,"column_start":1,"column_end":27}},{"value":"/         phantom: ::std::marker::PhantomData::<#item_ty>,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2817,"byte_end":2877,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2878,"byte_end":2887,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2888,"byte_end":2894,"line_start":82,"line_end":82,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2895,"byte_end":2900,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2901,"byte_end":2908,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2909,"byte_end":2916,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2917,"byte_end":2920,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ## Recursion limit","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2921,"byte_end":2943,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2944,"byte_end":2947,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ The `quote!` macro relies on deep recursion so some large invocations may","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":2948,"byte_end":3025,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/ fail with \"recursion limit reached\" when you compile. If it fails, bump up","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":3026,"byte_end":3104,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/ the recursion limit by adding `#![recursion_limit = \"128\"]` to your crate.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":3105,"byte_end":3183,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ An even higher limit may be necessary for especially large invocations.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":3184,"byte_end":3259,"line_start":92,"line_end":92,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":16645,"byte_end":16659,"line_start":8,"line_end":8,"column_start":11,"column_end":25},"name":"TokenStreamExt","qualname":"::ext::TokenStreamExt","value":"TokenStreamExt: private::Sealed","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":26}],"decl_id":null,"docs":" TokenStream extension trait with methods for appending tokens.","sig":null,"attributes":[{"value":"/ TokenStream extension trait with methods for appending tokens.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":16483,"byte_end":16549,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":16550,"byte_end":16553,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented outside of the `quote` crate.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":16554,"byte_end":16634,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":16686,"byte_end":16692,"line_start":9,"line_end":9,"column_start":8,"column_end":14},"name":"append","qualname":"::ext::TokenStreamExt::append","value":"pub fn append<U>(&mut Self, U) where U: Into<TokenTree>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":16763,"byte_end":16773,"line_start":13,"line_end":13,"column_start":8,"column_end":18},"name":"append_all","qualname":"::ext::TokenStreamExt::append_all","value":"pub fn append_all<T, I>(&mut Self, I) where T: ToTokens, I: IntoIterator<Item\n= T>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":16874,"byte_end":16890,"line_start":18,"line_end":18,"column_start":8,"column_end":24},"name":"append_separated","qualname":"::ext::TokenStreamExt::append_separated","value":"pub fn append_separated<T, I, U>(&mut Self, I, U) where T: ToTokens,\nI: IntoIterator<Item = T>, U: ToTokens","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":17022,"byte_end":17039,"line_start":24,"line_end":24,"column_start":8,"column_end":25},"name":"append_terminated","qualname":"::ext::TokenStreamExt::append_terminated","value":"pub fn append_terminated<T, I, U>(&mut Self, I, U) where T: ToTokens,\nI: IntoIterator<Item = T>, U: ToTokens","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":19225,"byte_end":19231,"line_start":110,"line_end":110,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19519,"byte_end":19527,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"ToTokens","qualname":"::to_tokens::ToTokens","value":"ToTokens","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" Types that can be interpolated inside a [`quote!`] invocation.","sig":null,"attributes":[{"value":"/ Types that can be interpolated inside a [`quote!`] invocation.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19405,"byte_end":19471,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19472,"byte_end":19475,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`quote!`]: macro.quote.html","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19476,"byte_end":19508,"line_start":9,"line_end":9,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21041,"byte_end":21050,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"to_tokens","qualname":"::to_tokens::ToTokens::to_tokens","value":"pub fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Write `self` to the given `TokenStream`.","sig":null,"attributes":[{"value":"/ Write `self` to the given `TokenStream`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19534,"byte_end":19578,"line_start":11,"line_end":11,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19583,"byte_end":19586,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ The token append methods provided by the [`TokenStreamExt`] extension","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19591,"byte_end":19664,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ trait may be useful for implementing `ToTokens`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19669,"byte_end":19721,"line_start":14,"line_end":14,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19726,"byte_end":19729,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ [`TokenStreamExt`]: trait.TokenStreamExt.html","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19734,"byte_end":19783,"line_start":16,"line_end":16,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19788,"byte_end":19791,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19796,"byte_end":19809,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19814,"byte_end":19817,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Example implementation for a struct representing Rust paths like","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19822,"byte_end":19890,"line_start":20,"line_end":20,"column_start":5,"column_end":73}},{"value":"/ `std::cmp::PartialEq`:","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19895,"byte_end":19921,"line_start":21,"line_end":21,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19926,"byte_end":19929,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19934,"byte_end":19941,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ extern crate quote;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19946,"byte_end":19969,"line_start":24,"line_end":24,"column_start":5,"column_end":28}},{"value":"/ use quote::{TokenStreamExt, ToTokens};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":19974,"byte_end":20016,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20021,"byte_end":20024,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ extern crate proc_macro2;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20029,"byte_end":20058,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/ use proc_macro2::{TokenTree, Spacing, Span, Punct, TokenStream};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20063,"byte_end":20131,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20136,"byte_end":20139,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ pub struct Path {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20144,"byte_end":20165,"line_start":30,"line_end":30,"column_start":5,"column_end":26}},{"value":"/     pub global: bool,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20170,"byte_end":20195,"line_start":31,"line_end":31,"column_start":5,"column_end":30}},{"value":"/     pub segments: Vec<PathSegment>,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20200,"byte_end":20239,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20244,"byte_end":20249,"line_start":33,"line_end":33,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20254,"byte_end":20257,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for Path {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20262,"byte_end":20290,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"/     fn to_tokens(&self, tokens: &mut TokenStream) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20295,"byte_end":20350,"line_start":36,"line_end":36,"column_start":5,"column_end":60}},{"value":"/         for (i, segment) in self.segments.iter().enumerate() {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20355,"byte_end":20421,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/             if i > 0 || self.global {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20426,"byte_end":20467,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/                 // Double colon `::`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20472,"byte_end":20512,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/                 tokens.append(Punct::new(':', Spacing::Joint));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20517,"byte_end":20584,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/                 tokens.append(Punct::new(':', Spacing::Alone));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20589,"byte_end":20656,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/             }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20661,"byte_end":20678,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/             segment.to_tokens(tokens);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20683,"byte_end":20725,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20730,"byte_end":20743,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20748,"byte_end":20757,"line_start":45,"line_end":45,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20762,"byte_end":20767,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20772,"byte_end":20777,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # pub struct PathSegment;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20782,"byte_end":20811,"line_start":48,"line_end":48,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20816,"byte_end":20821,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ # impl ToTokens for PathSegment {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20826,"byte_end":20863,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/ #     fn to_tokens(&self, tokens: &mut TokenStream) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20868,"byte_end":20925,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/ #         unimplemented!()","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20930,"byte_end":20960,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20965,"byte_end":20976,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20981,"byte_end":20988,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":20993,"byte_end":20998,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21003,"byte_end":21021,"line_start":56,"line_end":56,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21026,"byte_end":21033,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21307,"byte_end":21324,"line_start":64,"line_end":64,"column_start":8,"column_end":25},"name":"into_token_stream","qualname":"::to_tokens::ToTokens::into_token_stream","value":"pub fn into_token_stream(Self) -> TokenStream where Self: Sized","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Convert `self` directly into a `TokenStream` object.","sig":null,"attributes":[{"value":"/ Convert `self` directly into a `TokenStream` object.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21090,"byte_end":21146,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21151,"byte_end":21154,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This method is implicitly implemented using `to_tokens`, and acts as a","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21159,"byte_end":21233,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ convenience method for consumers of the `ToTokens` trait.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21238,"byte_end":21299,"line_start":63,"line_end":63,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":3588,"byte_end":3592,"line_start":109,"line_end":109,"column_start":9,"column_end":13},"name":"__rt","qualname":"::__rt","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\lib.rs","byte_start":3681,"byte_end":3686,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"parse","qualname":"::__rt::parse","value":"pub fn parse(&mut TokenStream, Span, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":17192,"byte_end":17203,"line_start":31,"line_end":31,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":19256,"byte_end":19267,"line_start":112,"line_end":112,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21692,"byte_end":21695,"line_start":80,"line_end":80,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21842,"byte_end":21845,"line_start":86,"line_end":86,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21979,"byte_end":21985,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":22281,"byte_end":22287,"line_start":106,"line_end":106,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23305,"byte_end":23310,"line_start":152,"line_end":152,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23429,"byte_end":23434,"line_start":158,"line_end":158,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23553,"byte_end":23558,"line_start":164,"line_end":164,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23677,"byte_end":23684,"line_start":170,"line_end":170,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23803,"byte_end":23812,"line_start":176,"line_end":176,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23925,"byte_end":23936,"line_start":182,"line_end":182,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":16670,"byte_end":16676,"line_start":8,"line_end":8,"column_start":36,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":48},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":17192,"byte_end":17203,"line_start":31,"line_end":31,"column_start":25,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":15,"index":522},"to":{"krate":0,"index":16}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\ext.rs","byte_start":19256,"byte_end":19267,"line_start":112,"line_end":112,"column_start":21,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":15,"index":522},"to":{"krate":0,"index":48}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21692,"byte_end":21695,"line_start":80,"line_end":80,"column_start":55,"column_end":58},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":546},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21842,"byte_end":21845,"line_start":86,"line_end":86,"column_start":41,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":21979,"byte_end":21985,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":43359},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":22281,"byte_end":22287,"line_start":106,"line_end":106,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23305,"byte_end":23310,"line_start":152,"line_end":152,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":15,"index":548},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23429,"byte_end":23434,"line_start":158,"line_end":158,"column_start":19,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":15,"index":596},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23553,"byte_end":23558,"line_start":164,"line_end":164,"column_start":19,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":15,"index":574},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23677,"byte_end":23684,"line_start":170,"line_end":170,"column_start":19,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":15,"index":601},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23803,"byte_end":23812,"line_start":176,"line_end":176,"column_start":19,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":15,"index":533},"to":{"krate":0,"index":82}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-0.6.3\\src\\to_tokens.rs","byte_start":23925,"byte_end":23936,"line_start":182,"line_end":182,"column_start":19,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":15,"index":522},"to":{"krate":0,"index":82}}]}