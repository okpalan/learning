{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5","program":"C:\\Users\\Researchers\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","num_traits","C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=958038c67f366e3f","-C","extra-filename=-958038c67f366e3f","--out-dir","c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","C:\\Users\\Researchers\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Researchers\\Workspace\\learning\\The-Complete-Rust-Programming-Reference-Guide\\Chapter02\\imgtool\\target\\rls\\debug\\deps\\libnum_traits-958038c67f366e3f.rmeta"},"prelude":{"crate_id":{"name":"num_traits","disambiguator":[14598673131821907006,0]},"crate_root":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src","external_crates":[{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[6130085985959571423,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10834538756664496827,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16052532455530240381,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":4,"id":{"name":"std","disambiguator":[10096348926132587111,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9943859611570948275,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2085945775536176072,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9544986399897469044,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17772512906340842432,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2307131819628043677,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8458190703300588207,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5770881746596919874,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[9756748775720564409,0]}},{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13144887679811945557,0]}}],"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":472,"byte_end":16436,"line_start":11,"line_end":473,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":928,"byte_end":935,"line_start":30,"line_end":30,"column_start":17,"column_end":24},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":976,"byte_end":981,"line_start":32,"line_end":32,"column_start":16,"column_end":21},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":998,"byte_end":1008,"line_start":33,"line_end":33,"column_start":16,"column_end":26},"alias_span":null,"name":"FloatConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1123,"byte_end":1127,"line_start":35,"line_end":35,"column_start":22,"column_end":26},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1129,"byte_end":1132,"line_start":35,"line_end":35,"column_start":28,"column_end":31},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1134,"byte_end":1138,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"alias_span":null,"name":"zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1140,"byte_end":1143,"line_start":35,"line_end":35,"column_start":39,"column_end":42},"alias_span":null,"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1164,"byte_end":1167,"line_start":36,"line_end":36,"column_start":19,"column_end":22},"alias_span":null,"name":"Inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1192,"byte_end":1202,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1204,"byte_end":1214,"line_start":37,"line_end":37,"column_start":36,"column_end":46},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1216,"byte_end":1226,"line_start":37,"line_end":37,"column_start":48,"column_end":58},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1228,"byte_end":1238,"line_start":37,"line_end":37,"column_start":60,"column_end":70},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1263,"byte_end":1273,"line_start":38,"line_end":38,"column_start":24,"column_end":34},"alias_span":null,"name":"CheckedRem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1275,"byte_end":1285,"line_start":38,"line_end":38,"column_start":36,"column_end":46},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1287,"byte_end":1297,"line_start":38,"line_end":38,"column_start":48,"column_end":58},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1299,"byte_end":1309,"line_start":38,"line_end":38,"column_start":60,"column_end":70},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1336,"byte_end":1347,"line_start":39,"line_end":39,"column_start":25,"column_end":36},"alias_span":null,"name":"WrappingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1349,"byte_end":1360,"line_start":39,"line_end":39,"column_start":38,"column_end":49},"alias_span":null,"name":"WrappingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1362,"byte_end":1373,"line_start":39,"line_end":39,"column_start":51,"column_end":62},"alias_span":null,"name":"WrappingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1399,"byte_end":1405,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"alias_span":null,"name":"MulAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1407,"byte_end":1419,"line_start":40,"line_end":40,"column_start":32,"column_end":44},"alias_span":null,"name":"MulAddAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1447,"byte_end":1457,"line_start":41,"line_end":41,"column_start":26,"column_end":36},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1474,"byte_end":1480,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1482,"byte_end":1490,"line_start":42,"line_end":42,"column_start":24,"column_end":32},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1492,"byte_end":1495,"line_start":42,"line_end":42,"column_start":34,"column_end":37},"alias_span":null,"name":"abs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1497,"byte_end":1504,"line_start":42,"line_end":42,"column_start":39,"column_end":46},"alias_span":null,"name":"abs_sub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1506,"byte_end":1512,"line_start":42,"line_end":42,"column_start":48,"column_end":54},"alias_span":null,"name":"signum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1530,"byte_end":1541,"line_start":43,"line_end":43,"column_start":16,"column_end":27},"alias_span":null,"name":"AsPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1543,"byte_end":1556,"line_start":43,"line_end":43,"column_start":29,"column_end":42},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1558,"byte_end":1569,"line_start":43,"line_end":43,"column_start":44,"column_end":55},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1571,"byte_end":1578,"line_start":43,"line_end":43,"column_start":57,"column_end":64},"alias_span":null,"name":"NumCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1580,"byte_end":1584,"line_start":43,"line_end":43,"column_start":66,"column_end":70},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1600,"byte_end":1607,"line_start":44,"line_end":44,"column_start":14,"column_end":21},"alias_span":null,"name":"PrimInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1623,"byte_end":1626,"line_start":45,"line_end":45,"column_start":15,"column_end":18},"alias_span":null,"name":"Pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1628,"byte_end":1631,"line_start":45,"line_end":45,"column_start":20,"column_end":23},"alias_span":null,"name":"pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1633,"byte_end":1644,"line_start":45,"line_end":45,"column_start":25,"column_end":36},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":472,"byte_end":16436,"line_start":11,"line_end":473,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":191},{"krate":0,"index":229},{"krate":0,"index":347},{"krate":0,"index":408},{"krate":0,"index":530},{"krate":0,"index":594},{"krate":0,"index":712},{"krate":0,"index":764},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":4476},{"krate":0,"index":4479},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4488},{"krate":0,"index":4491},{"krate":0,"index":4494},{"krate":0,"index":4497},{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4506},{"krate":0,"index":4509},{"krate":0,"index":828},{"krate":0,"index":4512},{"krate":0,"index":4517},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":4523},{"krate":0,"index":4533},{"krate":0,"index":835}],"decl_id":null,"docs":" Numeric traits for generic mathematics","sig":null,"attributes":[{"value":"/ Numeric traits for generic mathematics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Compatibility","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":519,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":540,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `num-traits` crate is tested for rustc 1.8 and greater.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":544,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"deny(unconditional_recursion)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":668,"byte_end":701,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":703,"byte_end":713,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":176},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":189}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17812,"byte_end":17816,"line_start":5,"line_end":5,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.\n","sig":null,"attributes":[{"value":"/ Defines an additive identity element for `Self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17749,"byte_end":17801,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18334,"byte_end":18338,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Returns the additive identity element of `Self`, `0`.","sig":null,"attributes":[{"value":"/ Returns the additive identity element of `Self`, `0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17857,"byte_end":17914,"line_start":6,"line_end":6,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17919,"byte_end":17922,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ # Laws","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17927,"byte_end":17937,"line_start":8,"line_end":8,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17942,"byte_end":17945,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ ```{.text}","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17950,"byte_end":17964,"line_start":10,"line_end":10,"column_start":5,"column_end":19}},{"value":"/ a + 0 = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17969,"byte_end":18003,"line_start":11,"line_end":11,"column_start":5,"column_end":35}},{"value":"/ 0 + a = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18008,"byte_end":18042,"line_start":12,"line_end":12,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18047,"byte_end":18054,"line_start":13,"line_end":13,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18059,"byte_end":18062,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Purity","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18067,"byte_end":18079,"line_start":15,"line_end":15,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18084,"byte_end":18087,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18092,"byte_end":18166,"line_start":17,"line_end":17,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18171,"byte_end":18237,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18242,"byte_end":18260,"line_start":19,"line_end":19,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18440,"byte_end":18447,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the additive identity.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18355,"byte_end":18418,"line_start":23,"line_end":23,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":18423,"byte_end":18432,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19315,"byte_end":19318,"line_start":69,"line_end":69,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.\n","sig":null,"attributes":[{"value":"/ Defines a multiplicative identity element for `Self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19247,"byte_end":19304,"line_start":68,"line_end":68,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19842,"byte_end":19845,"line_start":85,"line_end":85,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Returns the multiplicative identity element of `Self`, `1`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity element of `Self`, `1`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19359,"byte_end":19422,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19427,"byte_end":19430,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Laws","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19435,"byte_end":19445,"line_start":72,"line_end":72,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19450,"byte_end":19453,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```{.text}","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19458,"byte_end":19472,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/ a * 1 = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19477,"byte_end":19511,"line_start":75,"line_end":75,"column_start":5,"column_end":35}},{"value":"/ 1 * a = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19516,"byte_end":19550,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19555,"byte_end":19562,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19567,"byte_end":19570,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Purity","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19575,"byte_end":19587,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19592,"byte_end":19595,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19600,"byte_end":19674,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19679,"byte_end":19745,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19750,"byte_end":19768,"line_start":83,"line_end":83,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20154,"byte_end":20160,"line_start":93,"line_end":93,"column_start":8,"column_end":14},"name":"is_one","qualname":"::identities::One::is_one","value":"pub fn is_one(&Self) -> bool where Self: PartialEq","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the multiplicative identity.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the multiplicative identity.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19862,"byte_end":19931,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19936,"byte_end":19939,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ For performance reasons, it's best to implement this manually.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19944,"byte_end":20010,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/ After a semver bump, this method will be required, and the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20015,"byte_end":20077,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ `where Self: PartialEq` bound will be removed.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20082,"byte_end":20132,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20137,"byte_end":20146,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20988,"byte_end":20992,"line_start":135,"line_end":135,"column_start":26,"column_end":30},"name":"zero","qualname":"::identities::zero","value":"pub fn zero<T: Zero>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, `0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20923,"byte_end":20962,"line_start":134,"line_end":134,"column_start":1,"column_end":40}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20963,"byte_end":20980,"line_start":135,"line_end":135,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":21098,"byte_end":21101,"line_start":138,"line_end":138,"column_start":26,"column_end":29},"name":"one","qualname":"::identities::one","value":"pub fn one<T: One>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity, `1`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":21027,"byte_end":21072,"line_start":137,"line_end":137,"column_start":1,"column_end":46}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":21073,"byte_end":21090,"line_start":138,"line_end":138,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":907},{"krate":0,"index":913},{"krate":0,"index":919},{"krate":0,"index":925},{"krate":0,"index":931},{"krate":0,"index":937},{"krate":0,"index":211},{"krate":0,"index":218},{"krate":0,"index":943},{"krate":0,"index":949},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22027,"byte_end":22033,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed: Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[{"value":"/ Useful functions for signed numbers (i.e. numbers that can be negative).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":21940,"byte_end":22016,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22286,"byte_end":22289,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"pub fn abs(&Self) -> Self","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22074,"byte_end":22106,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22111,"byte_end":22114,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22119,"byte_end":22190,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22195,"byte_end":22198,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22203,"byte_end":22278,"line_start":13,"line_end":13,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22514,"byte_end":22521,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"pub fn abs_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22311,"byte_end":22354,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22359,"byte_end":22362,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Returns `zero` if the number is less than or equal to `other`, otherwise the difference","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22367,"byte_end":22458,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/ between `self` and `other` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22463,"byte_end":22506,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22979,"byte_end":22985,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"pub fn signum(&Self) -> Self","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22557,"byte_end":22592,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22597,"byte_end":22600,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22605,"byte_end":22629,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22634,"byte_end":22637,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22642,"byte_end":22701,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22706,"byte_end":22770,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22775,"byte_end":22809,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22814,"byte_end":22817,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For signed integers:","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22822,"byte_end":22846,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22851,"byte_end":22854,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * `0` if the number is zero","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22859,"byte_end":22890,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ * `1` if the number is positive","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22895,"byte_end":22930,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22935,"byte_end":22971,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":23102,"byte_end":23113,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Returns true if the number is positive and false if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is positive and false if the number is zero or negative.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":23007,"byte_end":23094,"line_start":37,"line_end":37,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":23230,"byte_end":23241,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Returns true if the number is negative and false if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is negative and false if the number is zero or positive.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":23135,"byte_end":23222,"line_start":40,"line_end":40,"column_start":5,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26275,"byte_end":26278,"line_start":151,"line_end":151,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"pub fn abs<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26062,"byte_end":26094,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26095,"byte_end":26098,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26099,"byte_end":26169,"line_start":147,"line_end":147,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26170,"byte_end":26173,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26174,"byte_end":26249,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26250,"byte_end":26267,"line_start":150,"line_end":150,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26515,"byte_end":26522,"line_start":160,"line_end":160,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"pub fn abs_sub<T: Signed>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26326,"byte_end":26369,"line_start":155,"line_end":155,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26370,"byte_end":26373,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Returns zero if `x` is less than or equal to `y`, otherwise the difference","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26374,"byte_end":26452,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ between `x` and `y` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26453,"byte_end":26489,"line_start":158,"line_end":158,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26490,"byte_end":26507,"line_start":159,"line_end":159,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26966,"byte_end":26972,"line_start":177,"line_end":177,"column_start":26,"column_end":32},"name":"signum","qualname":"::sign::signum","value":"pub fn signum<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26574,"byte_end":26609,"line_start":164,"line_end":164,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26610,"byte_end":26613,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26614,"byte_end":26638,"line_start":166,"line_end":166,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26639,"byte_end":26642,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26643,"byte_end":26702,"line_start":168,"line_end":168,"column_start":1,"column_end":60}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26703,"byte_end":26767,"line_start":169,"line_end":169,"column_start":1,"column_end":65}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26768,"byte_end":26802,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26803,"byte_end":26806,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ For signed integers:","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26807,"byte_end":26831,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26832,"byte_end":26835,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ * `0` if the number is zero","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26836,"byte_end":26867,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/ * `1` if the number is positive","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26868,"byte_end":26903,"line_start":175,"line_end":175,"column_start":1,"column_end":36}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26904,"byte_end":26940,"line_start":176,"line_end":176,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":26941,"byte_end":26958,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":27077,"byte_end":27085,"line_start":180,"line_end":180,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned: Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[{"value":"/ A trait for values which cannot be negative","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":27019,"byte_end":27066,"line_start":179,"line_end":179,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mod.rs","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":235},{"krate":0,"index":277},{"krate":0,"index":307},{"krate":0,"index":325}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":27937,"byte_end":27947,"line_start":2,"line_end":2,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[{"value":"/ Saturating math operations","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":27896,"byte_end":27926,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":28073,"byte_end":28087,"line_start":5,"line_end":5,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Saturating addition operator.\n Returns a+b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition operator.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":27954,"byte_end":27987,"line_start":3,"line_end":3,"column_start":5,"column_end":38}},{"value":"/ Returns a+b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":27992,"byte_end":28065,"line_start":4,"line_end":4,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":28239,"byte_end":28253,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":" Saturating subtraction operator.\n Returns a-b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction operator.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":28117,"byte_end":28153,"line_start":7,"line_end":7,"column_start":5,"column_end":41}},{"value":"/ Returns a-b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\saturating.rs","byte_start":28158,"byte_end":28231,"line_start":8,"line_end":8,"column_start":5,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":261},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":263},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":265},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":267},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":275},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":28974,"byte_end":28984,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":259}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that returns `None` instead of wrapping around on","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":28878,"byte_end":28949,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":28950,"byte_end":28963,"line_start":4,"line_end":4,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":29124,"byte_end":29135,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"pub fn checked_add(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Adds two numbers, checking for overflow. If overflow happens, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ Adds two numbers, checking for overflow. If overflow happens, `None` is","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":29023,"byte_end":29098,"line_start":6,"line_end":6,"column_start":5,"column_end":80}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":29103,"byte_end":29116,"line_start":7,"line_end":7,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30112,"byte_end":30122,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that returns `None` instead of wrapping around on underflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30016,"byte_end":30101,"line_start":38,"line_end":38,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30269,"byte_end":30280,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"pub fn checked_sub(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Subtracts two numbers, checking for underflow. If underflow happens,\n `None` is returned.\n","sig":null,"attributes":[{"value":"/ Subtracts two numbers, checking for underflow. If underflow happens,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30161,"byte_end":30233,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30238,"byte_end":30261,"line_start":41,"line_end":41,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31013,"byte_end":31023,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":264}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that returns `None` instead of wrapping around on underflow or","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30898,"byte_end":30988,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30989,"byte_end":31002,"line_start":62,"line_end":62,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31195,"byte_end":31206,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"pub fn checked_mul(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Multiplies two numbers, checking for underflow or overflow. If underflow\n or overflow happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Multiplies two numbers, checking for underflow or overflow. If underflow","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31062,"byte_end":31138,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ or overflow happens, `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31143,"byte_end":31187,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31979,"byte_end":31989,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv: Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":266}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs division that returns `None` instead of panicking on division by zero and instead of","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31824,"byte_end":31921,"line_start":85,"line_end":85,"column_start":1,"column_end":98}},{"value":"/ wrapping around on underflow and overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31922,"byte_end":31968,"line_start":86,"line_end":86,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":32167,"byte_end":32178,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"pub fn checked_div(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Divides two numbers, checking for underflow, overflow and division by\n zero. If any of that happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Divides two numbers, checking for underflow, overflow and division by","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":32028,"byte_end":32101,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ zero. If any of that happens, `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":32106,"byte_end":32159,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":32964,"byte_end":32974,"line_start":111,"line_end":111,"column_start":11,"column_end":21},"name":"CheckedRem","qualname":"::ops::checked::CheckedRem","value":"CheckedRem: Sized + Rem<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":268}],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs an integral remainder that returns `None` instead of panicking on division by zero and","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":32796,"byte_end":32895,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"/ instead of wrapping around on underflow and overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":32896,"byte_end":32953,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33768,"byte_end":33779,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::ops::checked::CheckedRem::checked_rem","value":"pub fn checked_rem(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Finds the remainder of dividing two numbers, checking for underflow, overflow and division\n by zero. If any of that happens, `None` is returned.","sig":null,"attributes":[{"value":"/ Finds the remainder of dividing two numbers, checking for underflow, overflow and division","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33015,"byte_end":33109,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ by zero. If any of that happens, `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33114,"byte_end":33170,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33175,"byte_end":33178,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33183,"byte_end":33197,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33202,"byte_end":33205,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33210,"byte_end":33217,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedRem;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33222,"byte_end":33253,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33258,"byte_end":33280,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33285,"byte_end":33288,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &7), Some(3));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33293,"byte_end":33351,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &-7), Some(3));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33356,"byte_end":33415,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &7), Some(-3));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33420,"byte_end":33480,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &-7), Some(-3));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33485,"byte_end":33546,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33551,"byte_end":33554,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &0), None);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33559,"byte_end":33614,"line_start":126,"line_end":126,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33619,"byte_end":33622,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &1), Some(0));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33627,"byte_end":33686,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &-1), None);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33691,"byte_end":33748,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":33753,"byte_end":33760,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34742,"byte_end":34752,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"CheckedNeg","qualname":"::ops::checked::CheckedNeg","value":"CheckedNeg: Sized","parent":null,"children":[{"krate":0,"index":271}],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[{"value":"/ Performs negation that returns `None` if the result can't be represented.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34654,"byte_end":34731,"line_start":161,"line_end":161,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35402,"byte_end":35413,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::ops::checked::CheckedNeg::checked_neg","value":"pub fn checked_neg(&Self) -> Option<Self>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Negates a number, returning `None` for results that can't be represented, like signed `MIN`\n values that can't be positive, or non-zero unsigned values that can't be negative.","sig":null,"attributes":[{"value":"/ Negates a number, returning `None` for results that can't be represented, like signed `MIN`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34766,"byte_end":34861,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ values that can't be positive, or non-zero unsigned values that can't be negative.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34866,"byte_end":34952,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34957,"byte_end":34960,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34965,"byte_end":34979,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34984,"byte_end":34987,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34992,"byte_end":34999,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedNeg;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35004,"byte_end":35035,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35040,"byte_end":35062,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35067,"byte_end":35070,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_i32), Some(-1));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35075,"byte_end":35133,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&-1_i32), Some(1));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35138,"byte_end":35196,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&MIN), None);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35201,"byte_end":35253,"line_start":174,"line_end":174,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35258,"byte_end":35261,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&0_u32), Some(0));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35266,"byte_end":35323,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_u32), None);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35328,"byte_end":35382,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":35387,"byte_end":35394,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36162,"byte_end":36172,"line_start":199,"line_end":199,"column_start":11,"column_end":21},"name":"CheckedShl","qualname":"::ops::checked::CheckedShl","value":"CheckedShl: Sized + Shl<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":273}],"decl_id":null,"docs":" Performs a left shift that returns `None` on overflow.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that returns `None` on overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36093,"byte_end":36151,"line_start":198,"line_end":198,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36695,"byte_end":36706,"line_start":213,"line_end":213,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::ops::checked::CheckedShl::checked_shl","value":"pub fn checked_shl(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Shifts a number to the left, checking for overflow. If overflow happens,\n `None` is returned.","sig":null,"attributes":[{"value":"/ Shifts a number to the left, checking for overflow. If overflow happens,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36210,"byte_end":36286,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36291,"byte_end":36314,"line_start":201,"line_end":201,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36319,"byte_end":36322,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36327,"byte_end":36334,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShl;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36339,"byte_end":36370,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36375,"byte_end":36378,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36383,"byte_end":36407,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36412,"byte_end":36415,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 0),  Some(0x0001));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36420,"byte_end":36482,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 1),  Some(0x0002));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36487,"byte_end":36549,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 15), Some(0x8000));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36554,"byte_end":36616,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 16), None);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36621,"byte_end":36675,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36680,"byte_end":36687,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37738,"byte_end":37748,"line_start":244,"line_end":244,"column_start":11,"column_end":21},"name":"CheckedShr","qualname":"::ops::checked::CheckedShr","value":"CheckedShr: Sized + Shr<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":276}],"decl_id":null,"docs":" Performs a right shift that returns `None` on overflow.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that returns `None` on overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37668,"byte_end":37727,"line_start":243,"line_end":243,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":38271,"byte_end":38282,"line_start":258,"line_end":258,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::ops::checked::CheckedShr::checked_shr","value":"pub fn checked_shr(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Shifts a number to the left, checking for overflow. If overflow happens,\n `None` is returned.","sig":null,"attributes":[{"value":"/ Shifts a number to the left, checking for overflow. If overflow happens,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37786,"byte_end":37862,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37867,"byte_end":37890,"line_start":246,"line_end":246,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37895,"byte_end":37898,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37903,"byte_end":37910,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShr;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37915,"byte_end":37946,"line_start":249,"line_end":249,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37951,"byte_end":37954,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37959,"byte_end":37983,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37988,"byte_end":37991,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 0),  Some(0x8000));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37996,"byte_end":38058,"line_start":253,"line_end":253,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 1),  Some(0x4000));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":38063,"byte_end":38125,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 15), Some(0x0001));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":38130,"byte_end":38192,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 16), None);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":38197,"byte_end":38251,"line_start":256,"line_end":256,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":38256,"byte_end":38263,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":294},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":296},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":39597,"byte_end":39608,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":293}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that wraps around on overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":39534,"byte_end":39586,"line_start":23,"line_end":23,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":39765,"byte_end":39777,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"pub fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":39647,"byte_end":39739,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ the type.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":39744,"byte_end":39757,"line_start":26,"line_end":26,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":40489,"byte_end":40500,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":295}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that wraps around on overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":40423,"byte_end":40478,"line_start":46,"line_end":46,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":40660,"byte_end":40672,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"pub fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":40539,"byte_end":40631,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ of the type.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":40636,"byte_end":40652,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":41387,"byte_end":41398,"line_start":70,"line_end":70,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":297}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that wraps around on overflow.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":41318,"byte_end":41376,"line_start":69,"line_end":69,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":41561,"byte_end":41573,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"pub fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":41437,"byte_end":41532,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ of the type.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":41537,"byte_end":41553,"line_start":72,"line_end":72,"column_start":5,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inv","qualname":"::ops::inv","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":321}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":43988,"byte_end":43991,"line_start":2,"line_end":2,"column_start":11,"column_end":14},"name":"Inv","qualname":"::ops::inv::Inv","value":"Inv","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[{"value":"/ Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":43889,"byte_end":43977,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44051,"byte_end":44057,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::inv::Inv::Output","value":"type Output;","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":43998,"byte_end":44041,"line_start":3,"line_end":3,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44336,"byte_end":44339,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"inv","qualname":"::ops::inv::Inv::inv","value":"pub fn inv(Self) -> Self::Output","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of `self`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of `self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44064,"byte_end":44113,"line_start":6,"line_end":6,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44118,"byte_end":44121,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44126,"byte_end":44140,"line_start":8,"line_end":8,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44145,"byte_end":44148,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44153,"byte_end":44160,"line_start":10,"line_end":10,"column_start":5,"column_end":12}},{"value":"/ use std::f64::INFINITY;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44165,"byte_end":44192,"line_start":11,"line_end":11,"column_start":5,"column_end":32}},{"value":"/ use num_traits::Inv;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44197,"byte_end":44221,"line_start":12,"line_end":12,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44226,"byte_end":44229,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(7.0.inv() * 7.0, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44234,"byte_end":44271,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((-0.0).inv(), -INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44276,"byte_end":44316,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\inv.rs","byte_start":44321,"byte_end":44328,"line_start":16,"line_end":16,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mul_add","qualname":"::ops::mul_add","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":331},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45408,"byte_end":45414,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::ops::mul_add::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":44773,"byte_end":44845,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":44846,"byte_end":44918,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":44919,"byte_end":44922,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":44923,"byte_end":44997,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":44998,"byte_end":45064,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45065,"byte_end":45068,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that `A` and `B` are `Self` by default, but this is not mandatory.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45069,"byte_end":45144,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45145,"byte_end":45148,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45149,"byte_end":45162,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45163,"byte_end":45166,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45167,"byte_end":45174,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45175,"byte_end":45192,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45193,"byte_end":45196,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let m = 10.0_f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45197,"byte_end":45218,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ let x = 4.0_f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45219,"byte_end":45239,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ let b = 60.0_f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45240,"byte_end":45261,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45262,"byte_end":45265,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // 100.0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45266,"byte_end":45278,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45279,"byte_end":45340,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45341,"byte_end":45344,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(abs_difference <= f32::EPSILON);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45345,"byte_end":45389,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45390,"byte_end":45397,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45512,"byte_end":45518,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::mul_add::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[{"value":"/ The resulting type after applying the fused multiply-add.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45441,"byte_end":45502,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45579,"byte_end":45586,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::ops::mul_add::MulAdd::mul_add","value":"pub fn mul_add(Self, A, B) -> Self::Output","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45525,"byte_end":45571,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45684,"byte_end":45696,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"MulAddAssign","qualname":"::ops::mul_add::MulAddAssign","value":"MulAddAssign<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":334}],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[{"value":"/ The fused multiply-add assignment operation.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45625,"byte_end":45673,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45777,"byte_end":45791,"line_start":34,"line_end":34,"column_start":8,"column_end":22},"name":"mul_add_assign","qualname":"::ops::mul_add::MulAddAssign::mul_add_assign","value":"pub fn mul_add_assign(&mut Self, A, B)","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mul_add.rs","byte_start":45723,"byte_end":45769,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":401},{"krate":0,"index":1357},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":1360},{"krate":0,"index":1383},{"krate":0,"index":1405},{"krate":0,"index":1426},{"krate":0,"index":1446},{"krate":0,"index":1465},{"krate":0,"index":1483},{"krate":0,"index":1500},{"krate":0,"index":1516},{"krate":0,"index":1531},{"krate":0,"index":1545},{"krate":0,"index":1558},{"krate":0,"index":1570},{"krate":0,"index":1581},{"krate":0,"index":1591},{"krate":0,"index":1600},{"krate":0,"index":1608},{"krate":0,"index":1615},{"krate":0,"index":1621},{"krate":0,"index":1626},{"krate":0,"index":1630},{"krate":0,"index":1633}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":48752,"byte_end":48759,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[{"value":"/ Numbers which have upper and lower bounds","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":48696,"byte_end":48741,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":48895,"byte_end":48904,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" returns the smallest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the smallest finite number this type can represent","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":48825,"byte_end":48887,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":48989,"byte_end":48998,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" returns the largest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the largest finite number this type can represent","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":48920,"byte_end":48981,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":1692},{"krate":0,"index":1750},{"krate":0,"index":529},{"krate":0,"index":1808},{"krate":0,"index":1825},{"krate":0,"index":1842}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52003,"byte_end":52012,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"FloatCore","qualname":"::float::FloatCore","value":"FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers that works with `no_std`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":51861,"byte_end":51931,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":51932,"byte_end":51935,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait implements a subset of the `Float` trait.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":51936,"byte_end":51992,"line_start":12,"line_end":12,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52409,"byte_end":52417,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::FloatCore::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns positive infinity.","sig":null,"attributes":[{"value":"/ Returns positive infinity.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52075,"byte_end":52105,"line_start":14,"line_end":14,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52110,"byte_end":52113,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52118,"byte_end":52132,"line_start":16,"line_end":16,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52137,"byte_end":52140,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52145,"byte_end":52152,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52157,"byte_end":52194,"line_start":19,"line_end":19,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52199,"byte_end":52223,"line_start":20,"line_end":20,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52228,"byte_end":52231,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52236,"byte_end":52270,"line_start":22,"line_end":22,"column_start":5,"column_end":39}},{"value":"/     assert!(T::infinity() == x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52275,"byte_end":52311,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52316,"byte_end":52321,"line_start":24,"line_end":24,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52326,"byte_end":52329,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52334,"byte_end":52359,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/ check(f64::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52364,"byte_end":52389,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52394,"byte_end":52401,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52780,"byte_end":52792,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::FloatCore::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns negative infinity.","sig":null,"attributes":[{"value":"/ Returns negative infinity.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52434,"byte_end":52464,"line_start":31,"line_end":31,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52469,"byte_end":52472,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52477,"byte_end":52491,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52496,"byte_end":52499,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52504,"byte_end":52511,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52516,"byte_end":52553,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52558,"byte_end":52582,"line_start":37,"line_end":37,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52587,"byte_end":52590,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52595,"byte_end":52629,"line_start":39,"line_end":39,"column_start":5,"column_end":39}},{"value":"/     assert!(T::neg_infinity() == x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52634,"byte_end":52674,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52679,"byte_end":52684,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52689,"byte_end":52692,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52697,"byte_end":52726,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52731,"byte_end":52760,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52765,"byte_end":52772,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53102,"byte_end":53105,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::FloatCore::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns NaN.","sig":null,"attributes":[{"value":"/ Returns NaN.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52809,"byte_end":52825,"line_start":48,"line_end":48,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52830,"byte_end":52833,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52838,"byte_end":52852,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52857,"byte_end":52860,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52865,"byte_end":52872,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52877,"byte_end":52914,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52919,"byte_end":52922,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>() {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52927,"byte_end":52957,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/     let n = T::nan();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52962,"byte_end":52987,"line_start":56,"line_end":56,"column_start":5,"column_end":30}},{"value":"/     assert!(n != n);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52992,"byte_end":53016,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53021,"byte_end":53026,"line_start":58,"line_end":58,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53031,"byte_end":53034,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ check::<f32>();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53039,"byte_end":53058,"line_start":60,"line_end":60,"column_start":5,"column_end":24}},{"value":"/ check::<f64>();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53063,"byte_end":53082,"line_start":61,"line_end":61,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53087,"byte_end":53094,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53521,"byte_end":53529,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::FloatCore::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53122,"byte_end":53141,"line_start":65,"line_end":65,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53146,"byte_end":53149,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53154,"byte_end":53168,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53173,"byte_end":53176,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53181,"byte_end":53188,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53193,"byte_end":53230,"line_start":70,"line_end":70,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53235,"byte_end":53259,"line_start":71,"line_end":71,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53264,"byte_end":53267,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(n: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53272,"byte_end":53306,"line_start":73,"line_end":73,"column_start":5,"column_end":39}},{"value":"/     let z = T::neg_zero();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53311,"byte_end":53341,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     assert!(z.is_zero());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53346,"byte_end":53375,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/     assert!(T::one() / z == n);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53380,"byte_end":53415,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53420,"byte_end":53425,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53430,"byte_end":53433,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53438,"byte_end":53467,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53472,"byte_end":53501,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53506,"byte_end":53513,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53908,"byte_end":53917,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::FloatCore::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53546,"byte_end":53613,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53618,"byte_end":53621,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53626,"byte_end":53640,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53645,"byte_end":53648,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53653,"byte_end":53660,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53665,"byte_end":53702,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53707,"byte_end":53731,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53736,"byte_end":53739,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53744,"byte_end":53778,"line_start":92,"line_end":92,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_value() == x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53783,"byte_end":53820,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53825,"byte_end":53830,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53835,"byte_end":53838,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53843,"byte_end":53863,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ check(f64::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53868,"byte_end":53888,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53893,"byte_end":53900,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54337,"byte_end":54355,"line_start":116,"line_end":116,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::FloatCore::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":53934,"byte_end":54015,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54020,"byte_end":54023,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54028,"byte_end":54042,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54047,"byte_end":54050,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54055,"byte_end":54062,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54067,"byte_end":54104,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54109,"byte_end":54133,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54138,"byte_end":54141,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54146,"byte_end":54180,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_positive_value() == x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54185,"byte_end":54231,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54236,"byte_end":54241,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54246,"byte_end":54249,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54254,"byte_end":54283,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ check(f64::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54288,"byte_end":54317,"line_start":114,"line_end":114,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54322,"byte_end":54329,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54717,"byte_end":54724,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::FloatCore::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54372,"byte_end":54416,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54421,"byte_end":54424,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54429,"byte_end":54443,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54448,"byte_end":54451,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54456,"byte_end":54463,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54468,"byte_end":54505,"line_start":123,"line_end":123,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54510,"byte_end":54534,"line_start":124,"line_end":124,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54539,"byte_end":54542,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54547,"byte_end":54581,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/     assert!(T::epsilon() == x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54586,"byte_end":54621,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54626,"byte_end":54631,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54636,"byte_end":54639,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ check(f32::EPSILON);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54644,"byte_end":54668,"line_start":130,"line_end":130,"column_start":5,"column_end":29}},{"value":"/ check(f64::EPSILON);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54673,"byte_end":54697,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54702,"byte_end":54709,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55102,"byte_end":55111,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::FloatCore::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54741,"byte_end":54807,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54812,"byte_end":54815,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54820,"byte_end":54834,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54839,"byte_end":54842,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54847,"byte_end":54854,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54859,"byte_end":54896,"line_start":140,"line_end":140,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54901,"byte_end":54925,"line_start":141,"line_end":141,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54930,"byte_end":54933,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54938,"byte_end":54972,"line_start":143,"line_end":143,"column_start":5,"column_end":39}},{"value":"/     assert!(T::max_value() == x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":54977,"byte_end":55014,"line_start":144,"line_end":144,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55019,"byte_end":55024,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55029,"byte_end":55032,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55037,"byte_end":55057,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/ check(f64::MAX);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55062,"byte_end":55082,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55087,"byte_end":55094,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55561,"byte_end":55567,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::FloatCore::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns `true` if the number is NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is NaN.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55128,"byte_end":55168,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55173,"byte_end":55176,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55181,"byte_end":55195,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55200,"byte_end":55203,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55208,"byte_end":55215,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55220,"byte_end":55257,"line_start":157,"line_end":157,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55262,"byte_end":55286,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55291,"byte_end":55294,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55299,"byte_end":55342,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_nan() == p);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55347,"byte_end":55380,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55385,"byte_end":55390,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55395,"byte_end":55398,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ check(f32::NAN, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55403,"byte_end":55429,"line_start":164,"line_end":164,"column_start":5,"column_end":31}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55434,"byte_end":55466,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/ check(f64::NAN, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55471,"byte_end":55497,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55502,"byte_end":55527,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55532,"byte_end":55539,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55544,"byte_end":55553,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56144,"byte_end":56155,"line_start":194,"line_end":194,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::FloatCore::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns `true` if the number is infinite.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is infinite.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55616,"byte_end":55661,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55666,"byte_end":55669,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55674,"byte_end":55688,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55693,"byte_end":55696,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55701,"byte_end":55708,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55713,"byte_end":55750,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55755,"byte_end":55779,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55784,"byte_end":55787,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55792,"byte_end":55835,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_infinite() == p);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55840,"byte_end":55878,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55883,"byte_end":55888,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55893,"byte_end":55896,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55901,"byte_end":55932,"line_start":186,"line_end":186,"column_start":5,"column_end":36}},{"value":"/ check(f32::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55937,"byte_end":55972,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"/ check(f32::NAN, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":55977,"byte_end":56004,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ check(f64::INFINITY, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56009,"byte_end":56040,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56045,"byte_end":56080,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56085,"byte_end":56110,"line_start":191,"line_end":191,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56115,"byte_end":56122,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56127,"byte_end":56136,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56756,"byte_end":56765,"line_start":217,"line_end":217,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::FloatCore::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither infinite or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither infinite or NaN.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56248,"byte_end":56308,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56313,"byte_end":56316,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56321,"byte_end":56335,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56340,"byte_end":56343,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56348,"byte_end":56355,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56360,"byte_end":56397,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56402,"byte_end":56426,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56431,"byte_end":56434,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56439,"byte_end":56482,"line_start":206,"line_end":206,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_finite() == p);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56487,"byte_end":56523,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56528,"byte_end":56533,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56538,"byte_end":56541,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56546,"byte_end":56578,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56583,"byte_end":56609,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56614,"byte_end":56650,"line_start":212,"line_end":212,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56655,"byte_end":56690,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56695,"byte_end":56722,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56727,"byte_end":56734,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56739,"byte_end":56748,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57363,"byte_end":57372,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::FloatCore::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite, subnormal or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite, subnormal or NaN.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56840,"byte_end":56917,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56922,"byte_end":56925,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56930,"byte_end":56944,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56949,"byte_end":56952,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56957,"byte_end":56964,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":56969,"byte_end":57006,"line_start":226,"line_end":226,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57011,"byte_end":57035,"line_start":227,"line_end":227,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57040,"byte_end":57043,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57048,"byte_end":57091,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_normal() == p);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57096,"byte_end":57132,"line_start":230,"line_end":230,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57137,"byte_end":57142,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57147,"byte_end":57150,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57155,"byte_end":57187,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57192,"byte_end":57218,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57223,"byte_end":57259,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57264,"byte_end":57299,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57304,"byte_end":57329,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57334,"byte_end":57341,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57346,"byte_end":57355,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58211,"byte_end":58219,"line_start":266,"line_end":266,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::FloatCore::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57446,"byte_end":57521,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57526,"byte_end":57595,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57600,"byte_end":57622,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57627,"byte_end":57630,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57635,"byte_end":57649,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57654,"byte_end":57657,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57662,"byte_end":57669,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57674,"byte_end":57711,"line_start":251,"line_end":251,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57716,"byte_end":57740,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57745,"byte_end":57774,"line_start":253,"line_end":253,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57779,"byte_end":57782,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, c: FpCategory) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57787,"byte_end":57836,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/     assert!(x.classify() == c);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57841,"byte_end":57876,"line_start":256,"line_end":256,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57881,"byte_end":57886,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57891,"byte_end":57894,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, FpCategory::Infinite);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57899,"byte_end":57946,"line_start":259,"line_end":259,"column_start":5,"column_end":52}},{"value":"/ check(f32::MAX, FpCategory::Normal);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57951,"byte_end":57991,"line_start":260,"line_end":260,"column_start":5,"column_end":45}},{"value":"/ check(f64::NAN, FpCategory::Nan);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":57996,"byte_end":58033,"line_start":261,"line_end":261,"column_start":5,"column_end":42}},{"value":"/ check(f64::MIN_POSITIVE, FpCategory::Normal);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58038,"byte_end":58087,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ check(f64::MIN_POSITIVE / 2.0, FpCategory::Subnormal);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58092,"byte_end":58150,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/ check(0.0f64, FpCategory::Zero);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58155,"byte_end":58191,"line_start":264,"line_end":264,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58196,"byte_end":58203,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58852,"byte_end":58857,"line_start":291,"line_end":291,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::FloatCore::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58246,"byte_end":58309,"line_start":268,"line_end":268,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58314,"byte_end":58317,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58322,"byte_end":58336,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58341,"byte_end":58344,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58349,"byte_end":58356,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58361,"byte_end":58398,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58403,"byte_end":58427,"line_start":274,"line_end":274,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58432,"byte_end":58435,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58440,"byte_end":58480,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/     assert!(x.floor() == y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58485,"byte_end":58517,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58522,"byte_end":58527,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58532,"byte_end":58535,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58540,"byte_end":58580,"line_start":280,"line_end":280,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58585,"byte_end":58608,"line_start":281,"line_end":281,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58613,"byte_end":58636,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58641,"byte_end":58664,"line_start":283,"line_end":283,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58669,"byte_end":58693,"line_start":284,"line_end":284,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58698,"byte_end":58723,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58728,"byte_end":58753,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -2.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58758,"byte_end":58783,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58788,"byte_end":58818,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58823,"byte_end":58830,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":58835,"byte_end":58844,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59703,"byte_end":59707,"line_start":325,"line_end":325,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::FloatCore::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59094,"byte_end":59161,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59166,"byte_end":59169,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59174,"byte_end":59188,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59193,"byte_end":59196,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59201,"byte_end":59208,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59213,"byte_end":59250,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59255,"byte_end":59279,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59284,"byte_end":59287,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59292,"byte_end":59332,"line_start":310,"line_end":310,"column_start":5,"column_end":45}},{"value":"/     assert!(x.ceil() == y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59337,"byte_end":59368,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59373,"byte_end":59378,"line_start":312,"line_end":312,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59383,"byte_end":59386,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59391,"byte_end":59431,"line_start":314,"line_end":314,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59436,"byte_end":59459,"line_start":315,"line_end":315,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59464,"byte_end":59487,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 2.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59492,"byte_end":59515,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59520,"byte_end":59544,"line_start":318,"line_end":318,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59549,"byte_end":59574,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59579,"byte_end":59604,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59609,"byte_end":59634,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59639,"byte_end":59669,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59674,"byte_end":59681,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59686,"byte_end":59695,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60539,"byte_end":60544,"line_start":358,"line_end":358,"column_start":8,"column_end":13},"name":"round","qualname":"::float::FloatCore::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from `0.0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":59944,"byte_end":60026,"line_start":336,"line_end":336,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60031,"byte_end":60034,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60039,"byte_end":60053,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60058,"byte_end":60061,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60066,"byte_end":60073,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60078,"byte_end":60115,"line_start":341,"line_end":341,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60120,"byte_end":60144,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60149,"byte_end":60152,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60157,"byte_end":60197,"line_start":344,"line_end":344,"column_start":5,"column_end":45}},{"value":"/     assert!(x.round() == y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60202,"byte_end":60234,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60239,"byte_end":60244,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60249,"byte_end":60252,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60257,"byte_end":60297,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/ check(0.4f32, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60302,"byte_end":60325,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/ check(0.5f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60330,"byte_end":60353,"line_start":350,"line_end":350,"column_start":5,"column_end":28}},{"value":"/ check(0.6f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60358,"byte_end":60381,"line_start":351,"line_end":351,"column_start":5,"column_end":28}},{"value":"/ check(-0.4f64, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60386,"byte_end":60410,"line_start":352,"line_end":352,"column_start":5,"column_end":29}},{"value":"/ check(-0.5f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60415,"byte_end":60440,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/ check(-0.6f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60445,"byte_end":60470,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60475,"byte_end":60505,"line_start":355,"line_end":355,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60510,"byte_end":60517,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":60522,"byte_end":60531,"line_start":357,"line_end":357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61635,"byte_end":61640,"line_start":402,"line_end":402,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::FloatCore::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61052,"byte_end":61092,"line_start":379,"line_end":379,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61097,"byte_end":61100,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61105,"byte_end":61119,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61124,"byte_end":61127,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61132,"byte_end":61139,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61144,"byte_end":61181,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61186,"byte_end":61210,"line_start":385,"line_end":385,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61215,"byte_end":61218,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61223,"byte_end":61263,"line_start":387,"line_end":387,"column_start":5,"column_end":45}},{"value":"/     assert!(x.trunc() == y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61268,"byte_end":61300,"line_start":388,"line_end":388,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61305,"byte_end":61310,"line_start":389,"line_end":389,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61315,"byte_end":61318,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61323,"byte_end":61363,"line_start":391,"line_end":391,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61368,"byte_end":61391,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61396,"byte_end":61419,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61424,"byte_end":61447,"line_start":394,"line_end":394,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61452,"byte_end":61476,"line_start":395,"line_end":395,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61481,"byte_end":61506,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61511,"byte_end":61536,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61541,"byte_end":61566,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61571,"byte_end":61601,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61606,"byte_end":61613,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61618,"byte_end":61627,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62361,"byte_end":62366,"line_start":434,"line_end":434,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::FloatCore::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61787,"byte_end":61831,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61836,"byte_end":61839,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61844,"byte_end":61858,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61863,"byte_end":61866,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61871,"byte_end":61878,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61883,"byte_end":61920,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61925,"byte_end":61949,"line_start":417,"line_end":417,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61954,"byte_end":61957,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":61962,"byte_end":62002,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/     assert!(x.fract() == y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62007,"byte_end":62039,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62044,"byte_end":62049,"line_start":421,"line_end":421,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62054,"byte_end":62057,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62062,"byte_end":62087,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/ check(0.75f32, 0.75);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62092,"byte_end":62117,"line_start":424,"line_end":424,"column_start":5,"column_end":30}},{"value":"/ check(1.0f32, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62122,"byte_end":62145,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ check(1.25f32, 0.25);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62150,"byte_end":62175,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62180,"byte_end":62204,"line_start":427,"line_end":427,"column_start":5,"column_end":29}},{"value":"/ check(-0.75f64, -0.75);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62209,"byte_end":62236,"line_start":428,"line_end":428,"column_start":5,"column_end":32}},{"value":"/ check(-1.0f64, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62241,"byte_end":62265,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ check(-1.25f64, -0.25);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62270,"byte_end":62297,"line_start":430,"line_end":430,"column_start":5,"column_end":32}},{"value":"/ check(f64::MIN, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62302,"byte_end":62327,"line_start":431,"line_end":431,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62332,"byte_end":62339,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62344,"byte_end":62353,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63071,"byte_end":63074,"line_start":463,"line_end":463,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatCore::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `FloatCore::nan()` if the\n number is `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `FloatCore::nan()` if the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62505,"byte_end":62581,"line_start":442,"line_end":442,"column_start":5,"column_end":81}},{"value":"/ number is `FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62586,"byte_end":62619,"line_start":443,"line_end":443,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62624,"byte_end":62627,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62632,"byte_end":62646,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62651,"byte_end":62654,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62659,"byte_end":62666,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62671,"byte_end":62708,"line_start":448,"line_end":448,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62713,"byte_end":62737,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62742,"byte_end":62745,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62750,"byte_end":62790,"line_start":451,"line_end":451,"column_start":5,"column_end":45}},{"value":"/     assert!(x.abs() == y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62795,"byte_end":62825,"line_start":452,"line_end":452,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62830,"byte_end":62835,"line_start":453,"line_end":453,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62840,"byte_end":62843,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62848,"byte_end":62888,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62893,"byte_end":62916,"line_start":456,"line_end":456,"column_start":5,"column_end":28}},{"value":"/ check(0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62921,"byte_end":62944,"line_start":457,"line_end":457,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62949,"byte_end":62973,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ check(-1.0f64, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":62978,"byte_end":63002,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ check(f64::MIN, f64::MAX);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63007,"byte_end":63037,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63042,"byte_end":63049,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63054,"byte_end":63063,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63998,"byte_end":64004,"line_start":497,"line_end":497,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::FloatCore::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63267,"byte_end":63323,"line_start":473,"line_end":473,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63328,"byte_end":63331,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `FloatCore::infinity()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63336,"byte_end":63408,"line_start":475,"line_end":475,"column_start":5,"column_end":77}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `FloatCore::neg_infinity()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63413,"byte_end":63490,"line_start":476,"line_end":476,"column_start":5,"column_end":82}},{"value":"/ - `FloatCore::nan()` if the number is `FloatCore::nan()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63495,"byte_end":63555,"line_start":477,"line_end":477,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63560,"byte_end":63563,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63568,"byte_end":63582,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63587,"byte_end":63590,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63595,"byte_end":63602,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63607,"byte_end":63644,"line_start":482,"line_end":482,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63649,"byte_end":63673,"line_start":483,"line_end":483,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63678,"byte_end":63681,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63686,"byte_end":63726,"line_start":485,"line_end":485,"column_start":5,"column_end":45}},{"value":"/     assert!(x.signum() == y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63731,"byte_end":63764,"line_start":486,"line_end":486,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63769,"byte_end":63774,"line_start":487,"line_end":487,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63779,"byte_end":63782,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63787,"byte_end":63817,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/ check(3.0f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63822,"byte_end":63845,"line_start":490,"line_end":490,"column_start":5,"column_end":28}},{"value":"/ check(0.0f32, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63850,"byte_end":63873,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63878,"byte_end":63903,"line_start":492,"line_end":492,"column_start":5,"column_end":30}},{"value":"/ check(-3.0f64, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63908,"byte_end":63933,"line_start":493,"line_end":493,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63938,"byte_end":63964,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63969,"byte_end":63976,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":63981,"byte_end":63990,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64866,"byte_end":64882,"line_start":530,"line_end":530,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::FloatCore::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0` and\n `FloatCore::infinity()`, and since Rust 1.20 also\n `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0` and","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64203,"byte_end":64265,"line_start":507,"line_end":507,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::infinity()`, and since Rust 1.20 also","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64270,"byte_end":64323,"line_start":508,"line_end":508,"column_start":5,"column_end":58}},{"value":"/ `FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64328,"byte_end":64351,"line_start":509,"line_end":509,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64356,"byte_end":64359,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64364,"byte_end":64378,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64383,"byte_end":64386,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64391,"byte_end":64398,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64403,"byte_end":64440,"line_start":514,"line_end":514,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64445,"byte_end":64469,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64474,"byte_end":64477,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64482,"byte_end":64525,"line_start":517,"line_end":517,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_positive() == p);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64530,"byte_end":64573,"line_start":518,"line_end":518,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64578,"byte_end":64583,"line_start":519,"line_end":519,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64588,"byte_end":64591,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64596,"byte_end":64627,"line_start":521,"line_end":521,"column_start":5,"column_end":36}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64632,"byte_end":64658,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ check(0.0f32, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64663,"byte_end":64687,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ check(-0.0f64, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64692,"byte_end":64718,"line_start":524,"line_end":524,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64723,"byte_end":64759,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64764,"byte_end":64799,"line_start":526,"line_end":526,"column_start":5,"column_end":40}},{"value":"/ check(-f64::NAN, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64804,"byte_end":64832,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64837,"byte_end":64844,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64849,"byte_end":64858,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65612,"byte_end":65628,"line_start":557,"line_end":557,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::FloatCore::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0` and\n `FloatCore::neg_infinity()`, and since Rust 1.20 also\n `-FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0` and","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":64943,"byte_end":65005,"line_start":534,"line_end":534,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::neg_infinity()`, and since Rust 1.20 also","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65010,"byte_end":65067,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/ `-FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65072,"byte_end":65096,"line_start":536,"line_end":536,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65101,"byte_end":65104,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65109,"byte_end":65123,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65128,"byte_end":65131,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65136,"byte_end":65143,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65148,"byte_end":65185,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65190,"byte_end":65214,"line_start":542,"line_end":542,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65219,"byte_end":65222,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65227,"byte_end":65270,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_negative() == p);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65275,"byte_end":65318,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65323,"byte_end":65328,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65333,"byte_end":65336,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65341,"byte_end":65373,"line_start":548,"line_end":548,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65378,"byte_end":65405,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/ check(0.0f32, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65410,"byte_end":65435,"line_start":550,"line_end":550,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65440,"byte_end":65465,"line_start":551,"line_end":551,"column_start":5,"column_end":30}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65470,"byte_end":65505,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/ check(f64::MIN_POSITIVE, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65510,"byte_end":65546,"line_start":553,"line_end":553,"column_start":5,"column_end":41}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65551,"byte_end":65578,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65583,"byte_end":65590,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65595,"byte_end":65604,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66261,"byte_end":66264,"line_start":582,"line_end":582,"column_start":8,"column_end":11},"name":"min","qualname":"::float::FloatCore::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65723,"byte_end":65766,"line_start":562,"line_end":562,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65771,"byte_end":65774,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65779,"byte_end":65851,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65856,"byte_end":65859,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65864,"byte_end":65878,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65883,"byte_end":65886,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65891,"byte_end":65898,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65903,"byte_end":65940,"line_start":569,"line_end":569,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65945,"byte_end":65969,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65974,"byte_end":65977,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":65982,"byte_end":66030,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/     assert!(x.min(y) == min);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66035,"byte_end":66068,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66073,"byte_end":66078,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66083,"byte_end":66086,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66091,"byte_end":66119,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/ check(f32::NAN, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66124,"byte_end":66154,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, -2.0, -2.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66159,"byte_end":66189,"line_start":578,"line_end":578,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, f64::NAN, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66194,"byte_end":66227,"line_start":579,"line_end":579,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66232,"byte_end":66239,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66244,"byte_end":66253,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67021,"byte_end":67024,"line_start":612,"line_end":612,"column_start":8,"column_end":11},"name":"max","qualname":"::float::FloatCore::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66479,"byte_end":66522,"line_start":592,"line_end":592,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66527,"byte_end":66530,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66535,"byte_end":66607,"line_start":594,"line_end":594,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66612,"byte_end":66615,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66620,"byte_end":66634,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66639,"byte_end":66642,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66647,"byte_end":66654,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66659,"byte_end":66696,"line_start":599,"line_end":599,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66701,"byte_end":66725,"line_start":600,"line_end":600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66730,"byte_end":66733,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66738,"byte_end":66786,"line_start":602,"line_end":602,"column_start":5,"column_end":53}},{"value":"/     assert!(x.max(y) == min);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66791,"byte_end":66824,"line_start":603,"line_end":603,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66829,"byte_end":66834,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66839,"byte_end":66842,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66847,"byte_end":66875,"line_start":606,"line_end":606,"column_start":5,"column_end":33}},{"value":"/ check(1.0f32, f32::NAN, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66880,"byte_end":66913,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"/ check(-1.0f64, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66918,"byte_end":66947,"line_start":608,"line_end":608,"column_start":5,"column_end":34}},{"value":"/ check(-1.0f64, f64::NAN, -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66952,"byte_end":66987,"line_start":609,"line_end":609,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":66992,"byte_end":66999,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67004,"byte_end":67013,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67739,"byte_end":67744,"line_start":641,"line_end":641,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::FloatCore::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the reciprocal (multiplicative inverse) of the number.","sig":null,"attributes":[{"value":"/ Returns the reciprocal (multiplicative inverse) of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67239,"byte_end":67305,"line_start":622,"line_end":622,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67310,"byte_end":67313,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67318,"byte_end":67332,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67337,"byte_end":67340,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67345,"byte_end":67352,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67357,"byte_end":67394,"line_start":627,"line_end":627,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67399,"byte_end":67423,"line_start":628,"line_end":628,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67428,"byte_end":67431,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67436,"byte_end":67476,"line_start":630,"line_end":630,"column_start":5,"column_end":45}},{"value":"/     assert!(x.recip() == y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67481,"byte_end":67513,"line_start":631,"line_end":631,"column_start":5,"column_end":37}},{"value":"/     assert!(y.recip() == x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67518,"byte_end":67550,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67555,"byte_end":67560,"line_start":633,"line_end":633,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67565,"byte_end":67568,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67573,"byte_end":67603,"line_start":635,"line_end":635,"column_start":5,"column_end":35}},{"value":"/ check(2.0f32, 0.5);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67608,"byte_end":67631,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/ check(-0.25f64, -4.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67636,"byte_end":67662,"line_start":637,"line_end":637,"column_start":5,"column_end":31}},{"value":"/ check(-0.0f64, f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67667,"byte_end":67705,"line_start":638,"line_end":638,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67710,"byte_end":67717,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67722,"byte_end":67731,"line_start":640,"line_end":640,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68338,"byte_end":68342,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::FloatCore::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67799,"byte_end":67838,"line_start":645,"line_end":645,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67843,"byte_end":67846,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67851,"byte_end":67912,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67917,"byte_end":67920,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67925,"byte_end":67939,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67944,"byte_end":67947,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67952,"byte_end":67959,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":67964,"byte_end":68001,"line_start":652,"line_end":652,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68006,"byte_end":68009,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, exp: i32, powi: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68014,"byte_end":68067,"line_start":654,"line_end":654,"column_start":5,"column_end":58}},{"value":"/     assert!(x.powi(exp) == powi);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68072,"byte_end":68109,"line_start":655,"line_end":655,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68114,"byte_end":68119,"line_start":656,"line_end":656,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68124,"byte_end":68127,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ check(9.0f32, 2, 81.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68132,"byte_end":68159,"line_start":658,"line_end":658,"column_start":5,"column_end":32}},{"value":"/ check(1.0f32, -2, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68164,"byte_end":68191,"line_start":659,"line_end":659,"column_start":5,"column_end":32}},{"value":"/ check(10.0f64, 20, 1e20);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68196,"byte_end":68225,"line_start":660,"line_end":660,"column_start":5,"column_end":34}},{"value":"/ check(4.0f64, -2, 0.0625);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68230,"byte_end":68260,"line_start":661,"line_end":661,"column_start":5,"column_end":35}},{"value":"/ check(-1.0f64, std::i32::MIN, 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68265,"byte_end":68304,"line_start":662,"line_end":662,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68309,"byte_end":68316,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68321,"byte_end":68330,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69259,"byte_end":69269,"line_start":693,"line_end":693,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::FloatCore::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Converts to degrees, assuming the number is in radians.","sig":null,"attributes":[{"value":"/ Converts to degrees, assuming the number is in radians.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68784,"byte_end":68843,"line_start":676,"line_end":676,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68848,"byte_end":68851,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68856,"byte_end":68870,"line_start":678,"line_end":678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68875,"byte_end":68878,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68883,"byte_end":68890,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68895,"byte_end":68932,"line_start":681,"line_end":681,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68937,"byte_end":68961,"line_start":682,"line_end":682,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68966,"byte_end":68969,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(rad: T, deg: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":68974,"byte_end":69018,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/     assert!(rad.to_degrees() == deg);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69023,"byte_end":69064,"line_start":685,"line_end":685,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69069,"byte_end":69074,"line_start":686,"line_end":686,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69079,"byte_end":69082,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69087,"byte_end":69110,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/ check(f32::consts::PI, 180.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69115,"byte_end":69149,"line_start":689,"line_end":689,"column_start":5,"column_end":39}},{"value":"/ check(f64::consts::FRAC_PI_4, 45.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69154,"byte_end":69194,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69199,"byte_end":69239,"line_start":691,"line_end":691,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69244,"byte_end":69251,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69765,"byte_end":69775,"line_start":712,"line_end":712,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::FloatCore::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Converts to radians, assuming the number is in degrees.","sig":null,"attributes":[{"value":"/ Converts to radians, assuming the number is in degrees.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69290,"byte_end":69349,"line_start":695,"line_end":695,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69354,"byte_end":69357,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69362,"byte_end":69376,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69381,"byte_end":69384,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69389,"byte_end":69396,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69401,"byte_end":69438,"line_start":700,"line_end":700,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69443,"byte_end":69467,"line_start":701,"line_end":701,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69472,"byte_end":69475,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(deg: T, rad: T) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69480,"byte_end":69524,"line_start":703,"line_end":703,"column_start":5,"column_end":49}},{"value":"/     assert!(deg.to_radians() == rad);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69529,"byte_end":69570,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69575,"byte_end":69580,"line_start":705,"line_end":705,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69585,"byte_end":69588,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69593,"byte_end":69616,"line_start":707,"line_end":707,"column_start":5,"column_end":28}},{"value":"/ check(180.0, f32::consts::PI);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69621,"byte_end":69655,"line_start":708,"line_end":708,"column_start":5,"column_end":39}},{"value":"/ check(45.0, f64::consts::FRAC_PI_4);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69660,"byte_end":69700,"line_start":709,"line_end":709,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69705,"byte_end":69745,"line_start":710,"line_end":710,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69750,"byte_end":69757,"line_start":711,"line_end":711,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70534,"byte_end":70548,"line_start":735,"line_end":735,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::FloatCore::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":434},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69796,"byte_end":69874,"line_start":714,"line_end":714,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69879,"byte_end":69956,"line_start":715,"line_end":715,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69961,"byte_end":69964,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69969,"byte_end":69983,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69988,"byte_end":69991,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":69996,"byte_end":70003,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70008,"byte_end":70045,"line_start":720,"line_end":720,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70050,"byte_end":70074,"line_start":721,"line_end":721,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70079,"byte_end":70082,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, m: u64, e: i16, s:i8) {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70087,"byte_end":70143,"line_start":723,"line_end":723,"column_start":5,"column_end":61}},{"value":"/     let (mantissa, exponent, sign) = x.integer_decode();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70148,"byte_end":70208,"line_start":724,"line_end":724,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(mantissa, m);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70213,"byte_end":70245,"line_start":725,"line_end":725,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(exponent, e);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70250,"byte_end":70282,"line_start":726,"line_end":726,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(sign, s);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70287,"byte_end":70315,"line_start":727,"line_end":727,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70320,"byte_end":70325,"line_start":728,"line_end":728,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70330,"byte_end":70333,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ check(2.0f32, 1 << 23, -22, 1);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70338,"byte_end":70373,"line_start":730,"line_end":730,"column_start":5,"column_end":40}},{"value":"/ check(-2.0f32, 1 << 23, -22, -1);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70378,"byte_end":70415,"line_start":731,"line_end":731,"column_start":5,"column_end":42}},{"value":"/ check(f32::INFINITY, 1 << 23, 105, 1);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70420,"byte_end":70462,"line_start":732,"line_end":732,"column_start":5,"column_end":47}},{"value":"/ check(f64::NEG_INFINITY, 1 << 52, 972, -1);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70467,"byte_end":70514,"line_start":733,"line_end":733,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":70519,"byte_end":70526,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75286,"byte_end":75291,"line_start":890,"line_end":890,"column_start":11,"column_end":16},"name":"Float","qualname":"::float::Float","value":"Float: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75146,"byte_end":75190,"line_start":886,"line_end":886,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75191,"byte_end":75194,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75195,"byte_end":75251,"line_start":888,"line_end":888,"column_start":1,"column_end":57}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75252,"byte_end":75275,"line_start":889,"line_end":889,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75558,"byte_end":75561,"line_start":906,"line_end":906,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::Float::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the `NaN` value.","sig":null,"attributes":[{"value":"/ Returns the `NaN` value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75375,"byte_end":75403,"line_start":897,"line_end":897,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75408,"byte_end":75411,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75416,"byte_end":75423,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75428,"byte_end":75454,"line_start":900,"line_end":900,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75459,"byte_end":75462,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let nan: f32 = Float::nan();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75467,"byte_end":75499,"line_start":902,"line_end":902,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75504,"byte_end":75507,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75512,"byte_end":75538,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75543,"byte_end":75550,"line_start":905,"line_end":905,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75883,"byte_end":75891,"line_start":919,"line_end":919,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::Float::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the infinite value.","sig":null,"attributes":[{"value":"/ Returns the infinite value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75577,"byte_end":75608,"line_start":907,"line_end":907,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75613,"byte_end":75616,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75621,"byte_end":75628,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75633,"byte_end":75659,"line_start":910,"line_end":910,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75664,"byte_end":75681,"line_start":911,"line_end":911,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75686,"byte_end":75689,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ let infinity: f32 = Float::infinity();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75694,"byte_end":75736,"line_start":913,"line_end":913,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75741,"byte_end":75744,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ assert!(infinity.is_infinite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75749,"byte_end":75785,"line_start":915,"line_end":915,"column_start":5,"column_end":41}},{"value":"/ assert!(!infinity.is_finite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75790,"byte_end":75825,"line_start":916,"line_end":916,"column_start":5,"column_end":40}},{"value":"/ assert!(infinity > f32::MAX);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75830,"byte_end":75863,"line_start":917,"line_end":917,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75868,"byte_end":75875,"line_start":918,"line_end":918,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76242,"byte_end":76254,"line_start":932,"line_end":932,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::Float::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the negative infinite value.","sig":null,"attributes":[{"value":"/ Returns the negative infinite value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75907,"byte_end":75947,"line_start":920,"line_end":920,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75952,"byte_end":75955,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75960,"byte_end":75967,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75972,"byte_end":75998,"line_start":923,"line_end":923,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76003,"byte_end":76020,"line_start":924,"line_end":924,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76025,"byte_end":76028,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let neg_infinity: f32 = Float::neg_infinity();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76033,"byte_end":76083,"line_start":926,"line_end":926,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76088,"byte_end":76091,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert!(neg_infinity.is_infinite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76096,"byte_end":76136,"line_start":928,"line_end":928,"column_start":5,"column_end":45}},{"value":"/ assert!(!neg_infinity.is_finite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76141,"byte_end":76180,"line_start":929,"line_end":929,"column_start":5,"column_end":44}},{"value":"/ assert!(neg_infinity < f32::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76185,"byte_end":76222,"line_start":930,"line_end":930,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76227,"byte_end":76234,"line_start":931,"line_end":931,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76624,"byte_end":76632,"line_start":946,"line_end":946,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::Float::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76270,"byte_end":76289,"line_start":933,"line_end":933,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76294,"byte_end":76297,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76302,"byte_end":76309,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"/ use num_traits::{Zero, Float};","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76314,"byte_end":76348,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76353,"byte_end":76356,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76361,"byte_end":76398,"line_start":938,"line_end":938,"column_start":5,"column_end":42}},{"value":"/ let zero: f32 = Zero::zero();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76403,"byte_end":76436,"line_start":939,"line_end":939,"column_start":5,"column_end":38}},{"value":"/ let neg_zero: f32 = Float::neg_zero();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76441,"byte_end":76483,"line_start":940,"line_end":940,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76488,"byte_end":76491,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(zero, neg_zero);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76496,"byte_end":76527,"line_start":942,"line_end":942,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(7.0f32/inf, zero);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76532,"byte_end":76565,"line_start":943,"line_end":943,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(zero * 10.0, zero);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76570,"byte_end":76604,"line_start":944,"line_end":944,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76609,"byte_end":76616,"line_start":945,"line_end":945,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76899,"byte_end":76908,"line_start":958,"line_end":958,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::Float::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76649,"byte_end":76716,"line_start":948,"line_end":948,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76721,"byte_end":76724,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76729,"byte_end":76736,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76741,"byte_end":76767,"line_start":951,"line_end":951,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76772,"byte_end":76789,"line_start":952,"line_end":952,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76794,"byte_end":76797,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_value();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76802,"byte_end":76838,"line_start":954,"line_end":954,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76843,"byte_end":76846,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76851,"byte_end":76879,"line_start":956,"line_end":956,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76884,"byte_end":76891,"line_start":957,"line_end":957,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77207,"byte_end":77225,"line_start":970,"line_end":970,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::Float::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":76925,"byte_end":77006,"line_start":960,"line_end":960,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77011,"byte_end":77014,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77019,"byte_end":77026,"line_start":962,"line_end":962,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77031,"byte_end":77057,"line_start":963,"line_end":963,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77062,"byte_end":77079,"line_start":964,"line_end":964,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77084,"byte_end":77087,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_positive_value();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77092,"byte_end":77137,"line_start":966,"line_end":966,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77142,"byte_end":77145,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77150,"byte_end":77187,"line_start":968,"line_end":968,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77192,"byte_end":77199,"line_start":969,"line_end":969,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77602,"byte_end":77609,"line_start":987,"line_end":987,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::Float::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77242,"byte_end":77286,"line_start":972,"line_end":972,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77291,"byte_end":77294,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77299,"byte_end":77306,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77311,"byte_end":77337,"line_start":975,"line_end":975,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77342,"byte_end":77359,"line_start":976,"line_end":976,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77364,"byte_end":77367,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::epsilon();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77372,"byte_end":77406,"line_start":978,"line_end":978,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77411,"byte_end":77414,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77419,"byte_end":77451,"line_start":980,"line_end":980,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77456,"byte_end":77463,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77468,"byte_end":77471,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77476,"byte_end":77488,"line_start":983,"line_end":983,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77493,"byte_end":77496,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77501,"byte_end":77567,"line_start":985,"line_end":985,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77572,"byte_end":77594,"line_start":986,"line_end":986,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77950,"byte_end":77959,"line_start":1000,"line_end":1000,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::Float::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77709,"byte_end":77775,"line_start":991,"line_end":991,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77780,"byte_end":77783,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77788,"byte_end":77795,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77800,"byte_end":77826,"line_start":994,"line_end":994,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77831,"byte_end":77848,"line_start":995,"line_end":995,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77853,"byte_end":77856,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::max_value();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77861,"byte_end":77897,"line_start":997,"line_end":997,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77902,"byte_end":77930,"line_start":998,"line_end":998,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77935,"byte_end":77942,"line_start":999,"line_end":999,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78257,"byte_end":78263,"line_start":1014,"line_end":1014,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::Float::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `true` if this value is `NaN` and false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is `NaN` and false otherwise.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":77976,"byte_end":78038,"line_start":1002,"line_end":1002,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78043,"byte_end":78046,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78051,"byte_end":78058,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78063,"byte_end":78089,"line_start":1005,"line_end":1005,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78094,"byte_end":78111,"line_start":1006,"line_end":1006,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78116,"byte_end":78119,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ let nan = f64::NAN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78124,"byte_end":78147,"line_start":1008,"line_end":1008,"column_start":5,"column_end":28}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78152,"byte_end":78168,"line_start":1009,"line_end":1009,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78173,"byte_end":78176,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78181,"byte_end":78207,"line_start":1011,"line_end":1011,"column_start":5,"column_end":31}},{"value":"/ assert!(!f.is_nan());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78212,"byte_end":78237,"line_start":1012,"line_end":1012,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78242,"byte_end":78249,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78801,"byte_end":78812,"line_start":1034,"line_end":1034,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::Float::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `true` if this value is positive infinity or negative infinity and\n false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is positive infinity or negative infinity and","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78284,"byte_end":78362,"line_start":1016,"line_end":1016,"column_start":5,"column_end":83}},{"value":"/ false otherwise.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78367,"byte_end":78387,"line_start":1017,"line_end":1017,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78392,"byte_end":78395,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78400,"byte_end":78407,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78412,"byte_end":78438,"line_start":1020,"line_end":1020,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78443,"byte_end":78460,"line_start":1021,"line_end":1021,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78465,"byte_end":78468,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78473,"byte_end":78492,"line_start":1023,"line_end":1023,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78497,"byte_end":78534,"line_start":1024,"line_end":1024,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78539,"byte_end":78584,"line_start":1025,"line_end":1025,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78589,"byte_end":78617,"line_start":1026,"line_end":1026,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78622,"byte_end":78625,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_infinite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78630,"byte_end":78660,"line_start":1028,"line_end":1028,"column_start":5,"column_end":35}},{"value":"/ assert!(!nan.is_infinite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78665,"byte_end":78697,"line_start":1029,"line_end":1029,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78702,"byte_end":78705,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ assert!(inf.is_infinite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78710,"byte_end":78741,"line_start":1031,"line_end":1031,"column_start":5,"column_end":36}},{"value":"/ assert!(neg_inf.is_infinite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78746,"byte_end":78781,"line_start":1032,"line_end":1032,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78786,"byte_end":78793,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79304,"byte_end":79313,"line_start":1053,"line_end":1053,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::Float::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `true` if this number is neither infinite nor `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if this number is neither infinite nor `NaN`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78833,"byte_end":78897,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78902,"byte_end":78905,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78910,"byte_end":78917,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78922,"byte_end":78948,"line_start":1039,"line_end":1039,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78953,"byte_end":78970,"line_start":1040,"line_end":1040,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78975,"byte_end":78978,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":78983,"byte_end":79002,"line_start":1042,"line_end":1042,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79007,"byte_end":79044,"line_start":1043,"line_end":1043,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79049,"byte_end":79094,"line_start":1044,"line_end":1044,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79099,"byte_end":79127,"line_start":1045,"line_end":1045,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79132,"byte_end":79135,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_finite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79140,"byte_end":79167,"line_start":1047,"line_end":1047,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79172,"byte_end":79175,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ assert!(!nan.is_finite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79180,"byte_end":79210,"line_start":1049,"line_end":1049,"column_start":5,"column_end":35}},{"value":"/ assert!(!inf.is_finite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79215,"byte_end":79245,"line_start":1050,"line_end":1050,"column_start":5,"column_end":35}},{"value":"/ assert!(!neg_inf.is_finite());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79250,"byte_end":79284,"line_start":1051,"line_end":1051,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79289,"byte_end":79296,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80063,"byte_end":80072,"line_start":1077,"line_end":1077,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::Float::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite,\n [subnormal][subnormal], or `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79334,"byte_end":79393,"line_start":1055,"line_end":1055,"column_start":5,"column_end":64}},{"value":"/ [subnormal][subnormal], or `NaN`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79398,"byte_end":79435,"line_start":1056,"line_end":1056,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79440,"byte_end":79443,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79448,"byte_end":79455,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79460,"byte_end":79486,"line_start":1059,"line_end":1059,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79491,"byte_end":79508,"line_start":1060,"line_end":1060,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79513,"byte_end":79516,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ let min = f32::MIN_POSITIVE; // 1.17549435e-38f32","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79521,"byte_end":79574,"line_start":1062,"line_end":1062,"column_start":5,"column_end":58}},{"value":"/ let max = f32::MAX;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79579,"byte_end":79602,"line_start":1063,"line_end":1063,"column_start":5,"column_end":28}},{"value":"/ let lower_than_min = 1.0e-40_f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79607,"byte_end":79644,"line_start":1064,"line_end":1064,"column_start":5,"column_end":42}},{"value":"/ let zero = 0.0f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79649,"byte_end":79671,"line_start":1065,"line_end":1065,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79676,"byte_end":79679,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ assert!(min.is_normal());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79684,"byte_end":79713,"line_start":1067,"line_end":1067,"column_start":5,"column_end":34}},{"value":"/ assert!(max.is_normal());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79718,"byte_end":79747,"line_start":1068,"line_end":1068,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79752,"byte_end":79755,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ assert!(!zero.is_normal());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79760,"byte_end":79791,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/ assert!(!f32::NAN.is_normal());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79796,"byte_end":79831,"line_start":1071,"line_end":1071,"column_start":5,"column_end":40}},{"value":"/ assert!(!f32::INFINITY.is_normal());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79836,"byte_end":79876,"line_start":1072,"line_end":1072,"column_start":5,"column_end":45}},{"value":"/ // Values between `0` and `min` are Subnormal.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79881,"byte_end":79931,"line_start":1073,"line_end":1073,"column_start":5,"column_end":55}},{"value":"/ assert!(!lower_than_min.is_normal());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79936,"byte_end":79977,"line_start":1074,"line_end":1074,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79982,"byte_end":79989,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}},{"value":"/ [subnormal]: http://en.wikipedia.org/wiki/Denormal_number","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":79994,"byte_end":80055,"line_start":1076,"line_end":1076,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80586,"byte_end":80594,"line_start":1094,"line_end":1094,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::Float::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80093,"byte_end":80168,"line_start":1079,"line_end":1079,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80173,"byte_end":80242,"line_start":1080,"line_end":1080,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80247,"byte_end":80269,"line_start":1081,"line_end":1081,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80274,"byte_end":80277,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80282,"byte_end":80289,"line_start":1083,"line_end":1083,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80294,"byte_end":80320,"line_start":1084,"line_end":1084,"column_start":5,"column_end":31}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80325,"byte_end":80354,"line_start":1085,"line_end":1085,"column_start":5,"column_end":34}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80359,"byte_end":80376,"line_start":1086,"line_end":1086,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80381,"byte_end":80384,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ let num = 12.4f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80389,"byte_end":80411,"line_start":1088,"line_end":1088,"column_start":5,"column_end":27}},{"value":"/ let inf = f32::INFINITY;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80416,"byte_end":80444,"line_start":1089,"line_end":1089,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80449,"byte_end":80452,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(num.classify(), FpCategory::Normal);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80457,"byte_end":80508,"line_start":1091,"line_end":1091,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(inf.classify(), FpCategory::Infinite);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80513,"byte_end":80566,"line_start":1092,"line_end":1092,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80571,"byte_end":80578,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80886,"byte_end":80891,"line_start":1107,"line_end":1107,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::Float::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80621,"byte_end":80684,"line_start":1096,"line_end":1096,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80689,"byte_end":80692,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80697,"byte_end":80704,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80709,"byte_end":80735,"line_start":1099,"line_end":1099,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80740,"byte_end":80743,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80748,"byte_end":80765,"line_start":1101,"line_end":1101,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80770,"byte_end":80786,"line_start":1102,"line_end":1102,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80791,"byte_end":80794,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80799,"byte_end":80830,"line_start":1104,"line_end":1104,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80835,"byte_end":80866,"line_start":1105,"line_end":1105,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80871,"byte_end":80878,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81179,"byte_end":81183,"line_start":1120,"line_end":1120,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::Float::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80912,"byte_end":80979,"line_start":1109,"line_end":1109,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80984,"byte_end":80987,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":80992,"byte_end":80999,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81004,"byte_end":81030,"line_start":1112,"line_end":1112,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81035,"byte_end":81038,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81043,"byte_end":81060,"line_start":1114,"line_end":1114,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81065,"byte_end":81081,"line_start":1115,"line_end":1115,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81086,"byte_end":81089,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81094,"byte_end":81124,"line_start":1117,"line_end":1117,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81129,"byte_end":81159,"line_start":1118,"line_end":1118,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81164,"byte_end":81171,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81497,"byte_end":81502,"line_start":1134,"line_end":1134,"column_start":8,"column_end":13},"name":"round","qualname":"::float::Float::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81204,"byte_end":81279,"line_start":1122,"line_end":1122,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81284,"byte_end":81294,"line_start":1123,"line_end":1123,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81299,"byte_end":81302,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81307,"byte_end":81314,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81319,"byte_end":81345,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81350,"byte_end":81353,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81358,"byte_end":81374,"line_start":1128,"line_end":1128,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81379,"byte_end":81396,"line_start":1129,"line_end":1129,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81401,"byte_end":81404,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81409,"byte_end":81440,"line_start":1131,"line_end":1131,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81445,"byte_end":81477,"line_start":1132,"line_end":1132,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81482,"byte_end":81489,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81766,"byte_end":81771,"line_start":1147,"line_end":1147,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::Float::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81523,"byte_end":81563,"line_start":1136,"line_end":1136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81568,"byte_end":81571,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81576,"byte_end":81583,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81588,"byte_end":81614,"line_start":1139,"line_end":1139,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81619,"byte_end":81622,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81627,"byte_end":81643,"line_start":1141,"line_end":1141,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81648,"byte_end":81665,"line_start":1142,"line_end":1142,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81670,"byte_end":81673,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81678,"byte_end":81709,"line_start":1144,"line_end":1144,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81714,"byte_end":81746,"line_start":1145,"line_end":1145,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81751,"byte_end":81758,"line_start":1146,"line_end":1146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82167,"byte_end":82172,"line_start":1162,"line_end":1162,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::Float::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81792,"byte_end":81836,"line_start":1149,"line_end":1149,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81841,"byte_end":81844,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81849,"byte_end":81856,"line_start":1151,"line_end":1151,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81861,"byte_end":81887,"line_start":1152,"line_end":1152,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81892,"byte_end":81895,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81900,"byte_end":81916,"line_start":1154,"line_end":1154,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81921,"byte_end":81938,"line_start":1155,"line_end":1155,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81943,"byte_end":81994,"line_start":1156,"line_end":1156,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":81999,"byte_end":82053,"line_start":1157,"line_end":1157,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82058,"byte_end":82061,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82066,"byte_end":82104,"line_start":1159,"line_end":1159,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82109,"byte_end":82147,"line_start":1160,"line_end":1160,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82152,"byte_end":82159,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82702,"byte_end":82705,"line_start":1182,"line_end":1182,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::Float::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82193,"byte_end":82265,"line_start":1164,"line_end":1164,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82270,"byte_end":82299,"line_start":1165,"line_end":1165,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82304,"byte_end":82307,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82312,"byte_end":82319,"line_start":1167,"line_end":1167,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82324,"byte_end":82350,"line_start":1168,"line_end":1168,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82355,"byte_end":82372,"line_start":1169,"line_end":1169,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82377,"byte_end":82380,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82385,"byte_end":82401,"line_start":1171,"line_end":1171,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82406,"byte_end":82423,"line_start":1172,"line_end":1172,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82428,"byte_end":82431,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82436,"byte_end":82483,"line_start":1174,"line_end":1174,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82488,"byte_end":82538,"line_start":1175,"line_end":1175,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82543,"byte_end":82546,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82551,"byte_end":82589,"line_start":1177,"line_end":1177,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82594,"byte_end":82632,"line_start":1178,"line_end":1178,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82637,"byte_end":82640,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.abs().is_nan());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82645,"byte_end":82682,"line_start":1180,"line_end":1180,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82687,"byte_end":82694,"line_start":1181,"line_end":1181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83272,"byte_end":83278,"line_start":1201,"line_end":1201,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::Float::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82726,"byte_end":82782,"line_start":1184,"line_end":1184,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82787,"byte_end":82790,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82795,"byte_end":82863,"line_start":1186,"line_end":1186,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82868,"byte_end":82941,"line_start":1187,"line_end":1187,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":82946,"byte_end":82998,"line_start":1188,"line_end":1188,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83003,"byte_end":83006,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83011,"byte_end":83018,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83023,"byte_end":83049,"line_start":1191,"line_end":1191,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83054,"byte_end":83071,"line_start":1192,"line_end":1192,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83076,"byte_end":83079,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83084,"byte_end":83100,"line_start":1194,"line_end":1194,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83105,"byte_end":83108,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83113,"byte_end":83145,"line_start":1196,"line_end":1196,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83150,"byte_end":83199,"line_start":1197,"line_end":1197,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83204,"byte_end":83207,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83212,"byte_end":83252,"line_start":1199,"line_end":1199,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83257,"byte_end":83264,"line_start":1200,"line_end":1200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83751,"byte_end":83767,"line_start":1219,"line_end":1219,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::Float::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83299,"byte_end":83358,"line_start":1203,"line_end":1203,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83363,"byte_end":83428,"line_start":1204,"line_end":1204,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83433,"byte_end":83436,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83441,"byte_end":83448,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83453,"byte_end":83479,"line_start":1207,"line_end":1207,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83484,"byte_end":83501,"line_start":1208,"line_end":1208,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83506,"byte_end":83509,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83514,"byte_end":83547,"line_start":1210,"line_end":1210,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83552,"byte_end":83555,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83560,"byte_end":83576,"line_start":1212,"line_end":1212,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83581,"byte_end":83598,"line_start":1213,"line_end":1213,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83603,"byte_end":83606,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83611,"byte_end":83645,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83650,"byte_end":83685,"line_start":1216,"line_end":1216,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83690,"byte_end":83731,"line_start":1217,"line_end":1217,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83736,"byte_end":83743,"line_start":1218,"line_end":1218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84236,"byte_end":84252,"line_start":1237,"line_end":1237,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::Float::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83788,"byte_end":83847,"line_start":1221,"line_end":1221,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83852,"byte_end":83922,"line_start":1222,"line_end":1222,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83927,"byte_end":83930,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83935,"byte_end":83942,"line_start":1224,"line_end":1224,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83947,"byte_end":83973,"line_start":1225,"line_end":1225,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":83978,"byte_end":83995,"line_start":1226,"line_end":1226,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84000,"byte_end":84003,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84008,"byte_end":84036,"line_start":1228,"line_end":1228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84041,"byte_end":84044,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84049,"byte_end":84065,"line_start":1230,"line_end":1230,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84070,"byte_end":84087,"line_start":1231,"line_end":1231,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84092,"byte_end":84095,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84100,"byte_end":84135,"line_start":1233,"line_end":1233,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84140,"byte_end":84174,"line_start":1234,"line_end":1234,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84179,"byte_end":84216,"line_start":1235,"line_end":1235,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84221,"byte_end":84228,"line_start":1236,"line_end":1236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84864,"byte_end":84871,"line_start":1257,"line_end":1257,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::float::Float::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84273,"byte_end":84345,"line_start":1239,"line_end":1239,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84350,"byte_end":84422,"line_start":1240,"line_end":1240,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84427,"byte_end":84430,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84435,"byte_end":84509,"line_start":1242,"line_end":1242,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84514,"byte_end":84580,"line_start":1243,"line_end":1243,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84585,"byte_end":84588,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84593,"byte_end":84600,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84605,"byte_end":84631,"line_start":1246,"line_end":1246,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84636,"byte_end":84639,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84644,"byte_end":84661,"line_start":1248,"line_end":1248,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84666,"byte_end":84682,"line_start":1249,"line_end":1249,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84687,"byte_end":84704,"line_start":1250,"line_end":1250,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84709,"byte_end":84712,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84717,"byte_end":84729,"line_start":1252,"line_end":1252,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84734,"byte_end":84795,"line_start":1253,"line_end":1253,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84800,"byte_end":84803,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84808,"byte_end":84844,"line_start":1255,"line_end":1255,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84849,"byte_end":84856,"line_start":1256,"line_end":1256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85169,"byte_end":85174,"line_start":1268,"line_end":1268,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::Float::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84909,"byte_end":84962,"line_start":1258,"line_end":1258,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84967,"byte_end":84970,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84975,"byte_end":84982,"line_start":1260,"line_end":1260,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":84987,"byte_end":85013,"line_start":1261,"line_end":1261,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85018,"byte_end":85021,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85026,"byte_end":85042,"line_start":1263,"line_end":1263,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85047,"byte_end":85100,"line_start":1264,"line_end":1264,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85105,"byte_end":85108,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85113,"byte_end":85149,"line_start":1266,"line_end":1266,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85154,"byte_end":85161,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85511,"byte_end":85515,"line_start":1282,"line_end":1282,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::Float::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85195,"byte_end":85234,"line_start":1270,"line_end":1270,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85239,"byte_end":85242,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85247,"byte_end":85308,"line_start":1272,"line_end":1272,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85313,"byte_end":85316,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85321,"byte_end":85328,"line_start":1274,"line_end":1274,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85333,"byte_end":85359,"line_start":1275,"line_end":1275,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85364,"byte_end":85367,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85372,"byte_end":85388,"line_start":1277,"line_end":1277,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85393,"byte_end":85442,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85447,"byte_end":85450,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85455,"byte_end":85491,"line_start":1280,"line_end":1280,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85496,"byte_end":85503,"line_start":1281,"line_end":1281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85794,"byte_end":85798,"line_start":1294,"line_end":1294,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::Float::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Raise a number to a floating point power.","sig":null,"attributes":[{"value":"/ Raise a number to a floating point power.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85544,"byte_end":85589,"line_start":1284,"line_end":1284,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85594,"byte_end":85597,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85602,"byte_end":85609,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85614,"byte_end":85640,"line_start":1287,"line_end":1287,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85645,"byte_end":85648,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85653,"byte_end":85669,"line_start":1289,"line_end":1289,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85674,"byte_end":85725,"line_start":1290,"line_end":1290,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85730,"byte_end":85733,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85738,"byte_end":85774,"line_start":1292,"line_end":1292,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85779,"byte_end":85786,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86221,"byte_end":86225,"line_start":1311,"line_end":1311,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::Float::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85828,"byte_end":85865,"line_start":1296,"line_end":1296,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85870,"byte_end":85873,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85878,"byte_end":85925,"line_start":1298,"line_end":1298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85930,"byte_end":85933,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85938,"byte_end":85945,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85950,"byte_end":85976,"line_start":1301,"line_end":1301,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85981,"byte_end":85984,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":85989,"byte_end":86012,"line_start":1303,"line_end":1303,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86017,"byte_end":86041,"line_start":1304,"line_end":1304,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86046,"byte_end":86049,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86054,"byte_end":86109,"line_start":1306,"line_end":1306,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86114,"byte_end":86117,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86122,"byte_end":86158,"line_start":1308,"line_end":1308,"column_start":5,"column_end":41}},{"value":"/ assert!(negative.sqrt().is_nan());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86163,"byte_end":86201,"line_start":1309,"line_end":1309,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86206,"byte_end":86213,"line_start":1310,"line_end":1310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86575,"byte_end":86578,"line_start":1327,"line_end":1327,"column_start":8,"column_end":11},"name":"exp","qualname":"::float::Float::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86246,"byte_end":86297,"line_start":1313,"line_end":1313,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86302,"byte_end":86305,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86310,"byte_end":86317,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86322,"byte_end":86348,"line_start":1316,"line_end":1316,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86353,"byte_end":86356,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86361,"byte_end":86379,"line_start":1318,"line_end":1318,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86384,"byte_end":86394,"line_start":1319,"line_end":1319,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86399,"byte_end":86421,"line_start":1320,"line_end":1320,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86426,"byte_end":86429,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86434,"byte_end":86455,"line_start":1322,"line_end":1322,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86460,"byte_end":86506,"line_start":1323,"line_end":1323,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86511,"byte_end":86514,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86519,"byte_end":86555,"line_start":1325,"line_end":1325,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86560,"byte_end":86567,"line_start":1326,"line_end":1326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86856,"byte_end":86860,"line_start":1341,"line_end":1341,"column_start":8,"column_end":12},"name":"exp2","qualname":"::float::Float::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86599,"byte_end":86622,"line_start":1329,"line_end":1329,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86627,"byte_end":86630,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86635,"byte_end":86642,"line_start":1331,"line_end":1331,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86647,"byte_end":86673,"line_start":1332,"line_end":1332,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86678,"byte_end":86681,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86686,"byte_end":86702,"line_start":1334,"line_end":1334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86707,"byte_end":86710,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86715,"byte_end":86734,"line_start":1336,"line_end":1336,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86739,"byte_end":86787,"line_start":1337,"line_end":1337,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86792,"byte_end":86795,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86800,"byte_end":86836,"line_start":1339,"line_end":1339,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86841,"byte_end":86848,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87207,"byte_end":87209,"line_start":1357,"line_end":1357,"column_start":8,"column_end":10},"name":"ln","qualname":"::float::Float::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86881,"byte_end":86929,"line_start":1343,"line_end":1343,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86934,"byte_end":86937,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86942,"byte_end":86949,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86954,"byte_end":86980,"line_start":1346,"line_end":1346,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86985,"byte_end":86988,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":86993,"byte_end":87011,"line_start":1348,"line_end":1348,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87016,"byte_end":87026,"line_start":1349,"line_end":1349,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87031,"byte_end":87053,"line_start":1350,"line_end":1350,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87058,"byte_end":87061,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87066,"byte_end":87087,"line_start":1352,"line_end":1352,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87092,"byte_end":87138,"line_start":1353,"line_end":1353,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87143,"byte_end":87146,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87151,"byte_end":87187,"line_start":1355,"line_end":1355,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87192,"byte_end":87199,"line_start":1356,"line_end":1356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87719,"byte_end":87722,"line_start":1376,"line_end":1376,"column_start":8,"column_end":11},"name":"log","qualname":"::float::Float::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87230,"byte_end":87304,"line_start":1359,"line_end":1359,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87309,"byte_end":87312,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87317,"byte_end":87324,"line_start":1361,"line_end":1361,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87329,"byte_end":87355,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87360,"byte_end":87363,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87368,"byte_end":87387,"line_start":1364,"line_end":1364,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87392,"byte_end":87410,"line_start":1365,"line_end":1365,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87415,"byte_end":87418,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87423,"byte_end":87448,"line_start":1367,"line_end":1367,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87453,"byte_end":87509,"line_start":1368,"line_end":1368,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87514,"byte_end":87517,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87522,"byte_end":87545,"line_start":1370,"line_end":1370,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87550,"byte_end":87604,"line_start":1371,"line_end":1371,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87609,"byte_end":87612,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87617,"byte_end":87656,"line_start":1373,"line_end":1373,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87661,"byte_end":87699,"line_start":1374,"line_end":1374,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87704,"byte_end":87711,"line_start":1375,"line_end":1375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88044,"byte_end":88048,"line_start":1390,"line_end":1390,"column_start":8,"column_end":12},"name":"log2","qualname":"::float::Float::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87755,"byte_end":87802,"line_start":1378,"line_end":1378,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87807,"byte_end":87810,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87815,"byte_end":87822,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87827,"byte_end":87853,"line_start":1381,"line_end":1381,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87858,"byte_end":87861,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87866,"byte_end":87884,"line_start":1383,"line_end":1383,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87889,"byte_end":87892,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87897,"byte_end":87920,"line_start":1385,"line_end":1385,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87925,"byte_end":87975,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87980,"byte_end":87983,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":87988,"byte_end":88024,"line_start":1388,"line_end":1388,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88029,"byte_end":88036,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88363,"byte_end":88368,"line_start":1404,"line_end":1404,"column_start":8,"column_end":13},"name":"log10","qualname":"::float::Float::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88069,"byte_end":88117,"line_start":1392,"line_end":1392,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88122,"byte_end":88125,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88130,"byte_end":88137,"line_start":1394,"line_end":1394,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88142,"byte_end":88168,"line_start":1395,"line_end":1395,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88173,"byte_end":88176,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88181,"byte_end":88200,"line_start":1397,"line_end":1397,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88205,"byte_end":88208,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88213,"byte_end":88238,"line_start":1399,"line_end":1399,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88243,"byte_end":88294,"line_start":1400,"line_end":1400,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88299,"byte_end":88302,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88307,"byte_end":88343,"line_start":1402,"line_end":1402,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88348,"byte_end":88355,"line_start":1403,"line_end":1403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88667,"byte_end":88677,"line_start":1418,"line_end":1418,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::Float::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88389,"byte_end":88421,"line_start":1406,"line_end":1406,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88426,"byte_end":88429,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88434,"byte_end":88441,"line_start":1408,"line_end":1408,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88446,"byte_end":88471,"line_start":1409,"line_end":1409,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88476,"byte_end":88479,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88484,"byte_end":88511,"line_start":1411,"line_end":1411,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88516,"byte_end":88519,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88524,"byte_end":88584,"line_start":1413,"line_end":1413,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88589,"byte_end":88592,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88597,"byte_end":88633,"line_start":1415,"line_end":1415,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88638,"byte_end":88645,"line_start":1416,"line_end":1416,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88650,"byte_end":88659,"line_start":1417,"line_end":1417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89108,"byte_end":89118,"line_start":1436,"line_end":1436,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::Float::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88826,"byte_end":88858,"line_start":1424,"line_end":1424,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88863,"byte_end":88866,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88871,"byte_end":88878,"line_start":1426,"line_end":1426,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88883,"byte_end":88908,"line_start":1427,"line_end":1427,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88913,"byte_end":88916,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88921,"byte_end":88947,"line_start":1429,"line_end":1429,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88952,"byte_end":88955,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":88960,"byte_end":89025,"line_start":1431,"line_end":1431,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89030,"byte_end":89033,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89038,"byte_end":89074,"line_start":1433,"line_end":1433,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89079,"byte_end":89086,"line_start":1434,"line_end":1434,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89091,"byte_end":89100,"line_start":1435,"line_end":1435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89472,"byte_end":89475,"line_start":1452,"line_end":1452,"column_start":8,"column_end":11},"name":"max","qualname":"::float::Float::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89267,"byte_end":89310,"line_start":1442,"line_end":1442,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89315,"byte_end":89318,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89323,"byte_end":89330,"line_start":1444,"line_end":1444,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89335,"byte_end":89361,"line_start":1445,"line_end":1445,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89366,"byte_end":89369,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89374,"byte_end":89390,"line_start":1447,"line_end":1447,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89395,"byte_end":89411,"line_start":1448,"line_end":1448,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89416,"byte_end":89419,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89424,"byte_end":89452,"line_start":1450,"line_end":1450,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89457,"byte_end":89464,"line_start":1451,"line_end":1451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89714,"byte_end":89717,"line_start":1464,"line_end":1464,"column_start":8,"column_end":11},"name":"min","qualname":"::float::Float::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89509,"byte_end":89552,"line_start":1454,"line_end":1454,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89557,"byte_end":89560,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89565,"byte_end":89572,"line_start":1456,"line_end":1456,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89577,"byte_end":89603,"line_start":1457,"line_end":1457,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89608,"byte_end":89611,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89616,"byte_end":89632,"line_start":1459,"line_end":1459,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89637,"byte_end":89653,"line_start":1460,"line_end":1460,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89658,"byte_end":89661,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89666,"byte_end":89694,"line_start":1462,"line_end":1462,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89699,"byte_end":89706,"line_start":1463,"line_end":1463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90215,"byte_end":90222,"line_start":1483,"line_end":1483,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::float::Float::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89751,"byte_end":89794,"line_start":1466,"line_end":1466,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89799,"byte_end":89802,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89807,"byte_end":89838,"line_start":1468,"line_end":1468,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89843,"byte_end":89869,"line_start":1469,"line_end":1469,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89874,"byte_end":89877,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89882,"byte_end":89889,"line_start":1471,"line_end":1471,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89894,"byte_end":89920,"line_start":1472,"line_end":1472,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89925,"byte_end":89928,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89933,"byte_end":89949,"line_start":1474,"line_end":1474,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89954,"byte_end":89971,"line_start":1475,"line_end":1475,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89976,"byte_end":89979,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":89984,"byte_end":90040,"line_start":1477,"line_end":1477,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90045,"byte_end":90101,"line_start":1478,"line_end":1478,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90106,"byte_end":90109,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90114,"byte_end":90152,"line_start":1480,"line_end":1480,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90157,"byte_end":90195,"line_start":1481,"line_end":1481,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90200,"byte_end":90207,"line_start":1482,"line_end":1482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90530,"byte_end":90534,"line_start":1497,"line_end":1497,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::Float::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90256,"byte_end":90292,"line_start":1485,"line_end":1485,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90297,"byte_end":90300,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90305,"byte_end":90312,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90317,"byte_end":90343,"line_start":1488,"line_end":1488,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90348,"byte_end":90351,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90356,"byte_end":90372,"line_start":1490,"line_end":1490,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90377,"byte_end":90380,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90385,"byte_end":90408,"line_start":1492,"line_end":1492,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90413,"byte_end":90461,"line_start":1493,"line_end":1493,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90466,"byte_end":90469,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90474,"byte_end":90510,"line_start":1495,"line_end":1495,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90515,"byte_end":90522,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90952,"byte_end":90957,"line_start":1513,"line_end":1513,"column_start":8,"column_end":13},"name":"hypot","qualname":"::float::Float::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90555,"byte_end":90629,"line_start":1499,"line_end":1499,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90634,"byte_end":90665,"line_start":1500,"line_end":1500,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90670,"byte_end":90673,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90678,"byte_end":90685,"line_start":1502,"line_end":1502,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90690,"byte_end":90716,"line_start":1503,"line_end":1503,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90721,"byte_end":90724,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90729,"byte_end":90745,"line_start":1505,"line_end":1505,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90750,"byte_end":90766,"line_start":1506,"line_end":1506,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90771,"byte_end":90774,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90779,"byte_end":90801,"line_start":1508,"line_end":1508,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90806,"byte_end":90883,"line_start":1509,"line_end":1509,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90888,"byte_end":90891,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90896,"byte_end":90932,"line_start":1511,"line_end":1511,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90937,"byte_end":90944,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91285,"byte_end":91288,"line_start":1527,"line_end":1527,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::Float::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":90991,"byte_end":91038,"line_start":1515,"line_end":1515,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91043,"byte_end":91046,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91051,"byte_end":91058,"line_start":1517,"line_end":1517,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91063,"byte_end":91089,"line_start":1518,"line_end":1518,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91094,"byte_end":91111,"line_start":1519,"line_end":1519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91116,"byte_end":91119,"line_start":1520,"line_end":1520,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91124,"byte_end":91156,"line_start":1521,"line_end":1521,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91161,"byte_end":91164,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91169,"byte_end":91216,"line_start":1523,"line_end":1523,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91221,"byte_end":91224,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91229,"byte_end":91265,"line_start":1525,"line_end":1525,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91270,"byte_end":91277,"line_start":1526,"line_end":1526,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91605,"byte_end":91608,"line_start":1541,"line_end":1541,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::Float::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91309,"byte_end":91358,"line_start":1529,"line_end":1529,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91363,"byte_end":91366,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91371,"byte_end":91378,"line_start":1531,"line_end":1531,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91383,"byte_end":91409,"line_start":1532,"line_end":1532,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91414,"byte_end":91431,"line_start":1533,"line_end":1533,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91436,"byte_end":91439,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91444,"byte_end":91476,"line_start":1535,"line_end":1535,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91481,"byte_end":91484,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91489,"byte_end":91536,"line_start":1537,"line_end":1537,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91541,"byte_end":91544,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91549,"byte_end":91585,"line_start":1539,"line_end":1539,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91590,"byte_end":91597,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91918,"byte_end":91921,"line_start":1554,"line_end":1554,"column_start":8,"column_end":11},"name":"tan","qualname":"::float::Float::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91629,"byte_end":91679,"line_start":1543,"line_end":1543,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91684,"byte_end":91687,"line_start":1544,"line_end":1544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91692,"byte_end":91699,"line_start":1545,"line_end":1545,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91704,"byte_end":91730,"line_start":1546,"line_end":1546,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91735,"byte_end":91752,"line_start":1547,"line_end":1547,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91757,"byte_end":91760,"line_start":1548,"line_end":1548,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91765,"byte_end":91797,"line_start":1549,"line_end":1549,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91802,"byte_end":91849,"line_start":1550,"line_end":1550,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91854,"byte_end":91857,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91862,"byte_end":91898,"line_start":1552,"line_end":1552,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91903,"byte_end":91910,"line_start":1553,"line_end":1553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92401,"byte_end":92405,"line_start":1571,"line_end":1571,"column_start":8,"column_end":12},"name":"asin","qualname":"::float::Float::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":91942,"byte_end":92009,"line_start":1556,"line_end":1556,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92014,"byte_end":92083,"line_start":1557,"line_end":1557,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92088,"byte_end":92100,"line_start":1558,"line_end":1558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92105,"byte_end":92108,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92113,"byte_end":92120,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92125,"byte_end":92151,"line_start":1561,"line_end":1561,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92156,"byte_end":92173,"line_start":1562,"line_end":1562,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92178,"byte_end":92181,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92186,"byte_end":92220,"line_start":1564,"line_end":1564,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92225,"byte_end":92228,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92233,"byte_end":92255,"line_start":1566,"line_end":1566,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92260,"byte_end":92332,"line_start":1567,"line_end":1567,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92337,"byte_end":92340,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92345,"byte_end":92381,"line_start":1569,"line_end":1569,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92386,"byte_end":92393,"line_start":1570,"line_end":1570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92881,"byte_end":92885,"line_start":1588,"line_end":1588,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::Float::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92426,"byte_end":92495,"line_start":1573,"line_end":1573,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92500,"byte_end":92563,"line_start":1574,"line_end":1574,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92568,"byte_end":92580,"line_start":1575,"line_end":1575,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92585,"byte_end":92588,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92593,"byte_end":92600,"line_start":1577,"line_end":1577,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92605,"byte_end":92631,"line_start":1578,"line_end":1578,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92636,"byte_end":92653,"line_start":1579,"line_end":1579,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92658,"byte_end":92661,"line_start":1580,"line_end":1580,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92666,"byte_end":92700,"line_start":1581,"line_end":1581,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92705,"byte_end":92708,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92713,"byte_end":92735,"line_start":1583,"line_end":1583,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92740,"byte_end":92812,"line_start":1584,"line_end":1584,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92817,"byte_end":92820,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92825,"byte_end":92861,"line_start":1586,"line_end":1586,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92866,"byte_end":92873,"line_start":1587,"line_end":1587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93249,"byte_end":93253,"line_start":1603,"line_end":1603,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::Float::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92906,"byte_end":92980,"line_start":1590,"line_end":1590,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":92985,"byte_end":93009,"line_start":1591,"line_end":1591,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93014,"byte_end":93017,"line_start":1592,"line_end":1592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93022,"byte_end":93029,"line_start":1593,"line_end":1593,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93034,"byte_end":93060,"line_start":1594,"line_end":1594,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93065,"byte_end":93068,"line_start":1595,"line_end":1595,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93073,"byte_end":93089,"line_start":1596,"line_end":1596,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93094,"byte_end":93097,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93102,"byte_end":93121,"line_start":1598,"line_end":1598,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93126,"byte_end":93180,"line_start":1599,"line_end":1599,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93185,"byte_end":93188,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93193,"byte_end":93229,"line_start":1601,"line_end":1601,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93234,"byte_end":93241,"line_start":1602,"line_end":1602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94134,"byte_end":94139,"line_start":1632,"line_end":1632,"column_start":8,"column_end":13},"name":"atan2","qualname":"::float::Float::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93274,"byte_end":93350,"line_start":1605,"line_end":1605,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93355,"byte_end":93358,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93363,"byte_end":93390,"line_start":1607,"line_end":1607,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93395,"byte_end":93443,"line_start":1608,"line_end":1608,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93448,"byte_end":93498,"line_start":1609,"line_end":1609,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93503,"byte_end":93554,"line_start":1610,"line_end":1610,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93559,"byte_end":93562,"line_start":1611,"line_end":1611,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93567,"byte_end":93574,"line_start":1612,"line_end":1612,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93579,"byte_end":93605,"line_start":1613,"line_end":1613,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93610,"byte_end":93627,"line_start":1614,"line_end":1614,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93632,"byte_end":93635,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93640,"byte_end":93669,"line_start":1616,"line_end":1616,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93674,"byte_end":93718,"line_start":1617,"line_end":1617,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93723,"byte_end":93754,"line_start":1618,"line_end":1618,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93759,"byte_end":93776,"line_start":1619,"line_end":1619,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93781,"byte_end":93799,"line_start":1620,"line_end":1620,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93804,"byte_end":93807,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93812,"byte_end":93836,"line_start":1622,"line_end":1622,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93841,"byte_end":93859,"line_start":1623,"line_end":1623,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93864,"byte_end":93881,"line_start":1624,"line_end":1624,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93886,"byte_end":93889,"line_start":1625,"line_end":1625,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93894,"byte_end":93954,"line_start":1626,"line_end":1626,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":93959,"byte_end":94020,"line_start":1627,"line_end":1627,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94025,"byte_end":94028,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94033,"byte_end":94071,"line_start":1629,"line_end":1629,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94076,"byte_end":94114,"line_start":1630,"line_end":1630,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94119,"byte_end":94126,"line_start":1631,"line_end":1631,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94653,"byte_end":94660,"line_start":1650,"line_end":1650,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::float::Float::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94173,"byte_end":94248,"line_start":1634,"line_end":1634,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94253,"byte_end":94276,"line_start":1635,"line_end":1635,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94281,"byte_end":94284,"line_start":1636,"line_end":1636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94289,"byte_end":94296,"line_start":1637,"line_end":1637,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94301,"byte_end":94327,"line_start":1638,"line_end":1638,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94332,"byte_end":94349,"line_start":1639,"line_end":1639,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94354,"byte_end":94357,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94362,"byte_end":94394,"line_start":1641,"line_end":1641,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94399,"byte_end":94423,"line_start":1642,"line_end":1642,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94428,"byte_end":94431,"line_start":1643,"line_end":1643,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94436,"byte_end":94485,"line_start":1644,"line_end":1644,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94490,"byte_end":94539,"line_start":1645,"line_end":1645,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94544,"byte_end":94547,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94552,"byte_end":94590,"line_start":1647,"line_end":1647,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94595,"byte_end":94633,"line_start":1648,"line_end":1648,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94638,"byte_end":94645,"line_start":1649,"line_end":1649,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95028,"byte_end":95034,"line_start":1665,"line_end":1665,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::float::Float::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94689,"byte_end":94753,"line_start":1652,"line_end":1652,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94758,"byte_end":94786,"line_start":1653,"line_end":1653,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94791,"byte_end":94794,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94799,"byte_end":94806,"line_start":1655,"line_end":1655,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94811,"byte_end":94837,"line_start":1656,"line_end":1656,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94842,"byte_end":94845,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94850,"byte_end":94866,"line_start":1658,"line_end":1658,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94871,"byte_end":94874,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94879,"byte_end":94899,"line_start":1660,"line_end":1660,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94904,"byte_end":94959,"line_start":1661,"line_end":1661,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94964,"byte_end":94967,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":94972,"byte_end":95008,"line_start":1663,"line_end":1663,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95013,"byte_end":95020,"line_start":1664,"line_end":1664,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95461,"byte_end":95466,"line_start":1681,"line_end":1681,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::float::Float::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95055,"byte_end":95120,"line_start":1667,"line_end":1667,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95125,"byte_end":95170,"line_start":1668,"line_end":1668,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95175,"byte_end":95178,"line_start":1669,"line_end":1669,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95183,"byte_end":95190,"line_start":1670,"line_end":1670,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95195,"byte_end":95221,"line_start":1671,"line_end":1671,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95226,"byte_end":95243,"line_start":1672,"line_end":1672,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95248,"byte_end":95251,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95256,"byte_end":95289,"line_start":1674,"line_end":1674,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95294,"byte_end":95297,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95302,"byte_end":95338,"line_start":1676,"line_end":1676,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95343,"byte_end":95392,"line_start":1677,"line_end":1677,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95397,"byte_end":95400,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95405,"byte_end":95441,"line_start":1679,"line_end":1679,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95446,"byte_end":95453,"line_start":1680,"line_end":1680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95886,"byte_end":95890,"line_start":1699,"line_end":1699,"column_start":8,"column_end":12},"name":"sinh","qualname":"::float::Float::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95487,"byte_end":95516,"line_start":1683,"line_end":1683,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95521,"byte_end":95524,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95529,"byte_end":95536,"line_start":1685,"line_end":1685,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95541,"byte_end":95567,"line_start":1686,"line_end":1686,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95572,"byte_end":95589,"line_start":1687,"line_end":1687,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95594,"byte_end":95597,"line_start":1688,"line_end":1688,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95602,"byte_end":95629,"line_start":1689,"line_end":1689,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95634,"byte_end":95650,"line_start":1690,"line_end":1690,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95655,"byte_end":95658,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95663,"byte_end":95684,"line_start":1692,"line_end":1692,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95689,"byte_end":95736,"line_start":1693,"line_end":1693,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95741,"byte_end":95773,"line_start":1694,"line_end":1694,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95778,"byte_end":95817,"line_start":1695,"line_end":1695,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95822,"byte_end":95825,"line_start":1696,"line_end":1696,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95830,"byte_end":95866,"line_start":1697,"line_end":1697,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95871,"byte_end":95878,"line_start":1698,"line_end":1698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96326,"byte_end":96330,"line_start":1717,"line_end":1717,"column_start":8,"column_end":12},"name":"cosh","qualname":"::float::Float::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95911,"byte_end":95942,"line_start":1701,"line_end":1701,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95947,"byte_end":95950,"line_start":1702,"line_end":1702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95955,"byte_end":95962,"line_start":1703,"line_end":1703,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95967,"byte_end":95993,"line_start":1704,"line_end":1704,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":95998,"byte_end":96015,"line_start":1705,"line_end":1705,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96020,"byte_end":96023,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96028,"byte_end":96055,"line_start":1707,"line_end":1707,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96060,"byte_end":96076,"line_start":1708,"line_end":1708,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96081,"byte_end":96102,"line_start":1709,"line_end":1709,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96107,"byte_end":96151,"line_start":1710,"line_end":1710,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96156,"byte_end":96188,"line_start":1711,"line_end":1711,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96193,"byte_end":96232,"line_start":1712,"line_end":1712,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96237,"byte_end":96240,"line_start":1713,"line_end":1713,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96245,"byte_end":96263,"line_start":1714,"line_end":1714,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96268,"byte_end":96306,"line_start":1715,"line_end":1715,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96311,"byte_end":96318,"line_start":1716,"line_end":1716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96786,"byte_end":96790,"line_start":1735,"line_end":1735,"column_start":8,"column_end":12},"name":"tanh","qualname":"::float::Float::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96351,"byte_end":96383,"line_start":1719,"line_end":1719,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96388,"byte_end":96391,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96396,"byte_end":96403,"line_start":1721,"line_end":1721,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96408,"byte_end":96434,"line_start":1722,"line_end":1722,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96439,"byte_end":96456,"line_start":1723,"line_end":1723,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96461,"byte_end":96464,"line_start":1724,"line_end":1724,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96469,"byte_end":96496,"line_start":1725,"line_end":1725,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96501,"byte_end":96517,"line_start":1726,"line_end":1726,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96522,"byte_end":96525,"line_start":1727,"line_end":1727,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96530,"byte_end":96551,"line_start":1728,"line_end":1728,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96556,"byte_end":96616,"line_start":1729,"line_end":1729,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96621,"byte_end":96671,"line_start":1730,"line_end":1730,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96676,"byte_end":96715,"line_start":1731,"line_end":1731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96720,"byte_end":96723,"line_start":1732,"line_end":1732,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96728,"byte_end":96766,"line_start":1733,"line_end":1733,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96771,"byte_end":96778,"line_start":1734,"line_end":1734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97085,"byte_end":97090,"line_start":1749,"line_end":1749,"column_start":8,"column_end":13},"name":"asinh","qualname":"::float::Float::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96811,"byte_end":96848,"line_start":1737,"line_end":1737,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96853,"byte_end":96856,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96861,"byte_end":96868,"line_start":1739,"line_end":1739,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96873,"byte_end":96899,"line_start":1740,"line_end":1740,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96904,"byte_end":96907,"line_start":1741,"line_end":1741,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96912,"byte_end":96928,"line_start":1742,"line_end":1742,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96933,"byte_end":96962,"line_start":1743,"line_end":1743,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96967,"byte_end":96970,"line_start":1744,"line_end":1744,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":96975,"byte_end":97014,"line_start":1745,"line_end":1745,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97019,"byte_end":97022,"line_start":1746,"line_end":1746,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97027,"byte_end":97065,"line_start":1747,"line_end":1747,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97070,"byte_end":97077,"line_start":1748,"line_end":1748,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97387,"byte_end":97392,"line_start":1763,"line_end":1763,"column_start":8,"column_end":13},"name":"acosh","qualname":"::float::Float::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97111,"byte_end":97150,"line_start":1751,"line_end":1751,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97155,"byte_end":97158,"line_start":1752,"line_end":1752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97163,"byte_end":97170,"line_start":1753,"line_end":1753,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97175,"byte_end":97201,"line_start":1754,"line_end":1754,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97206,"byte_end":97209,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97214,"byte_end":97230,"line_start":1756,"line_end":1756,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97235,"byte_end":97264,"line_start":1757,"line_end":1757,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97269,"byte_end":97272,"line_start":1758,"line_end":1758,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97277,"byte_end":97316,"line_start":1759,"line_end":1759,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97321,"byte_end":97324,"line_start":1760,"line_end":1760,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97329,"byte_end":97367,"line_start":1761,"line_end":1761,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97372,"byte_end":97379,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97723,"byte_end":97728,"line_start":1778,"line_end":1778,"column_start":8,"column_end":13},"name":"atanh","qualname":"::float::Float::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97413,"byte_end":97453,"line_start":1765,"line_end":1765,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97458,"byte_end":97461,"line_start":1766,"line_end":1766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97466,"byte_end":97473,"line_start":1767,"line_end":1767,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97478,"byte_end":97504,"line_start":1768,"line_end":1768,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97509,"byte_end":97526,"line_start":1769,"line_end":1769,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97531,"byte_end":97534,"line_start":1770,"line_end":1770,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97539,"byte_end":97566,"line_start":1771,"line_end":1771,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97571,"byte_end":97600,"line_start":1772,"line_end":1772,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97605,"byte_end":97608,"line_start":1773,"line_end":1773,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97613,"byte_end":97652,"line_start":1774,"line_end":1774,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97657,"byte_end":97660,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97665,"byte_end":97703,"line_start":1776,"line_end":1776,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97708,"byte_end":97715,"line_start":1777,"line_end":1777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98421,"byte_end":98435,"line_start":1800,"line_end":1800,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::Float::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97750,"byte_end":97828,"line_start":1781,"line_end":1781,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97833,"byte_end":97910,"line_start":1782,"line_end":1782,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97915,"byte_end":97918,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97923,"byte_end":97930,"line_start":1784,"line_end":1784,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97935,"byte_end":97961,"line_start":1785,"line_end":1785,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97966,"byte_end":97969,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ let num = 2.0f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":97974,"byte_end":97995,"line_start":1787,"line_end":1787,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98000,"byte_end":98003,"line_start":1788,"line_end":1788,"column_start":5,"column_end":8}},{"value":"/ // (8388608, -22, 1)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98008,"byte_end":98032,"line_start":1789,"line_end":1789,"column_start":5,"column_end":29}},{"value":"/ let (mantissa, exponent, sign) = Float::integer_decode(num);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98037,"byte_end":98101,"line_start":1790,"line_end":1790,"column_start":5,"column_end":69}},{"value":"/ let sign_f = sign as f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98106,"byte_end":98135,"line_start":1791,"line_end":1791,"column_start":5,"column_end":34}},{"value":"/ let mantissa_f = mantissa as f32;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98140,"byte_end":98177,"line_start":1792,"line_end":1792,"column_start":5,"column_end":42}},{"value":"/ let exponent_f = num.powf(exponent as f32);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98182,"byte_end":98229,"line_start":1793,"line_end":1793,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98234,"byte_end":98237,"line_start":1794,"line_end":1794,"column_start":5,"column_end":8}},{"value":"/ // 1 * 8388608 * 2^(-22) == 2","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98242,"byte_end":98275,"line_start":1795,"line_end":1795,"column_start":5,"column_end":38}},{"value":"/ let abs_difference = (sign_f * mantissa_f * exponent_f - num).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98280,"byte_end":98352,"line_start":1796,"line_end":1796,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98357,"byte_end":98360,"line_start":1797,"line_end":1797,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98365,"byte_end":98401,"line_start":1798,"line_end":1798,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":98406,"byte_end":98413,"line_start":1799,"line_end":1799,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103127,"byte_end":103128,"line_start":1943,"line_end":1943,"column_start":5,"column_end":6},"name":"E","qualname":"::float::FloatConst::E","value":"pub fn E() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return Euler’s number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103168,"byte_end":103177,"line_start":1945,"line_end":1945,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"::float::FloatConst::FRAC_1_PI","value":"pub fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `1.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103224,"byte_end":103237,"line_start":1947,"line_end":1947,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"::float::FloatConst::FRAC_1_SQRT_2","value":"pub fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `1.0 / sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103277,"byte_end":103286,"line_start":1949,"line_end":1949,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"::float::FloatConst::FRAC_2_PI","value":"pub fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `2.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103332,"byte_end":103346,"line_start":1951,"line_end":1951,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"::float::FloatConst::FRAC_2_SQRT_PI","value":"pub fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `2.0 / sqrt(π)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103386,"byte_end":103395,"line_start":1953,"line_end":1953,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"::float::FloatConst::FRAC_PI_2","value":"pub fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `π / 2.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103435,"byte_end":103444,"line_start":1955,"line_end":1955,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"::float::FloatConst::FRAC_PI_3","value":"pub fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `π / 3.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103484,"byte_end":103493,"line_start":1957,"line_end":1957,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"::float::FloatConst::FRAC_PI_4","value":"pub fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `π / 4.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103533,"byte_end":103542,"line_start":1959,"line_end":1959,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"::float::FloatConst::FRAC_PI_6","value":"pub fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `π / 6.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103582,"byte_end":103591,"line_start":1961,"line_end":1961,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"::float::FloatConst::FRAC_PI_8","value":"pub fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `π / 8.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103631,"byte_end":103636,"line_start":1963,"line_end":1963,"column_start":5,"column_end":10},"name":"LN_10","qualname":"::float::FloatConst::LN_10","value":"pub fn LN_10() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `ln(10.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103675,"byte_end":103679,"line_start":1965,"line_end":1965,"column_start":5,"column_end":9},"name":"LN_2","qualname":"::float::FloatConst::LN_2","value":"pub fn LN_2() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `ln(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103719,"byte_end":103726,"line_start":1967,"line_end":1967,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"::float::FloatConst::LOG10_E","value":"pub fn LOG10_E() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `log10(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103765,"byte_end":103771,"line_start":1969,"line_end":1969,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"::float::FloatConst::LOG2_E","value":"pub fn LOG2_E() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `log2(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103823,"byte_end":103825,"line_start":1971,"line_end":1971,"column_start":5,"column_end":7},"name":"PI","qualname":"::float::FloatConst::PI","value":"pub fn PI() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return Archimedes’ constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":103866,"byte_end":103872,"line_start":1973,"line_end":1973,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"::float::FloatConst::SQRT_2","value":"pub fn SQRT_2() -> Self","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"Return `sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"real","qualname":"::real","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":592}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1752,"byte_end":1775,"line_start":55,"line_end":55,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106050,"byte_end":106054,"line_start":15,"line_end":15,"column_start":11,"column_end":15},"name":"Real","qualname":"::real::Real","value":"Real: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[{"value":"/ A trait for real number types that do not necessarily have","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":105688,"byte_end":105750,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ floating-point-specific characteristics such as NaN and infinity.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":105751,"byte_end":105820,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":105821,"byte_end":105824,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [this Wikipedia article](https://en.wikipedia.org/wiki/Real_data_type)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":105825,"byte_end":105903,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ for a list of data types that could meaningfully implement this trait.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":105904,"byte_end":105978,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":105979,"byte_end":105982,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":105983,"byte_end":106039,"line_start":14,"line_end":14,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106392,"byte_end":106401,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"min_value","qualname":"::real::Real::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106138,"byte_end":106205,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106210,"byte_end":106213,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106218,"byte_end":106225,"line_start":24,"line_end":24,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106230,"byte_end":106261,"line_start":25,"line_end":25,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106266,"byte_end":106283,"line_start":26,"line_end":26,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106288,"byte_end":106291,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_value();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106296,"byte_end":106331,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106336,"byte_end":106339,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106344,"byte_end":106372,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106377,"byte_end":106384,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106704,"byte_end":106722,"line_start":44,"line_end":44,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::real::Real::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106418,"byte_end":106499,"line_start":34,"line_end":34,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106504,"byte_end":106507,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106512,"byte_end":106519,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106524,"byte_end":106555,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106560,"byte_end":106577,"line_start":38,"line_end":38,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106582,"byte_end":106585,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_positive_value();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106590,"byte_end":106634,"line_start":40,"line_end":40,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106639,"byte_end":106642,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106647,"byte_end":106684,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106689,"byte_end":106696,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107103,"byte_end":107110,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::real::Real::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106739,"byte_end":106783,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106788,"byte_end":106791,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106796,"byte_end":106803,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106808,"byte_end":106839,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106844,"byte_end":106861,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106866,"byte_end":106869,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::epsilon();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106874,"byte_end":106907,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106912,"byte_end":106915,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106920,"byte_end":106952,"line_start":54,"line_end":54,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106957,"byte_end":106964,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106969,"byte_end":106972,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106977,"byte_end":106989,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106994,"byte_end":106997,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107002,"byte_end":107068,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107073,"byte_end":107095,"line_start":60,"line_end":60,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107372,"byte_end":107381,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"max_value","qualname":"::real::Real::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107127,"byte_end":107193,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107198,"byte_end":107201,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107206,"byte_end":107213,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107218,"byte_end":107249,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107254,"byte_end":107271,"line_start":67,"line_end":67,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107276,"byte_end":107279,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::max_value();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107284,"byte_end":107319,"line_start":69,"line_end":69,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107324,"byte_end":107352,"line_start":70,"line_end":70,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107357,"byte_end":107364,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107668,"byte_end":107673,"line_start":85,"line_end":85,"column_start":8,"column_end":13},"name":"floor","qualname":"::real::Real::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107398,"byte_end":107461,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107466,"byte_end":107469,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107474,"byte_end":107481,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107486,"byte_end":107517,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107522,"byte_end":107525,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107530,"byte_end":107547,"line_start":79,"line_end":79,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107552,"byte_end":107568,"line_start":80,"line_end":80,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107573,"byte_end":107576,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107581,"byte_end":107612,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107617,"byte_end":107648,"line_start":83,"line_end":83,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107653,"byte_end":107660,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107966,"byte_end":107970,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"ceil","qualname":"::real::Real::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107694,"byte_end":107761,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107766,"byte_end":107769,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107774,"byte_end":107781,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107786,"byte_end":107817,"line_start":90,"line_end":90,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107822,"byte_end":107825,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107830,"byte_end":107847,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107852,"byte_end":107868,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107873,"byte_end":107876,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107881,"byte_end":107911,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107916,"byte_end":107946,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107951,"byte_end":107958,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108289,"byte_end":108294,"line_start":112,"line_end":112,"column_start":8,"column_end":13},"name":"round","qualname":"::real::Real::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":107991,"byte_end":108066,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108071,"byte_end":108081,"line_start":101,"line_end":101,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108086,"byte_end":108089,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108094,"byte_end":108101,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108106,"byte_end":108137,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108142,"byte_end":108145,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108150,"byte_end":108166,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108171,"byte_end":108188,"line_start":107,"line_end":107,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108193,"byte_end":108196,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108201,"byte_end":108232,"line_start":109,"line_end":109,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108237,"byte_end":108269,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108274,"byte_end":108281,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108563,"byte_end":108568,"line_start":125,"line_end":125,"column_start":8,"column_end":13},"name":"trunc","qualname":"::real::Real::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108315,"byte_end":108355,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108360,"byte_end":108363,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108368,"byte_end":108375,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108380,"byte_end":108411,"line_start":117,"line_end":117,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108416,"byte_end":108419,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108424,"byte_end":108440,"line_start":119,"line_end":119,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108445,"byte_end":108462,"line_start":120,"line_end":120,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108467,"byte_end":108470,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108475,"byte_end":108506,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108511,"byte_end":108543,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108548,"byte_end":108555,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108969,"byte_end":108974,"line_start":140,"line_end":140,"column_start":8,"column_end":13},"name":"fract","qualname":"::real::Real::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108589,"byte_end":108633,"line_start":127,"line_end":127,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108638,"byte_end":108641,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108646,"byte_end":108653,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108658,"byte_end":108689,"line_start":130,"line_end":130,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108694,"byte_end":108697,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108702,"byte_end":108718,"line_start":132,"line_end":132,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108723,"byte_end":108740,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108745,"byte_end":108796,"line_start":134,"line_end":134,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108801,"byte_end":108855,"line_start":135,"line_end":135,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108860,"byte_end":108863,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108868,"byte_end":108906,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108911,"byte_end":108949,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108954,"byte_end":108961,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109529,"byte_end":109532,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"abs","qualname":"::real::Real::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":108995,"byte_end":109067,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109072,"byte_end":109101,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109106,"byte_end":109109,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109114,"byte_end":109121,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109126,"byte_end":109157,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109162,"byte_end":109179,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109184,"byte_end":109187,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109192,"byte_end":109208,"line_start":149,"line_end":149,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109213,"byte_end":109230,"line_start":150,"line_end":150,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109235,"byte_end":109238,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109243,"byte_end":109290,"line_start":152,"line_end":152,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109295,"byte_end":109345,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109350,"byte_end":109353,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109358,"byte_end":109396,"line_start":155,"line_end":155,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109401,"byte_end":109439,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109444,"byte_end":109447,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert!(::num_traits::Float::is_nan(f64::NAN.abs()));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109452,"byte_end":109509,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109514,"byte_end":109521,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110104,"byte_end":110110,"line_start":179,"line_end":179,"column_start":8,"column_end":14},"name":"signum","qualname":"::real::Real::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109553,"byte_end":109609,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109614,"byte_end":109617,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109622,"byte_end":109690,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109695,"byte_end":109768,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109773,"byte_end":109825,"line_start":166,"line_end":166,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109830,"byte_end":109833,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109838,"byte_end":109845,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109850,"byte_end":109881,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109886,"byte_end":109903,"line_start":170,"line_end":170,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109908,"byte_end":109911,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109916,"byte_end":109932,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109937,"byte_end":109940,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109945,"byte_end":109977,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":109982,"byte_end":110031,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110036,"byte_end":110039,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110044,"byte_end":110084,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110089,"byte_end":110096,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110591,"byte_end":110607,"line_start":197,"line_end":197,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::real::Real::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110131,"byte_end":110190,"line_start":181,"line_end":181,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110195,"byte_end":110263,"line_start":182,"line_end":182,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110268,"byte_end":110271,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110276,"byte_end":110283,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110288,"byte_end":110319,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110324,"byte_end":110341,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110346,"byte_end":110349,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110354,"byte_end":110387,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110392,"byte_end":110395,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110400,"byte_end":110416,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110421,"byte_end":110438,"line_start":191,"line_end":191,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110443,"byte_end":110446,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110451,"byte_end":110485,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110490,"byte_end":110525,"line_start":194,"line_end":194,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110530,"byte_end":110571,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110576,"byte_end":110583,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111084,"byte_end":111100,"line_start":215,"line_end":215,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::real::Real::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110628,"byte_end":110687,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110692,"byte_end":110765,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110770,"byte_end":110773,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110778,"byte_end":110785,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110790,"byte_end":110821,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110826,"byte_end":110843,"line_start":204,"line_end":204,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110848,"byte_end":110851,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110856,"byte_end":110884,"line_start":206,"line_end":206,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110889,"byte_end":110892,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110897,"byte_end":110913,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110918,"byte_end":110935,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110940,"byte_end":110943,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110948,"byte_end":110983,"line_start":211,"line_end":211,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":110988,"byte_end":111022,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111027,"byte_end":111064,"line_start":213,"line_end":213,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111069,"byte_end":111076,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111717,"byte_end":111724,"line_start":235,"line_end":235,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::real::Real::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111121,"byte_end":111193,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111198,"byte_end":111270,"line_start":218,"line_end":218,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111275,"byte_end":111278,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111283,"byte_end":111357,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111362,"byte_end":111428,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111433,"byte_end":111436,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111441,"byte_end":111448,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111453,"byte_end":111484,"line_start":224,"line_end":224,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111489,"byte_end":111492,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111497,"byte_end":111514,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111519,"byte_end":111535,"line_start":227,"line_end":227,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111540,"byte_end":111557,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111562,"byte_end":111565,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111570,"byte_end":111582,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111587,"byte_end":111648,"line_start":231,"line_end":231,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111653,"byte_end":111656,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111661,"byte_end":111697,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111702,"byte_end":111709,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112028,"byte_end":112033,"line_start":247,"line_end":247,"column_start":8,"column_end":13},"name":"recip","qualname":"::real::Real::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111763,"byte_end":111816,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111821,"byte_end":111824,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111829,"byte_end":111836,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111841,"byte_end":111872,"line_start":240,"line_end":240,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111877,"byte_end":111880,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111885,"byte_end":111901,"line_start":242,"line_end":242,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111906,"byte_end":111959,"line_start":243,"line_end":243,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111964,"byte_end":111967,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":111972,"byte_end":112008,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112013,"byte_end":112020,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112375,"byte_end":112379,"line_start":261,"line_end":261,"column_start":8,"column_end":12},"name":"powi","qualname":"::real::Real::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112054,"byte_end":112093,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112098,"byte_end":112101,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112106,"byte_end":112167,"line_start":251,"line_end":251,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112172,"byte_end":112175,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112180,"byte_end":112187,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112192,"byte_end":112223,"line_start":254,"line_end":254,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112228,"byte_end":112231,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112236,"byte_end":112252,"line_start":256,"line_end":256,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112257,"byte_end":112306,"line_start":257,"line_end":257,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112311,"byte_end":112314,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112319,"byte_end":112355,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112360,"byte_end":112367,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112660,"byte_end":112664,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"powf","qualname":"::real::Real::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Raise a number to a real number power.","sig":null,"attributes":[{"value":"/ Raise a number to a real number power.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112408,"byte_end":112450,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112455,"byte_end":112458,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112463,"byte_end":112470,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112475,"byte_end":112506,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112511,"byte_end":112514,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112519,"byte_end":112535,"line_start":268,"line_end":268,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112540,"byte_end":112591,"line_start":269,"line_end":269,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112596,"byte_end":112599,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112604,"byte_end":112640,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112645,"byte_end":112652,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113256,"byte_end":113260,"line_start":294,"line_end":294,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::real::Real::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112694,"byte_end":112731,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112736,"byte_end":112739,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative floating-point number.  ","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112744,"byte_end":112808,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112813,"byte_end":112816,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112821,"byte_end":112833,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112838,"byte_end":112841,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If the implementing type doesn't support NaN, this method should panic if `self < 0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112846,"byte_end":112935,"line_start":281,"line_end":281,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112940,"byte_end":112943,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112948,"byte_end":112955,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112960,"byte_end":112991,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":112996,"byte_end":112999,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113004,"byte_end":113027,"line_start":286,"line_end":286,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113032,"byte_end":113056,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113061,"byte_end":113064,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113069,"byte_end":113124,"line_start":289,"line_end":289,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113129,"byte_end":113132,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113137,"byte_end":113173,"line_start":291,"line_end":291,"column_start":5,"column_end":41}},{"value":"/ assert!(::num_traits::Float::is_nan(negative.sqrt()));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113178,"byte_end":113236,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113241,"byte_end":113248,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113615,"byte_end":113618,"line_start":310,"line_end":310,"column_start":8,"column_end":11},"name":"exp","qualname":"::real::Real::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113281,"byte_end":113332,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113337,"byte_end":113340,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113345,"byte_end":113352,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113357,"byte_end":113388,"line_start":299,"line_end":299,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113393,"byte_end":113396,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113401,"byte_end":113419,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113424,"byte_end":113434,"line_start":302,"line_end":302,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113439,"byte_end":113461,"line_start":303,"line_end":303,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113466,"byte_end":113469,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113474,"byte_end":113495,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113500,"byte_end":113546,"line_start":306,"line_end":306,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113551,"byte_end":113554,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113559,"byte_end":113595,"line_start":308,"line_end":308,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113600,"byte_end":113607,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113901,"byte_end":113905,"line_start":324,"line_end":324,"column_start":8,"column_end":12},"name":"exp2","qualname":"::real::Real::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113639,"byte_end":113662,"line_start":312,"line_end":312,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113667,"byte_end":113670,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113675,"byte_end":113682,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113687,"byte_end":113718,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113723,"byte_end":113726,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113731,"byte_end":113747,"line_start":317,"line_end":317,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113752,"byte_end":113755,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113760,"byte_end":113779,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113784,"byte_end":113832,"line_start":320,"line_end":320,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113837,"byte_end":113840,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113845,"byte_end":113881,"line_start":322,"line_end":322,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113886,"byte_end":113893,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114394,"byte_end":114396,"line_start":344,"line_end":344,"column_start":8,"column_end":10},"name":"ln","qualname":"::real::Real::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113926,"byte_end":113974,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113979,"byte_end":113982,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":113987,"byte_end":113999,"line_start":328,"line_end":328,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114004,"byte_end":114007,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114012,"byte_end":114111,"line_start":330,"line_end":330,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114116,"byte_end":114119,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114124,"byte_end":114131,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114136,"byte_end":114167,"line_start":333,"line_end":333,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114172,"byte_end":114175,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114180,"byte_end":114198,"line_start":335,"line_end":335,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114203,"byte_end":114213,"line_start":336,"line_end":336,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114218,"byte_end":114240,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114245,"byte_end":114248,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114253,"byte_end":114274,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114279,"byte_end":114325,"line_start":340,"line_end":340,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114330,"byte_end":114333,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114338,"byte_end":114374,"line_start":342,"line_end":342,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114379,"byte_end":114386,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115048,"byte_end":115051,"line_start":367,"line_end":367,"column_start":8,"column_end":11},"name":"log","qualname":"::real::Real::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114417,"byte_end":114491,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114496,"byte_end":114499,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114504,"byte_end":114516,"line_start":348,"line_end":348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114521,"byte_end":114524,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114529,"byte_end":114628,"line_start":350,"line_end":350,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114633,"byte_end":114636,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114641,"byte_end":114648,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114653,"byte_end":114684,"line_start":353,"line_end":353,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114689,"byte_end":114692,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114697,"byte_end":114716,"line_start":355,"line_end":355,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114721,"byte_end":114739,"line_start":356,"line_end":356,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114744,"byte_end":114747,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114752,"byte_end":114777,"line_start":358,"line_end":358,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114782,"byte_end":114838,"line_start":359,"line_end":359,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114843,"byte_end":114846,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114851,"byte_end":114874,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114879,"byte_end":114933,"line_start":362,"line_end":362,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114938,"byte_end":114941,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114946,"byte_end":114985,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":114990,"byte_end":115028,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115033,"byte_end":115040,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115515,"byte_end":115519,"line_start":385,"line_end":385,"column_start":8,"column_end":12},"name":"log2","qualname":"::real::Real::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115084,"byte_end":115131,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115136,"byte_end":115139,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115144,"byte_end":115156,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115161,"byte_end":115164,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115169,"byte_end":115268,"line_start":373,"line_end":373,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115273,"byte_end":115276,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115281,"byte_end":115288,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115293,"byte_end":115324,"line_start":376,"line_end":376,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115329,"byte_end":115332,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115337,"byte_end":115355,"line_start":378,"line_end":378,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115360,"byte_end":115363,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115368,"byte_end":115391,"line_start":380,"line_end":380,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115396,"byte_end":115446,"line_start":381,"line_end":381,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115451,"byte_end":115454,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115459,"byte_end":115495,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115500,"byte_end":115507,"line_start":384,"line_end":384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115984,"byte_end":115989,"line_start":404,"line_end":404,"column_start":8,"column_end":13},"name":"log10","qualname":"::real::Real::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115540,"byte_end":115588,"line_start":387,"line_end":387,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115593,"byte_end":115596,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115601,"byte_end":115613,"line_start":389,"line_end":389,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115618,"byte_end":115621,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115626,"byte_end":115725,"line_start":391,"line_end":391,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115730,"byte_end":115733,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115738,"byte_end":115741,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115746,"byte_end":115753,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115758,"byte_end":115789,"line_start":395,"line_end":395,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115794,"byte_end":115797,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115802,"byte_end":115821,"line_start":397,"line_end":397,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115826,"byte_end":115829,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115834,"byte_end":115859,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115864,"byte_end":115915,"line_start":400,"line_end":400,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115920,"byte_end":115923,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115928,"byte_end":115964,"line_start":402,"line_end":402,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":115969,"byte_end":115976,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116274,"byte_end":116284,"line_start":417,"line_end":417,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::real::Real::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116010,"byte_end":116042,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116047,"byte_end":116050,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116055,"byte_end":116062,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116067,"byte_end":116092,"line_start":409,"line_end":409,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116097,"byte_end":116100,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116105,"byte_end":116132,"line_start":411,"line_end":411,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116137,"byte_end":116140,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116145,"byte_end":116205,"line_start":413,"line_end":413,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116210,"byte_end":116213,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116218,"byte_end":116254,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116259,"byte_end":116266,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116573,"byte_end":116583,"line_start":430,"line_end":430,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::real::Real::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116305,"byte_end":116337,"line_start":419,"line_end":419,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116342,"byte_end":116345,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116350,"byte_end":116357,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116362,"byte_end":116387,"line_start":422,"line_end":422,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116392,"byte_end":116395,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116400,"byte_end":116426,"line_start":424,"line_end":424,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116431,"byte_end":116434,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116439,"byte_end":116504,"line_start":426,"line_end":426,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116509,"byte_end":116512,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116517,"byte_end":116553,"line_start":428,"line_end":428,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116558,"byte_end":116565,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116814,"byte_end":116817,"line_start":442,"line_end":442,"column_start":8,"column_end":11},"name":"max","qualname":"::real::Real::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116604,"byte_end":116647,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116652,"byte_end":116655,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116660,"byte_end":116667,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116672,"byte_end":116703,"line_start":435,"line_end":435,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116708,"byte_end":116711,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116716,"byte_end":116732,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116737,"byte_end":116753,"line_start":438,"line_end":438,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116758,"byte_end":116761,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116766,"byte_end":116794,"line_start":440,"line_end":440,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116799,"byte_end":116806,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117061,"byte_end":117064,"line_start":454,"line_end":454,"column_start":8,"column_end":11},"name":"min","qualname":"::real::Real::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116851,"byte_end":116894,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116899,"byte_end":116902,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116907,"byte_end":116914,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116919,"byte_end":116950,"line_start":447,"line_end":447,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116955,"byte_end":116958,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116963,"byte_end":116979,"line_start":449,"line_end":449,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":116984,"byte_end":117000,"line_start":450,"line_end":450,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117005,"byte_end":117008,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117013,"byte_end":117041,"line_start":452,"line_end":452,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117046,"byte_end":117053,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117567,"byte_end":117574,"line_start":473,"line_end":473,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::real::Real::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117098,"byte_end":117141,"line_start":456,"line_end":456,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117146,"byte_end":117149,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117154,"byte_end":117185,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117190,"byte_end":117216,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117221,"byte_end":117224,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117229,"byte_end":117236,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117241,"byte_end":117272,"line_start":462,"line_end":462,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117277,"byte_end":117280,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117285,"byte_end":117301,"line_start":464,"line_end":464,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117306,"byte_end":117323,"line_start":465,"line_end":465,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117328,"byte_end":117331,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117336,"byte_end":117392,"line_start":467,"line_end":467,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117397,"byte_end":117453,"line_start":468,"line_end":468,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117458,"byte_end":117461,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117466,"byte_end":117504,"line_start":470,"line_end":470,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117509,"byte_end":117547,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117552,"byte_end":117559,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117887,"byte_end":117891,"line_start":487,"line_end":487,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::real::Real::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117608,"byte_end":117644,"line_start":475,"line_end":475,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117649,"byte_end":117652,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117657,"byte_end":117664,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117669,"byte_end":117700,"line_start":478,"line_end":478,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117705,"byte_end":117708,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117713,"byte_end":117729,"line_start":480,"line_end":480,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117734,"byte_end":117737,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117742,"byte_end":117765,"line_start":482,"line_end":482,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117770,"byte_end":117818,"line_start":483,"line_end":483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117823,"byte_end":117826,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117831,"byte_end":117867,"line_start":485,"line_end":485,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117872,"byte_end":117879,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118314,"byte_end":118319,"line_start":503,"line_end":503,"column_start":8,"column_end":13},"name":"hypot","qualname":"::real::Real::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117912,"byte_end":117986,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":117991,"byte_end":118022,"line_start":490,"line_end":490,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118027,"byte_end":118030,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118035,"byte_end":118042,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118047,"byte_end":118078,"line_start":493,"line_end":493,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118083,"byte_end":118086,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118091,"byte_end":118107,"line_start":495,"line_end":495,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118112,"byte_end":118128,"line_start":496,"line_end":496,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118133,"byte_end":118136,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118141,"byte_end":118163,"line_start":498,"line_end":498,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118168,"byte_end":118245,"line_start":499,"line_end":499,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118250,"byte_end":118253,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118258,"byte_end":118294,"line_start":501,"line_end":501,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118299,"byte_end":118306,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118652,"byte_end":118655,"line_start":517,"line_end":517,"column_start":8,"column_end":11},"name":"sin","qualname":"::real::Real::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118353,"byte_end":118400,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118405,"byte_end":118408,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118413,"byte_end":118420,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118425,"byte_end":118456,"line_start":508,"line_end":508,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118461,"byte_end":118478,"line_start":509,"line_end":509,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118483,"byte_end":118486,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118491,"byte_end":118523,"line_start":511,"line_end":511,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118528,"byte_end":118531,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118536,"byte_end":118583,"line_start":513,"line_end":513,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118588,"byte_end":118591,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118596,"byte_end":118632,"line_start":515,"line_end":515,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118637,"byte_end":118644,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118977,"byte_end":118980,"line_start":531,"line_end":531,"column_start":8,"column_end":11},"name":"cos","qualname":"::real::Real::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118676,"byte_end":118725,"line_start":519,"line_end":519,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118730,"byte_end":118733,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118738,"byte_end":118745,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118750,"byte_end":118781,"line_start":522,"line_end":522,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118786,"byte_end":118803,"line_start":523,"line_end":523,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118808,"byte_end":118811,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118816,"byte_end":118848,"line_start":525,"line_end":525,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118853,"byte_end":118856,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118861,"byte_end":118908,"line_start":527,"line_end":527,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118913,"byte_end":118916,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118921,"byte_end":118957,"line_start":529,"line_end":529,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":118962,"byte_end":118969,"line_start":530,"line_end":530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119295,"byte_end":119298,"line_start":544,"line_end":544,"column_start":8,"column_end":11},"name":"tan","qualname":"::real::Real::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119001,"byte_end":119051,"line_start":533,"line_end":533,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119056,"byte_end":119059,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119064,"byte_end":119071,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119076,"byte_end":119107,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119112,"byte_end":119129,"line_start":537,"line_end":537,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119134,"byte_end":119137,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119142,"byte_end":119174,"line_start":539,"line_end":539,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119179,"byte_end":119226,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119231,"byte_end":119234,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119239,"byte_end":119275,"line_start":542,"line_end":542,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119280,"byte_end":119287,"line_start":543,"line_end":543,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119955,"byte_end":119959,"line_start":566,"line_end":566,"column_start":8,"column_end":12},"name":"asin","qualname":"::real::Real::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119319,"byte_end":119386,"line_start":546,"line_end":546,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119391,"byte_end":119460,"line_start":547,"line_end":547,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119465,"byte_end":119477,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119482,"byte_end":119485,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119490,"byte_end":119502,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119507,"byte_end":119510,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119515,"byte_end":119597,"line_start":552,"line_end":552,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119602,"byte_end":119649,"line_start":553,"line_end":553,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119654,"byte_end":119657,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119662,"byte_end":119669,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119674,"byte_end":119705,"line_start":556,"line_end":556,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119710,"byte_end":119727,"line_start":557,"line_end":557,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119732,"byte_end":119735,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119740,"byte_end":119774,"line_start":559,"line_end":559,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119779,"byte_end":119782,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119787,"byte_end":119809,"line_start":561,"line_end":561,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119814,"byte_end":119886,"line_start":562,"line_end":562,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119891,"byte_end":119894,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119899,"byte_end":119935,"line_start":564,"line_end":564,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119940,"byte_end":119947,"line_start":565,"line_end":565,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120612,"byte_end":120616,"line_start":588,"line_end":588,"column_start":8,"column_end":12},"name":"acos","qualname":"::real::Real::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":119980,"byte_end":120049,"line_start":568,"line_end":568,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120054,"byte_end":120117,"line_start":569,"line_end":569,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120122,"byte_end":120134,"line_start":570,"line_end":570,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120139,"byte_end":120142,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120147,"byte_end":120159,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120164,"byte_end":120167,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120172,"byte_end":120254,"line_start":574,"line_end":574,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120259,"byte_end":120306,"line_start":575,"line_end":575,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120311,"byte_end":120314,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120319,"byte_end":120326,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120331,"byte_end":120362,"line_start":578,"line_end":578,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120367,"byte_end":120384,"line_start":579,"line_end":579,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120389,"byte_end":120392,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120397,"byte_end":120431,"line_start":581,"line_end":581,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120436,"byte_end":120439,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120444,"byte_end":120466,"line_start":583,"line_end":583,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120471,"byte_end":120543,"line_start":584,"line_end":584,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120548,"byte_end":120551,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120556,"byte_end":120592,"line_start":586,"line_end":586,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120597,"byte_end":120604,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120985,"byte_end":120989,"line_start":603,"line_end":603,"column_start":8,"column_end":12},"name":"atan","qualname":"::real::Real::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120637,"byte_end":120711,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120716,"byte_end":120740,"line_start":591,"line_end":591,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120745,"byte_end":120748,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120753,"byte_end":120760,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120765,"byte_end":120796,"line_start":594,"line_end":594,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120801,"byte_end":120804,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120809,"byte_end":120825,"line_start":596,"line_end":596,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120830,"byte_end":120833,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120838,"byte_end":120857,"line_start":598,"line_end":598,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120862,"byte_end":120916,"line_start":599,"line_end":599,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120921,"byte_end":120924,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120929,"byte_end":120965,"line_start":601,"line_end":601,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":120970,"byte_end":120977,"line_start":602,"line_end":602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121875,"byte_end":121880,"line_start":632,"line_end":632,"column_start":8,"column_end":13},"name":"atan2","qualname":"::real::Real::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121010,"byte_end":121086,"line_start":605,"line_end":605,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121091,"byte_end":121094,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121099,"byte_end":121126,"line_start":607,"line_end":607,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121131,"byte_end":121179,"line_start":608,"line_end":608,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121184,"byte_end":121234,"line_start":609,"line_end":609,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121239,"byte_end":121290,"line_start":610,"line_end":610,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121295,"byte_end":121298,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121303,"byte_end":121310,"line_start":612,"line_end":612,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121315,"byte_end":121346,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121351,"byte_end":121368,"line_start":614,"line_end":614,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121373,"byte_end":121376,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121381,"byte_end":121410,"line_start":616,"line_end":616,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121415,"byte_end":121459,"line_start":617,"line_end":617,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121464,"byte_end":121495,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121500,"byte_end":121517,"line_start":619,"line_end":619,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121522,"byte_end":121540,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121545,"byte_end":121548,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121553,"byte_end":121577,"line_start":622,"line_end":622,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121582,"byte_end":121600,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121605,"byte_end":121622,"line_start":624,"line_end":624,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121627,"byte_end":121630,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121635,"byte_end":121695,"line_start":626,"line_end":626,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121700,"byte_end":121761,"line_start":627,"line_end":627,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121766,"byte_end":121769,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121774,"byte_end":121812,"line_start":629,"line_end":629,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121817,"byte_end":121855,"line_start":630,"line_end":630,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121860,"byte_end":121867,"line_start":631,"line_end":631,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122399,"byte_end":122406,"line_start":650,"line_end":650,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::real::Real::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121914,"byte_end":121989,"line_start":634,"line_end":634,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":121994,"byte_end":122017,"line_start":635,"line_end":635,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122022,"byte_end":122025,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122030,"byte_end":122037,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122042,"byte_end":122073,"line_start":638,"line_end":638,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122078,"byte_end":122095,"line_start":639,"line_end":639,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122100,"byte_end":122103,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122108,"byte_end":122140,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122145,"byte_end":122169,"line_start":642,"line_end":642,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122174,"byte_end":122177,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122182,"byte_end":122231,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122236,"byte_end":122285,"line_start":645,"line_end":645,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122290,"byte_end":122293,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122298,"byte_end":122336,"line_start":647,"line_end":647,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122341,"byte_end":122379,"line_start":648,"line_end":648,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122384,"byte_end":122391,"line_start":649,"line_end":649,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122779,"byte_end":122785,"line_start":665,"line_end":665,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::real::Real::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122435,"byte_end":122499,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122504,"byte_end":122532,"line_start":653,"line_end":653,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122537,"byte_end":122540,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122545,"byte_end":122552,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122557,"byte_end":122588,"line_start":656,"line_end":656,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122593,"byte_end":122596,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122601,"byte_end":122617,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122622,"byte_end":122625,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122630,"byte_end":122650,"line_start":660,"line_end":660,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122655,"byte_end":122710,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122715,"byte_end":122718,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122723,"byte_end":122759,"line_start":663,"line_end":663,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122764,"byte_end":122771,"line_start":664,"line_end":664,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123363,"byte_end":123368,"line_start":686,"line_end":686,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::real::Real::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122806,"byte_end":122871,"line_start":667,"line_end":667,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122876,"byte_end":122921,"line_start":668,"line_end":668,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122926,"byte_end":122929,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122934,"byte_end":122946,"line_start":670,"line_end":670,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122951,"byte_end":122954,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":122959,"byte_end":123041,"line_start":672,"line_end":672,"column_start":5,"column_end":87}},{"value":"/ if `self-1 <= 0`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123046,"byte_end":123067,"line_start":673,"line_end":673,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123072,"byte_end":123075,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123080,"byte_end":123087,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123092,"byte_end":123123,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123128,"byte_end":123145,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123150,"byte_end":123153,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123158,"byte_end":123191,"line_start":679,"line_end":679,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123196,"byte_end":123199,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123204,"byte_end":123240,"line_start":681,"line_end":681,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123245,"byte_end":123294,"line_start":682,"line_end":682,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123299,"byte_end":123302,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123307,"byte_end":123343,"line_start":684,"line_end":684,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123348,"byte_end":123355,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123793,"byte_end":123797,"line_start":704,"line_end":704,"column_start":8,"column_end":12},"name":"sinh","qualname":"::real::Real::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123389,"byte_end":123418,"line_start":688,"line_end":688,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123423,"byte_end":123426,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123431,"byte_end":123438,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123443,"byte_end":123474,"line_start":691,"line_end":691,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123479,"byte_end":123496,"line_start":692,"line_end":692,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123501,"byte_end":123504,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123509,"byte_end":123536,"line_start":694,"line_end":694,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123541,"byte_end":123557,"line_start":695,"line_end":695,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123562,"byte_end":123565,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123570,"byte_end":123591,"line_start":697,"line_end":697,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123596,"byte_end":123643,"line_start":698,"line_end":698,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123648,"byte_end":123680,"line_start":699,"line_end":699,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123685,"byte_end":123724,"line_start":700,"line_end":700,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123729,"byte_end":123732,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123737,"byte_end":123773,"line_start":702,"line_end":702,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123778,"byte_end":123785,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124238,"byte_end":124242,"line_start":722,"line_end":722,"column_start":8,"column_end":12},"name":"cosh","qualname":"::real::Real::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123818,"byte_end":123849,"line_start":706,"line_end":706,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123854,"byte_end":123857,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123862,"byte_end":123869,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123874,"byte_end":123905,"line_start":709,"line_end":709,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123910,"byte_end":123927,"line_start":710,"line_end":710,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123932,"byte_end":123935,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123940,"byte_end":123967,"line_start":712,"line_end":712,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123972,"byte_end":123988,"line_start":713,"line_end":713,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":123993,"byte_end":124014,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124019,"byte_end":124063,"line_start":715,"line_end":715,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124068,"byte_end":124100,"line_start":716,"line_end":716,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124105,"byte_end":124144,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124149,"byte_end":124152,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124157,"byte_end":124175,"line_start":719,"line_end":719,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124180,"byte_end":124218,"line_start":720,"line_end":720,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124223,"byte_end":124230,"line_start":721,"line_end":721,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124703,"byte_end":124707,"line_start":740,"line_end":740,"column_start":8,"column_end":12},"name":"tanh","qualname":"::real::Real::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124263,"byte_end":124295,"line_start":724,"line_end":724,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124300,"byte_end":124303,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124308,"byte_end":124315,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124320,"byte_end":124351,"line_start":727,"line_end":727,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124356,"byte_end":124373,"line_start":728,"line_end":728,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124378,"byte_end":124381,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124386,"byte_end":124413,"line_start":730,"line_end":730,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124418,"byte_end":124434,"line_start":731,"line_end":731,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124439,"byte_end":124442,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124447,"byte_end":124468,"line_start":733,"line_end":733,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124473,"byte_end":124533,"line_start":734,"line_end":734,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124538,"byte_end":124588,"line_start":735,"line_end":735,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124593,"byte_end":124632,"line_start":736,"line_end":736,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124637,"byte_end":124640,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124645,"byte_end":124683,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124688,"byte_end":124695,"line_start":739,"line_end":739,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125007,"byte_end":125012,"line_start":754,"line_end":754,"column_start":8,"column_end":13},"name":"asinh","qualname":"::real::Real::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124728,"byte_end":124765,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124770,"byte_end":124773,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124778,"byte_end":124785,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124790,"byte_end":124821,"line_start":745,"line_end":745,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124826,"byte_end":124829,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124834,"byte_end":124850,"line_start":747,"line_end":747,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124855,"byte_end":124884,"line_start":748,"line_end":748,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124889,"byte_end":124892,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124897,"byte_end":124936,"line_start":750,"line_end":750,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124941,"byte_end":124944,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124949,"byte_end":124987,"line_start":752,"line_end":752,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":124992,"byte_end":124999,"line_start":753,"line_end":753,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125314,"byte_end":125319,"line_start":768,"line_end":768,"column_start":8,"column_end":13},"name":"acosh","qualname":"::real::Real::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125033,"byte_end":125072,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125077,"byte_end":125080,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125085,"byte_end":125092,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125097,"byte_end":125128,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125133,"byte_end":125136,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125141,"byte_end":125157,"line_start":761,"line_end":761,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125162,"byte_end":125191,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125196,"byte_end":125199,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125204,"byte_end":125243,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125248,"byte_end":125251,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125256,"byte_end":125294,"line_start":766,"line_end":766,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125299,"byte_end":125306,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125655,"byte_end":125660,"line_start":783,"line_end":783,"column_start":8,"column_end":13},"name":"atanh","qualname":"::real::Real::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125340,"byte_end":125380,"line_start":770,"line_end":770,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125385,"byte_end":125388,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125393,"byte_end":125400,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125405,"byte_end":125436,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125441,"byte_end":125458,"line_start":774,"line_end":774,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125463,"byte_end":125466,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125471,"byte_end":125498,"line_start":776,"line_end":776,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125503,"byte_end":125532,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125537,"byte_end":125540,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125545,"byte_end":125584,"line_start":779,"line_end":779,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125589,"byte_end":125592,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125597,"byte_end":125635,"line_start":781,"line_end":781,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125640,"byte_end":125647,"line_start":782,"line_end":782,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":1906},{"krate":0,"index":1921},{"krate":0,"index":1936},{"krate":0,"index":1951},{"krate":0,"index":1966},{"krate":0,"index":1981},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":1996},{"krate":0,"index":2011},{"krate":0,"index":2026},{"krate":0,"index":2041},{"krate":0,"index":2056},{"krate":0,"index":2071},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":2086},{"krate":0,"index":2137},{"krate":0,"index":675},{"krate":0,"index":690},{"krate":0,"index":2188},{"krate":0,"index":2203},{"krate":0,"index":2218},{"krate":0,"index":2233},{"krate":0,"index":2248},{"krate":0,"index":2263},{"krate":0,"index":2278},{"krate":0,"index":2293},{"krate":0,"index":2308},{"krate":0,"index":2323},{"krate":0,"index":2338},{"krate":0,"index":2353},{"krate":0,"index":2368},{"krate":0,"index":2383},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":704},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2628},{"krate":0,"index":2630},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2638},{"krate":0,"index":2640},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2662},{"krate":0,"index":2664},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2682},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2842},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2848},{"krate":0,"index":2850},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2864},{"krate":0,"index":2866},{"krate":0,"index":2868},{"krate":0,"index":2870},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":2888},{"krate":0,"index":2890},{"krate":0,"index":2892},{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2904},{"krate":0,"index":2906},{"krate":0,"index":2908},{"krate":0,"index":2910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":127857,"byte_end":127868,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664}],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a value to a number.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":127791,"byte_end":127846,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":127944,"byte_end":127952,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"pub fn to_isize(&Self) -> Option<isize>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `isize`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `isize`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":127875,"byte_end":127922,"line_start":13,"line_end":13,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":127927,"byte_end":127936,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128119,"byte_end":128124,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"pub fn to_i8(&Self) -> Option<i8>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i8`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i8`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128053,"byte_end":128097,"line_start":19,"line_end":19,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128102,"byte_end":128111,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128286,"byte_end":128292,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"pub fn to_i16(&Self) -> Option<i16>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i16`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i16`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128219,"byte_end":128264,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128269,"byte_end":128278,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128456,"byte_end":128462,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"pub fn to_i32(&Self) -> Option<i32>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i32`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128389,"byte_end":128434,"line_start":31,"line_end":31,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128439,"byte_end":128448,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128612,"byte_end":128618,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"pub fn to_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i64`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128559,"byte_end":128604,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129005,"byte_end":129012,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"to_i128","qualname":"::cast::ToPrimitive::to_i128","value":"pub fn to_i128(&Self) -> Option<i128>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i128`.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i128`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128647,"byte_end":128693,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128698,"byte_end":128701,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128706,"byte_end":128784,"line_start":42,"line_end":42,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128789,"byte_end":128792,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_i64()`.  Types implementing","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128797,"byte_end":128876,"line_start":44,"line_end":44,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128881,"byte_end":128962,"line_start":45,"line_end":45,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128967,"byte_end":128976,"line_start":46,"line_end":46,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":128981,"byte_end":128997,"line_start":47,"line_end":47,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129155,"byte_end":129163,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"pub fn to_usize(&Self) -> Option<usize>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `usize`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `usize`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129087,"byte_end":129133,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129138,"byte_end":129147,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129330,"byte_end":129335,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"pub fn to_u8(&Self) -> Option<u8>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u8`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u8`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129264,"byte_end":129308,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129313,"byte_end":129322,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129497,"byte_end":129503,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"pub fn to_u16(&Self) -> Option<u16>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u16`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u16`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129430,"byte_end":129475,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129480,"byte_end":129489,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129667,"byte_end":129673,"line_start":72,"line_end":72,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"pub fn to_u32(&Self) -> Option<u32>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u32`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129600,"byte_end":129645,"line_start":70,"line_end":70,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129650,"byte_end":129659,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129837,"byte_end":129843,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"pub fn to_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u64`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129770,"byte_end":129815,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129820,"byte_end":129829,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130230,"byte_end":130237,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"to_u128","qualname":"::cast::ToPrimitive::to_u128","value":"pub fn to_u128(&Self) -> Option<u128>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u128`.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u128`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129872,"byte_end":129918,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129923,"byte_end":129926,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":129931,"byte_end":130009,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130014,"byte_end":130017,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_u64()`.  Types implementing","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130022,"byte_end":130101,"line_start":84,"line_end":84,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130106,"byte_end":130187,"line_start":85,"line_end":85,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130192,"byte_end":130201,"line_start":86,"line_end":86,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130206,"byte_end":130222,"line_start":87,"line_end":87,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130379,"byte_end":130385,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"pub fn to_f32(&Self) -> Option<f32>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f32`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130312,"byte_end":130357,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130362,"byte_end":130371,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130549,"byte_end":130555,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"pub fn to_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f64`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130482,"byte_end":130527,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":130532,"byte_end":130541,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":138838,"byte_end":138851,"line_start":356,"line_end":356,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive: Sized","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a number to a value.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":138772,"byte_end":138827,"line_start":355,"line_end":355,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139034,"byte_end":139044,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"pub fn from_isize(isize) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `isize` to return an optional value of this type. If the\n value cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `isize` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":138865,"byte_end":138936,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":138941,"byte_end":139012,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139017,"byte_end":139026,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139302,"byte_end":139309,"line_start":367,"line_end":367,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"pub fn from_i8(i8) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `i8` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i8` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139137,"byte_end":139205,"line_start":364,"line_end":364,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139210,"byte_end":139280,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139285,"byte_end":139294,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139559,"byte_end":139567,"line_start":374,"line_end":374,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"pub fn from_i16(i16) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `i16` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i16` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139393,"byte_end":139462,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139467,"byte_end":139537,"line_start":372,"line_end":372,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139542,"byte_end":139551,"line_start":373,"line_end":373,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139818,"byte_end":139826,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"pub fn from_i32(i32) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `i32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139652,"byte_end":139721,"line_start":378,"line_end":378,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139726,"byte_end":139796,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139801,"byte_end":139810,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140063,"byte_end":140071,"line_start":387,"line_end":387,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"pub fn from_i64(i64) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `i64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139911,"byte_end":139980,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":139985,"byte_end":140055,"line_start":386,"line_end":386,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140561,"byte_end":140570,"line_start":398,"line_end":398,"column_start":8,"column_end":17},"name":"from_i128","qualname":"::cast::FromPrimitive::from_i128","value":"pub fn from_i128(i128) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `i128` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.","sig":null,"attributes":[{"value":"/ Convert an `i128` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140102,"byte_end":140172,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140177,"byte_end":140247,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140252,"byte_end":140255,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140260,"byte_end":140338,"line_start":392,"line_end":392,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140343,"byte_end":140346,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_i64()`.  Types implementing","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140351,"byte_end":140432,"line_start":394,"line_end":394,"column_start":5,"column_end":86}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140437,"byte_end":140518,"line_start":395,"line_end":395,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140523,"byte_end":140532,"line_start":396,"line_end":396,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140537,"byte_end":140553,"line_start":397,"line_end":397,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140829,"byte_end":140839,"line_start":405,"line_end":405,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"pub fn from_usize(usize) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert a `usize` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `usize` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140662,"byte_end":140732,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140737,"byte_end":140807,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140812,"byte_end":140821,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141097,"byte_end":141104,"line_start":412,"line_end":412,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"pub fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `u8` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u8` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":140932,"byte_end":141000,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141005,"byte_end":141075,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141080,"byte_end":141089,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141354,"byte_end":141362,"line_start":419,"line_end":419,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"pub fn from_u16(u16) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `u16` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u16` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141188,"byte_end":141257,"line_start":416,"line_end":416,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141262,"byte_end":141332,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141337,"byte_end":141346,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141613,"byte_end":141621,"line_start":426,"line_end":426,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"pub fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `u32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141447,"byte_end":141516,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141521,"byte_end":141591,"line_start":424,"line_end":424,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141596,"byte_end":141605,"line_start":425,"line_end":425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141858,"byte_end":141866,"line_start":432,"line_end":432,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"pub fn from_u64(u64) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `u64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141706,"byte_end":141775,"line_start":430,"line_end":430,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141780,"byte_end":141850,"line_start":431,"line_end":431,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142356,"byte_end":142365,"line_start":443,"line_end":443,"column_start":8,"column_end":17},"name":"from_u128","qualname":"::cast::FromPrimitive::from_u128","value":"pub fn from_u128(u128) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert an `u128` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.","sig":null,"attributes":[{"value":"/ Convert an `u128` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141897,"byte_end":141967,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":141972,"byte_end":142042,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142047,"byte_end":142050,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142055,"byte_end":142133,"line_start":437,"line_end":437,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142138,"byte_end":142141,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_u64()`.  Types implementing","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142146,"byte_end":142227,"line_start":439,"line_end":439,"column_start":5,"column_end":86}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142232,"byte_end":142313,"line_start":440,"line_end":440,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142318,"byte_end":142327,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142332,"byte_end":142348,"line_start":442,"line_end":442,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142622,"byte_end":142630,"line_start":450,"line_end":450,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"pub fn from_f32(f32) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert a `f32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `f32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142457,"byte_end":142525,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142530,"byte_end":142600,"line_start":448,"line_end":448,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142605,"byte_end":142614,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142880,"byte_end":142888,"line_start":457,"line_end":457,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"pub fn from_f64(f64) -> Option<Self>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" Convert a `f64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `f64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142715,"byte_end":142783,"line_start":454,"line_end":454,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142788,"byte_end":142858,"line_start":455,"line_end":455,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":142863,"byte_end":142872,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146599,"byte_end":146603,"line_start":587,"line_end":587,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"pub fn cast<T: NumCast, U: NumCast>(T) -> Option<U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"/ Cast from one machine scalar to another.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146386,"byte_end":146430,"line_start":576,"line_end":576,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146431,"byte_end":146434,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146435,"byte_end":146449,"line_start":578,"line_end":578,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146450,"byte_end":146453,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146454,"byte_end":146461,"line_start":580,"line_end":580,"column_start":1,"column_end":8}},{"value":"/ # use num_traits as num;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146462,"byte_end":146490,"line_start":581,"line_end":581,"column_start":1,"column_end":29}},{"value":"/ let twenty: f32 = num::cast(0x14).unwrap();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146491,"byte_end":146538,"line_start":582,"line_end":582,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(twenty, 20f32);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146539,"byte_end":146569,"line_start":583,"line_end":583,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146570,"byte_end":146577,"line_start":584,"line_end":584,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146578,"byte_end":146581,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146582,"byte_end":146591,"line_start":586,"line_end":586,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146737,"byte_end":146744,"line_start":592,"line_end":592,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast: Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":701}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146673,"byte_end":146726,"line_start":591,"line_end":591,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146895,"byte_end":146899,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"pub fn from<T: ToPrimitive>(T) -> Option<Self>","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `ToPrimitive` trait.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146772,"byte_end":146838,"line_start":593,"line_end":593,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `ToPrimitive` trait.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146843,"byte_end":146887,"line_start":594,"line_end":594,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":149062,"byte_end":149073,"line_start":670,"line_end":670,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::cast::AsPrimitive","value":"AsPrimitive<T>: 'static + Copy","parent":null,"children":[{"krate":0,"index":710}],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait AsPrimitive should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[{"value":"/ A generic interface for casting between machine scalars with the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":147950,"byte_end":148018,"line_start":635,"line_end":635,"column_start":1,"column_end":69}},{"value":"/ `as` operator, which admits narrowing and precision loss.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148019,"byte_end":148080,"line_start":636,"line_end":636,"column_start":1,"column_end":62}},{"value":"/ Implementers of this trait AsPrimitive should behave like a primitive","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148081,"byte_end":148154,"line_start":637,"line_end":637,"column_start":1,"column_end":74}},{"value":"/ numeric type (e.g. a newtype around another primitive), and the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148155,"byte_end":148222,"line_start":638,"line_end":638,"column_start":1,"column_end":68}},{"value":"/ intended conversion must never fail.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148223,"byte_end":148263,"line_start":639,"line_end":639,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148264,"byte_end":148267,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148268,"byte_end":148282,"line_start":641,"line_end":641,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148283,"byte_end":148286,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148287,"byte_end":148294,"line_start":643,"line_end":643,"column_start":1,"column_end":8}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148295,"byte_end":148329,"line_start":644,"line_end":644,"column_start":1,"column_end":35}},{"value":"/ let three: i32 = (3.14159265f32).as_();","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148330,"byte_end":148373,"line_start":645,"line_end":645,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(three, 3);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148374,"byte_end":148399,"line_start":646,"line_end":646,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148400,"byte_end":148407,"line_start":647,"line_end":647,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148408,"byte_end":148412,"line_start":648,"line_end":648,"column_start":1,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148413,"byte_end":148425,"line_start":649,"line_end":649,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148426,"byte_end":148430,"line_start":650,"line_end":650,"column_start":1,"column_end":5}},{"value":"/ Currently, some uses of the `as` operator are not entirely safe.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148431,"byte_end":148499,"line_start":651,"line_end":651,"column_start":1,"column_end":69}},{"value":"/ In particular, it is undefined behavior if:","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148500,"byte_end":148547,"line_start":652,"line_end":652,"column_start":1,"column_end":48}},{"value":"/ ","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148548,"byte_end":148552,"line_start":653,"line_end":653,"column_start":1,"column_end":5}},{"value":"/ - A truncated floating point value cannot fit in the target integer","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148553,"byte_end":148624,"line_start":654,"line_end":654,"column_start":1,"column_end":72}},{"value":"/   type ([#10184](https://github.com/rust-lang/rust/issues/10184));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148625,"byte_end":148695,"line_start":655,"line_end":655,"column_start":1,"column_end":71}},{"value":"/ ","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148696,"byte_end":148700,"line_start":656,"line_end":656,"column_start":1,"column_end":5}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148701,"byte_end":148714,"line_start":657,"line_end":657,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148715,"byte_end":148749,"line_start":658,"line_end":658,"column_start":1,"column_end":35}},{"value":"/ let x: u8 = (1.04E+17).as_(); // UB","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148750,"byte_end":148789,"line_start":659,"line_end":659,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148790,"byte_end":148797,"line_start":660,"line_end":660,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148798,"byte_end":148802,"line_start":661,"line_end":661,"column_start":1,"column_end":5}},{"value":"/ - Or a floating point value does not fit in another floating","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148803,"byte_end":148867,"line_start":662,"line_end":662,"column_start":1,"column_end":65}},{"value":"/   point type ([#15536](https://github.com/rust-lang/rust/issues/15536)).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148868,"byte_end":148944,"line_start":663,"line_end":663,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148945,"byte_end":148948,"line_start":664,"line_end":664,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148949,"byte_end":148962,"line_start":665,"line_end":665,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148963,"byte_end":148997,"line_start":666,"line_end":666,"column_start":1,"column_end":35}},{"value":"/ let x: f32 = (1e300f64).as_(); // UB","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":148998,"byte_end":149038,"line_start":667,"line_end":667,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":149039,"byte_end":149046,"line_start":668,"line_end":668,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":149047,"byte_end":149051,"line_start":669,"line_end":669,"column_start":1,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":149191,"byte_end":149194,"line_start":675,"line_end":675,"column_start":8,"column_end":11},"name":"as_","qualname":"::cast::AsPrimitive::as_","value":"pub fn as_(Self) -> T","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Convert a value to another, using the `as` operator.\n","sig":null,"attributes":[{"value":"/ Convert a value to another, using the `as` operator.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":149127,"byte_end":149183,"line_start":674,"line_end":674,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":763},{"krate":0,"index":2912},{"krate":0,"index":2929},{"krate":0,"index":2946},{"krate":0,"index":2963},{"krate":0,"index":2980},{"krate":0,"index":2997},{"krate":0,"index":3014},{"krate":0,"index":3031},{"krate":0,"index":3048},{"krate":0,"index":3065},{"krate":0,"index":3082},{"krate":0,"index":3099}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150738,"byte_end":150745,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt: Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151389,"byte_end":151399,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"pub fn count_ones(Self) -> u32","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the number of ones in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of ones in the binary representation of `self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151134,"byte_end":151204,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151209,"byte_end":151212,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151217,"byte_end":151231,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151236,"byte_end":151239,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151244,"byte_end":151251,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151256,"byte_end":151284,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151289,"byte_end":151292,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151297,"byte_end":151322,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151327,"byte_end":151330,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_ones(), 3);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151335,"byte_end":151369,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151374,"byte_end":151381,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151676,"byte_end":151687,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"pub fn count_zeros(Self) -> u32","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the number of zeros in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of zeros in the binary representation of `self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151419,"byte_end":151490,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151495,"byte_end":151498,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151503,"byte_end":151517,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151522,"byte_end":151525,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151530,"byte_end":151537,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151542,"byte_end":151570,"line_start":44,"line_end":44,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151575,"byte_end":151578,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151583,"byte_end":151608,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151613,"byte_end":151616,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_zeros(), 5);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151621,"byte_end":151656,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151661,"byte_end":151668,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151983,"byte_end":151996,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"pub fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the number of leading zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of leading zeros in the binary representation","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151707,"byte_end":151775,"line_start":52,"line_end":52,"column_start":5,"column_end":73}},{"value":"/ of `self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151780,"byte_end":151794,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151799,"byte_end":151802,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151807,"byte_end":151821,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151826,"byte_end":151829,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151834,"byte_end":151841,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151846,"byte_end":151874,"line_start":58,"line_end":58,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151879,"byte_end":151882,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151887,"byte_end":151912,"line_start":60,"line_end":60,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151917,"byte_end":151920,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.leading_zeros(), 10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151925,"byte_end":151963,"line_start":62,"line_end":62,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151968,"byte_end":151975,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152293,"byte_end":152307,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"pub fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Returns the number of trailing zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of trailing zeros in the binary representation","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152016,"byte_end":152085,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ of `self`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152090,"byte_end":152104,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152109,"byte_end":152112,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152117,"byte_end":152131,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152136,"byte_end":152139,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152144,"byte_end":152151,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152156,"byte_end":152184,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152189,"byte_end":152192,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152197,"byte_end":152222,"line_start":74,"line_end":74,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152227,"byte_end":152230,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.trailing_zeros(), 3);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152235,"byte_end":152273,"line_start":76,"line_end":76,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152278,"byte_end":152285,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152702,"byte_end":152713,"line_start":93,"line_end":93,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"pub fn rotate_left(Self, u32) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, wrapping\n the truncated bits to the end of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, wrapping","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152327,"byte_end":152402,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ the truncated bits to the end of the resulting integer.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152407,"byte_end":152466,"line_start":81,"line_end":81,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152471,"byte_end":152474,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152479,"byte_end":152493,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152498,"byte_end":152501,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152506,"byte_end":152513,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152518,"byte_end":152546,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152551,"byte_end":152554,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152559,"byte_end":152593,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF012u64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152598,"byte_end":152632,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152637,"byte_end":152640,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_left(12), m);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152645,"byte_end":152682,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152687,"byte_end":152694,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153125,"byte_end":153137,"line_start":108,"line_end":108,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"pub fn rotate_right(Self, u32) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, wrapping\n the truncated bits to the beginning of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, wrapping","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152742,"byte_end":152818,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ the truncated bits to the beginning of the resulting integer.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152823,"byte_end":152888,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152893,"byte_end":152896,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152901,"byte_end":152915,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152920,"byte_end":152923,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152928,"byte_end":152935,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152940,"byte_end":152968,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152973,"byte_end":152976,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":152981,"byte_end":153015,"line_start":103,"line_end":103,"column_start":5,"column_end":39}},{"value":"/ let m = 0xDEF0123456789ABCu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153020,"byte_end":153054,"line_start":104,"line_end":104,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153059,"byte_end":153062,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_right(12), m);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153067,"byte_end":153105,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153110,"byte_end":153117,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153580,"byte_end":153590,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"pub fn signed_shl(Self, u32) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153166,"byte_end":153240,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153245,"byte_end":153285,"line_start":111,"line_end":111,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153290,"byte_end":153293,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shl`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153298,"byte_end":153345,"line_start":113,"line_end":113,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153350,"byte_end":153353,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153358,"byte_end":153372,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153377,"byte_end":153380,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153385,"byte_end":153392,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153397,"byte_end":153425,"line_start":118,"line_end":118,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153430,"byte_end":153433,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153438,"byte_end":153472,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000u64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153477,"byte_end":153511,"line_start":121,"line_end":121,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153516,"byte_end":153519,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shl(12), m);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153524,"byte_end":153560,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153565,"byte_end":153572,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154066,"byte_end":154076,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"pub fn signed_shr(Self, u32) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, copying\n the \"sign bit\" in the most significant bits even for unsigned types.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, copying","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153619,"byte_end":153694,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ the \"sign bit\" in the most significant bits even for unsigned types.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153699,"byte_end":153771,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153776,"byte_end":153779,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shr`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153784,"byte_end":153831,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153836,"byte_end":153839,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153844,"byte_end":153858,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153863,"byte_end":153866,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153871,"byte_end":153878,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153883,"byte_end":153911,"line_start":135,"line_end":135,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153916,"byte_end":153919,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let n = 0xFEDCBA9876543210u64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153924,"byte_end":153958,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/ let m = 0xFFFFEDCBA9876543u64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":153963,"byte_end":153997,"line_start":138,"line_end":138,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154002,"byte_end":154005,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shr(12), m);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154010,"byte_end":154046,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154051,"byte_end":154058,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154523,"byte_end":154535,"line_start":159,"line_end":159,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"pub fn unsigned_shl(Self, u32) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154105,"byte_end":154179,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154184,"byte_end":154224,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154229,"byte_end":154232,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shl`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154237,"byte_end":154286,"line_start":147,"line_end":147,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154291,"byte_end":154294,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154299,"byte_end":154313,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154318,"byte_end":154321,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154326,"byte_end":154333,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154338,"byte_end":154366,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154371,"byte_end":154374,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFi64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154379,"byte_end":154413,"line_start":154,"line_end":154,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000i64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154418,"byte_end":154452,"line_start":155,"line_end":155,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154457,"byte_end":154460,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shl(12), m);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154465,"byte_end":154503,"line_start":157,"line_end":157,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154508,"byte_end":154515,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154982,"byte_end":154994,"line_start":176,"line_end":176,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"pub fn unsigned_shr(Self, u32) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, filling\n zeros in the most significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154564,"byte_end":154639,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ zeros in the most significant bits.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154644,"byte_end":154683,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154688,"byte_end":154691,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shr`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154696,"byte_end":154745,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154750,"byte_end":154753,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154758,"byte_end":154772,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154777,"byte_end":154780,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154785,"byte_end":154792,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154797,"byte_end":154825,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154830,"byte_end":154833,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let n = 0xFEDCBA9876543210i64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154838,"byte_end":154872,"line_start":171,"line_end":171,"column_start":5,"column_end":39}},{"value":"/ let m = 0x000FEDCBA9876543i64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154877,"byte_end":154911,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154916,"byte_end":154919,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shr(12), m);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154924,"byte_end":154962,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":154967,"byte_end":154974,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155299,"byte_end":155309,"line_start":190,"line_end":190,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"pub fn swap_bytes(Self) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Reverses the byte order of the integer.","sig":null,"attributes":[{"value":"/ Reverses the byte order of the integer.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155023,"byte_end":155066,"line_start":178,"line_end":178,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155071,"byte_end":155074,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155079,"byte_end":155093,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155098,"byte_end":155101,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155106,"byte_end":155113,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155118,"byte_end":155146,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155151,"byte_end":155154,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155159,"byte_end":155193,"line_start":185,"line_end":185,"column_start":5,"column_end":39}},{"value":"/ let m = 0xEFCDAB8967452301u64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155198,"byte_end":155232,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155237,"byte_end":155240,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.swap_bytes(), m);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155245,"byte_end":155279,"line_start":188,"line_end":188,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155284,"byte_end":155291,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155805,"byte_end":155812,"line_start":209,"line_end":209,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"pub fn from_be(Self) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Convert an integer from big endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from big endian to the target's endianness.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155330,"byte_end":155396,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155401,"byte_end":155404,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155409,"byte_end":155483,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155488,"byte_end":155491,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155496,"byte_end":155510,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155515,"byte_end":155518,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155523,"byte_end":155530,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155535,"byte_end":155563,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155568,"byte_end":155571,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155576,"byte_end":155610,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155615,"byte_end":155618,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155623,"byte_end":155659,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(u64::from_be(n), n)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155664,"byte_end":155702,"line_start":204,"line_end":204,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155707,"byte_end":155719,"line_start":205,"line_end":205,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_be(n), n.swap_bytes())","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155724,"byte_end":155775,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155780,"byte_end":155785,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155790,"byte_end":155797,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156317,"byte_end":156324,"line_start":228,"line_end":228,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"pub fn from_le(Self) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Convert an integer from little endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from little endian to the target's endianness.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155836,"byte_end":155905,"line_start":211,"line_end":211,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155910,"byte_end":155913,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155918,"byte_end":155992,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":155997,"byte_end":156000,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156005,"byte_end":156019,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156024,"byte_end":156027,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156032,"byte_end":156039,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156044,"byte_end":156072,"line_start":218,"line_end":218,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156077,"byte_end":156080,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156085,"byte_end":156119,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156124,"byte_end":156127,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156132,"byte_end":156171,"line_start":222,"line_end":222,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(u64::from_le(n), n)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156176,"byte_end":156214,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156219,"byte_end":156231,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_le(n), n.swap_bytes())","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156236,"byte_end":156287,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156292,"byte_end":156297,"line_start":226,"line_end":226,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156302,"byte_end":156309,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156807,"byte_end":156812,"line_start":247,"line_end":247,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"pub fn to_be(Self) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Convert `self` to big endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to big endian from the target's endianness.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156348,"byte_end":156410,"line_start":230,"line_end":230,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156415,"byte_end":156418,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156423,"byte_end":156497,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156502,"byte_end":156505,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156510,"byte_end":156524,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156529,"byte_end":156532,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156537,"byte_end":156544,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156549,"byte_end":156577,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156582,"byte_end":156585,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156590,"byte_end":156624,"line_start":239,"line_end":239,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156629,"byte_end":156632,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156637,"byte_end":156673,"line_start":241,"line_end":241,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(n.to_be(), n)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156678,"byte_end":156710,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156715,"byte_end":156727,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_be(), n.swap_bytes())","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156732,"byte_end":156777,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156782,"byte_end":156787,"line_start":245,"line_end":245,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156792,"byte_end":156799,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157298,"byte_end":157303,"line_start":266,"line_end":266,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"pub fn to_le(Self) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Convert `self` to little endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to little endian from the target's endianness.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156833,"byte_end":156898,"line_start":249,"line_end":249,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156903,"byte_end":156906,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156911,"byte_end":156985,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156990,"byte_end":156993,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":156998,"byte_end":157012,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157017,"byte_end":157020,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157025,"byte_end":157032,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157037,"byte_end":157065,"line_start":256,"line_end":256,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157070,"byte_end":157073,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157078,"byte_end":157112,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157117,"byte_end":157120,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157125,"byte_end":157164,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(n.to_le(), n)","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157169,"byte_end":157201,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157206,"byte_end":157218,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_le(), n.swap_bytes())","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157223,"byte_end":157268,"line_start":263,"line_end":263,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157273,"byte_end":157278,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157283,"byte_end":157290,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157541,"byte_end":157544,"line_start":277,"line_end":277,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"pub fn pow(Self, u32) -> Self","parent":{"krate":0,"index":746},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157324,"byte_end":157396,"line_start":268,"line_end":268,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157401,"byte_end":157404,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157409,"byte_end":157423,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157428,"byte_end":157431,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157436,"byte_end":157443,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157448,"byte_end":157476,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157481,"byte_end":157484,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2i32.pow(4), 16);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157489,"byte_end":157521,"line_start":275,"line_end":275,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":157526,"byte_end":157533,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":782},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3123},{"krate":0,"index":3127},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3139},{"krate":0,"index":3143},{"krate":0,"index":3148},{"krate":0,"index":3151},{"krate":0,"index":3155},{"krate":0,"index":3159},{"krate":0,"index":3164},{"krate":0,"index":3167},{"krate":0,"index":3171},{"krate":0,"index":3175},{"krate":0,"index":3180},{"krate":0,"index":3183},{"krate":0,"index":3187},{"krate":0,"index":3191},{"krate":0,"index":3196},{"krate":0,"index":3199},{"krate":0,"index":3203},{"krate":0,"index":3207},{"krate":0,"index":3212},{"krate":0,"index":3215},{"krate":0,"index":3219},{"krate":0,"index":3223},{"krate":0,"index":3228},{"krate":0,"index":3231},{"krate":0,"index":3235},{"krate":0,"index":3239},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3251},{"krate":0,"index":3255},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3267},{"krate":0,"index":3271},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3283},{"krate":0,"index":3287},{"krate":0,"index":3292},{"krate":0,"index":3295},{"krate":0,"index":3299},{"krate":0,"index":3303},{"krate":0,"index":3308},{"krate":0,"index":3311},{"krate":0,"index":3315},{"krate":0,"index":3319},{"krate":0,"index":3324},{"krate":0,"index":3327},{"krate":0,"index":3331},{"krate":0,"index":3335},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3347},{"krate":0,"index":3351},{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3363},{"krate":0,"index":3367},{"krate":0,"index":3372},{"krate":0,"index":3375},{"krate":0,"index":3379},{"krate":0,"index":3383},{"krate":0,"index":3388},{"krate":0,"index":3391},{"krate":0,"index":3395},{"krate":0,"index":3399},{"krate":0,"index":3404},{"krate":0,"index":3407},{"krate":0,"index":3411},{"krate":0,"index":3415},{"krate":0,"index":3420},{"krate":0,"index":3423},{"krate":0,"index":3427},{"krate":0,"index":3431},{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3443},{"krate":0,"index":3447},{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3459},{"krate":0,"index":3463},{"krate":0,"index":3468},{"krate":0,"index":3471},{"krate":0,"index":3475},{"krate":0,"index":3479},{"krate":0,"index":3484},{"krate":0,"index":3487},{"krate":0,"index":3491},{"krate":0,"index":3495},{"krate":0,"index":3500},{"krate":0,"index":3503},{"krate":0,"index":3507},{"krate":0,"index":3511},{"krate":0,"index":3516},{"krate":0,"index":3519},{"krate":0,"index":3523},{"krate":0,"index":3527},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3539},{"krate":0,"index":3543},{"krate":0,"index":3548},{"krate":0,"index":3551},{"krate":0,"index":3555},{"krate":0,"index":3559},{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3571},{"krate":0,"index":3575},{"krate":0,"index":3580},{"krate":0,"index":3583},{"krate":0,"index":3587},{"krate":0,"index":3591},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3603},{"krate":0,"index":3607},{"krate":0,"index":3612},{"krate":0,"index":3615},{"krate":0,"index":3619},{"krate":0,"index":3623},{"krate":0,"index":3628},{"krate":0,"index":3631},{"krate":0,"index":3635},{"krate":0,"index":3639},{"krate":0,"index":3644},{"krate":0,"index":3647},{"krate":0,"index":3651},{"krate":0,"index":3655},{"krate":0,"index":3660},{"krate":0,"index":3663},{"krate":0,"index":3667},{"krate":0,"index":3671},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3683},{"krate":0,"index":3687},{"krate":0,"index":3692},{"krate":0,"index":3695},{"krate":0,"index":3699},{"krate":0,"index":3703},{"krate":0,"index":3708},{"krate":0,"index":3711},{"krate":0,"index":3715},{"krate":0,"index":3719},{"krate":0,"index":3724},{"krate":0,"index":3727},{"krate":0,"index":3731},{"krate":0,"index":3735},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3747},{"krate":0,"index":3751},{"krate":0,"index":3756},{"krate":0,"index":3759},{"krate":0,"index":3763},{"krate":0,"index":3767},{"krate":0,"index":3772},{"krate":0,"index":3775},{"krate":0,"index":3779},{"krate":0,"index":3783},{"krate":0,"index":3788},{"krate":0,"index":3791},{"krate":0,"index":3795},{"krate":0,"index":3799},{"krate":0,"index":3804},{"krate":0,"index":3807},{"krate":0,"index":3811},{"krate":0,"index":3815},{"krate":0,"index":3820},{"krate":0,"index":3823},{"krate":0,"index":3827},{"krate":0,"index":3831},{"krate":0,"index":3836},{"krate":0,"index":3839},{"krate":0,"index":3843},{"krate":0,"index":3847},{"krate":0,"index":3852},{"krate":0,"index":3855},{"krate":0,"index":3859},{"krate":0,"index":3863},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3875},{"krate":0,"index":3879},{"krate":0,"index":3884},{"krate":0,"index":3887},{"krate":0,"index":3891},{"krate":0,"index":3895},{"krate":0,"index":3900},{"krate":0,"index":3903},{"krate":0,"index":3907},{"krate":0,"index":3911},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3923},{"krate":0,"index":3927},{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":3939},{"krate":0,"index":3943},{"krate":0,"index":3948},{"krate":0,"index":3951},{"krate":0,"index":3955},{"krate":0,"index":3959},{"krate":0,"index":3964},{"krate":0,"index":3967},{"krate":0,"index":3971},{"krate":0,"index":3975},{"krate":0,"index":3980},{"krate":0,"index":3983},{"krate":0,"index":3987},{"krate":0,"index":3991},{"krate":0,"index":3996},{"krate":0,"index":3999},{"krate":0,"index":4003},{"krate":0,"index":4007},{"krate":0,"index":4012},{"krate":0,"index":4015},{"krate":0,"index":4019},{"krate":0,"index":4023},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4035},{"krate":0,"index":4039},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":4051},{"krate":0,"index":4055},{"krate":0,"index":4060},{"krate":0,"index":4063},{"krate":0,"index":4067},{"krate":0,"index":4071},{"krate":0,"index":4076},{"krate":0,"index":4079},{"krate":0,"index":4083},{"krate":0,"index":4087},{"krate":0,"index":4092},{"krate":0,"index":4095},{"krate":0,"index":4099},{"krate":0,"index":4103},{"krate":0,"index":4108},{"krate":0,"index":4111},{"krate":0,"index":4115},{"krate":0,"index":4119},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4131},{"krate":0,"index":4135},{"krate":0,"index":4140},{"krate":0,"index":4143},{"krate":0,"index":4147},{"krate":0,"index":4151},{"krate":0,"index":4156},{"krate":0,"index":4159},{"krate":0,"index":4163},{"krate":0,"index":4167},{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4179},{"krate":0,"index":4183},{"krate":0,"index":4188},{"krate":0,"index":4191},{"krate":0,"index":4195},{"krate":0,"index":4199},{"krate":0,"index":4204},{"krate":0,"index":4207},{"krate":0,"index":4211},{"krate":0,"index":4215},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4227},{"krate":0,"index":4231},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4243},{"krate":0,"index":4247},{"krate":0,"index":4252},{"krate":0,"index":4255},{"krate":0,"index":4259},{"krate":0,"index":4263},{"krate":0,"index":783},{"krate":0,"index":787},{"krate":0,"index":789}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160259,"byte_end":160262,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Pow","qualname":"::pow::Pow","value":"Pow<RHS>","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781}],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[{"value":"/ Binary operator for raising a value to a power.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160197,"byte_end":160248,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160327,"byte_end":160333,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Output","qualname":"::pow::Pow::Output","value":"type Output;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160274,"byte_end":160317,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160522,"byte_end":160525,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::Pow::pow","value":"pub fn pow(Self, RHS) -> Self::Output","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Returns `self` to the power `rhs`.","sig":null,"attributes":[{"value":"/ Returns `self` to the power `rhs`.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160340,"byte_end":160378,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160383,"byte_end":160386,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160391,"byte_end":160405,"line_start":12,"line_end":12,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160410,"byte_end":160413,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160418,"byte_end":160425,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Pow;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160430,"byte_end":160454,"line_start":15,"line_end":15,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Pow::pow(10u32, 2u32), 100);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160459,"byte_end":160502,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":160507,"byte_end":160514,"line_start":17,"line_end":17,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165016,"byte_end":165019,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"pub fn pow<T: Clone + One + Mul<T, Output = T>>(T, usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, using exponentiation by squaring.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164787,"byte_end":164860,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164861,"byte_end":164864,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164865,"byte_end":164878,"line_start":176,"line_end":176,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164879,"byte_end":164882,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164883,"byte_end":164894,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/ use num_traits::pow;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164895,"byte_end":164919,"line_start":179,"line_end":179,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164920,"byte_end":164923,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pow(2i8, 4), 16);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164924,"byte_end":164956,"line_start":181,"line_end":181,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(pow(6u8, 3), 216);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164957,"byte_end":164990,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164991,"byte_end":164998,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":164999,"byte_end":165008,"line_start":184,"line_end":184,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165816,"byte_end":165827,"line_start":219,"line_end":219,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"pub fn checked_pow<T: Clone + One + CheckedMul>(T, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165447,"byte_end":165528,"line_start":205,"line_end":205,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165529,"byte_end":165532,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Otherwise same as the `pow` function.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165533,"byte_end":165574,"line_start":207,"line_end":207,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165575,"byte_end":165578,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165579,"byte_end":165592,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165593,"byte_end":165596,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165597,"byte_end":165608,"line_start":211,"line_end":211,"column_start":1,"column_end":12}},{"value":"/ use num_traits::checked_pow;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165609,"byte_end":165641,"line_start":212,"line_end":212,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165642,"byte_end":165645,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(checked_pow(2i8, 4), Some(16));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165646,"byte_end":165692,"line_start":214,"line_end":214,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(checked_pow(7i8, 8), None);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165693,"byte_end":165735,"line_start":215,"line_end":215,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(checked_pow(7u32, 8), Some(5_764_801));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165736,"byte_end":165790,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165791,"byte_end":165798,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\pow.rs","byte_start":165799,"byte_end":165808,"line_start":218,"line_end":218,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1974,"byte_end":1977,"line_start":63,"line_end":63,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num: PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[{"value":"/ The base trait for numeric types, covering `0` and `1` values,","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1831,"byte_end":1897,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ comparisons, basic numeric operations, and string conversion.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1898,"byte_end":1963,"line_start":62,"line_end":62,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2022,"byte_end":2037,"line_start":65,"line_end":65,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2395,"byte_end":2409,"line_start":80,"line_end":80,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Convert from a string and radix <= 36.","sig":null,"attributes":[{"value":"/ Convert from a string and radix <= 36.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2044,"byte_end":2086,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2091,"byte_end":2094,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2099,"byte_end":2113,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2118,"byte_end":2121,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2126,"byte_end":2137,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ use num_traits::Num;","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2142,"byte_end":2166,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2171,"byte_end":2174,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"27\", 10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2179,"byte_end":2235,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(result, Ok(27));","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2240,"byte_end":2271,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2276,"byte_end":2279,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"foo\", 10);","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2284,"byte_end":2341,"line_start":77,"line_end":77,"column_start":5,"column_end":62}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2346,"byte_end":2375,"line_start":78,"line_end":78,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2380,"byte_end":2387,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2631,"byte_end":2637,"line_start":86,"line_end":86,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[{"value":"/ The trait for types implementing basic numeric operations","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2476,"byte_end":2537,"line_start":83,"line_end":83,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2538,"byte_end":2541,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2542,"byte_end":2620,"line_start":85,"line_end":85,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3262,"byte_end":3268,"line_start":106,"line_end":106,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef: Num + for<'r> NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement numeric operations taking","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3055,"byte_end":3131,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ the second operand by reference.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3132,"byte_end":3168,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3169,"byte_end":3172,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3173,"byte_end":3251,"line_start":105,"line_end":105,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3587,"byte_end":3593,"line_start":113,"line_end":113,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[{"value":"/ The trait for references which implement numeric operations, taking the","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3366,"byte_end":3441,"line_start":109,"line_end":109,"column_start":1,"column_end":76}},{"value":"/ second operand either by value or by reference.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3442,"byte_end":3493,"line_start":110,"line_end":110,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3494,"byte_end":3497,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3498,"byte_end":3576,"line_start":112,"line_end":112,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3926,"byte_end":3938,"line_start":119,"line_end":119,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[{"value":"/ The trait for types implementing numeric assignment operators (like `+=`).","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3754,"byte_end":3832,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3833,"byte_end":3836,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3837,"byte_end":3915,"line_start":118,"line_end":118,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4387,"byte_end":4396,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign: Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement assignment operators.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4221,"byte_end":4293,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4294,"byte_end":4297,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4298,"byte_end":4376,"line_start":137,"line_end":137,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4692,"byte_end":4704,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `NumAssign` types which also implement assignment operations","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4476,"byte_end":4554,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ taking the second operand by reference.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4555,"byte_end":4598,"line_start":142,"line_end":142,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4599,"byte_end":4602,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4603,"byte_end":4681,"line_start":144,"line_end":144,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4513},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":5813,"byte_end":5818,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":4512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4515},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":5824,"byte_end":5831,"line_start":181,"line_end":181,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":4512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4512},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":5792,"byte_end":5806,"line_start":179,"line_end":179,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"pub enum FloatErrorKind { Empty, Invalid, }","parent":null,"children":[{"krate":0,"index":4513},{"krate":0,"index":4515}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4519},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":5989,"byte_end":6004,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":4520}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4520},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":6015,"byte_end":6019,"line_start":187,"line_end":187,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":4519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":14070,"byte_end":14075,"line_start":368,"line_end":368,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"/ A value bounded by a minimum and a maximum","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":13856,"byte_end":13902,"line_start":362,"line_end":362,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":13903,"byte_end":13906,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":13907,"byte_end":13960,"line_start":364,"line_end":364,"column_start":1,"column_end":54}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":13961,"byte_end":14017,"line_start":365,"line_end":365,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":14018,"byte_end":14052,"line_start":366,"line_end":366,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":14053,"byte_end":14062,"line_start":367,"line_end":367,"column_start":1,"column_end":10}}]}],"impls":[{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19065,"byte_end":19073,"line_start":58,"line_end":58,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20743,"byte_end":20751,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":24123,"byte_end":24131,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":27347,"byte_end":27355,"line_start":192,"line_end":192,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":42315,"byte_end":42323,"line_start":93,"line_end":93,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":42510,"byte_end":42518,"line_start":98,"line_end":98,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":42705,"byte_end":42713,"line_start":103,"line_end":103,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":49855,"byte_end":49863,"line_start":45,"line_end":45,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125703,"byte_end":125704,"line_start":786,"line_end":786,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":145126,"byte_end":145134,"line_start":519,"line_end":519,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":145902,"byte_end":145910,"line_start":552,"line_end":552,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":147842,"byte_end":147850,"line_start":629,"line_end":629,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2874,"byte_end":2875,"line_start":94,"line_end":94,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3323,"byte_end":3324,"line_start":107,"line_end":107,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3687,"byte_end":3688,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4095,"byte_end":4096,"line_start":127,"line_end":127,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4442,"byte_end":4443,"line_start":139,"line_end":139,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4777,"byte_end":4778,"line_start":146,"line_end":146,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":5378,"byte_end":5386,"line_start":166,"line_end":166,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":6062,"byte_end":6077,"line_start":190,"line_end":190,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1682,"byte_end":1692,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":161}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1702,"byte_end":1706,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":191}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1716,"byte_end":1719,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":229}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mod.rs","byte_start":27818,"byte_end":27828,"line_start":1,"line_end":1,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":230}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mod.rs","byte_start":27838,"byte_end":27845,"line_start":2,"line_end":2,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":235}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mod.rs","byte_start":27855,"byte_end":27863,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":277}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mod.rs","byte_start":27873,"byte_end":27876,"line_start":4,"line_end":4,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":307}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\mod.rs","byte_start":27886,"byte_end":27893,"line_start":5,"line_end":5,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":325}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1729,"byte_end":1735,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":347}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1745,"byte_end":1750,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":408}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1784,"byte_end":1788,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":530}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1798,"byte_end":1802,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":594}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1812,"byte_end":1815,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":712}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1825,"byte_end":1828,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":764}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17818,"byte_end":17823,"line_start":5,"line_end":5,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":172}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":17826,"byte_end":17829,"line_start":5,"line_end":5,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":172}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19065,"byte_end":19073,"line_start":58,"line_end":58,"column_start":24,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":172}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19320,"byte_end":19325,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":180}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":19328,"byte_end":19331,"line_start":69,"line_end":69,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":180}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\identities.rs","byte_start":20743,"byte_end":20751,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":180}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22035,"byte_end":22040,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22043,"byte_end":22046,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":792},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":22049,"byte_end":22052,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3098},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":24123,"byte_end":24131,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":27087,"byte_end":27090,"line_start":180,"line_end":180,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":792},"to":{"krate":0,"index":225}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\sign.rs","byte_start":27347,"byte_end":27355,"line_start":192,"line_end":192,"column_start":32,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":225}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":28986,"byte_end":28991,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":258}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":28994,"byte_end":28997,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":258}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30124,"byte_end":30129,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":261}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":30132,"byte_end":30135,"line_start":39,"line_end":39,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3076},"to":{"krate":0,"index":261}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31025,"byte_end":31030,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":263}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31033,"byte_end":31036,"line_start":63,"line_end":63,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":263}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31991,"byte_end":31996,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":31999,"byte_end":32002,"line_start":87,"line_end":87,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3086},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":32976,"byte_end":32981,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":32984,"byte_end":32987,"line_start":111,"line_end":111,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3092},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":34754,"byte_end":34759,"line_start":162,"line_end":162,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":270}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36174,"byte_end":36179,"line_start":199,"line_end":199,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":272}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":36182,"byte_end":36185,"line_start":199,"line_end":199,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3142},"to":{"krate":0,"index":272}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37750,"byte_end":37755,"line_start":244,"line_end":244,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":275}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\checked.rs","byte_start":37758,"byte_end":37761,"line_start":244,"line_end":244,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3148},"to":{"krate":0,"index":275}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":39610,"byte_end":39615,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":39618,"byte_end":39621,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":40502,"byte_end":40507,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":294}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":40510,"byte_end":40513,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3076},"to":{"krate":0,"index":294}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":41400,"byte_end":41405,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":296}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":41408,"byte_end":41411,"line_start":70,"line_end":70,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":296}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":42315,"byte_end":42323,"line_start":93,"line_end":93,"column_start":38,"column_end":46},"kind":{"Impl":{"id":190}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":292}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":42510,"byte_end":42518,"line_start":98,"line_end":98,"column_start":38,"column_end":46},"kind":{"Impl":{"id":191}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":294}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\ops\\wrapping.rs","byte_start":42705,"byte_end":42713,"line_start":103,"line_end":103,"column_start":38,"column_end":46},"kind":{"Impl":{"id":192}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":296}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\bounds.rs","byte_start":49855,"byte_end":49863,"line_start":45,"line_end":45,"column_start":30,"column_end":38},"kind":{"Impl":{"id":235}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":397}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52014,"byte_end":52017,"line_start":13,"line_end":13,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":792},"to":{"krate":0,"index":434}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52020,"byte_end":52027,"line_start":13,"line_end":13,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":700},"to":{"krate":0,"index":434}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52030,"byte_end":52033,"line_start":13,"line_end":13,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3098},"to":{"krate":0,"index":434}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52051,"byte_end":52061,"line_start":13,"line_end":13,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2702},"to":{"krate":0,"index":434}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":52064,"byte_end":52068,"line_start":13,"line_end":13,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":434}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75298,"byte_end":75301,"line_start":891,"line_end":891,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":792},"to":{"krate":0,"index":468}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75308,"byte_end":75312,"line_start":892,"line_end":892,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":468}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75319,"byte_end":75326,"line_start":893,"line_end":893,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":700},"to":{"krate":0,"index":468}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75333,"byte_end":75343,"line_start":894,"line_end":894,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2702},"to":{"krate":0,"index":468}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\float.rs","byte_start":75350,"byte_end":75353,"line_start":895,"line_end":895,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3098},"to":{"krate":0,"index":468}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106061,"byte_end":106064,"line_start":16,"line_end":16,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":792},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106071,"byte_end":106075,"line_start":17,"line_end":17,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106082,"byte_end":106089,"line_start":18,"line_end":18,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":700},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106096,"byte_end":106106,"line_start":19,"line_end":19,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2702},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":106113,"byte_end":106116,"line_start":20,"line_end":20,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3098},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\real.rs","byte_start":125703,"byte_end":125704,"line_start":786,"line_end":786,"column_start":25,"column_end":26},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":593},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":138853,"byte_end":138858,"line_start":356,"line_end":356,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":675}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":145126,"byte_end":145134,"line_start":519,"line_end":519,"column_start":38,"column_end":46},"kind":{"Impl":{"id":255}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":650}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":145902,"byte_end":145910,"line_start":552,"line_end":552,"column_start":42,"column_end":50},"kind":{"Impl":{"id":256}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":675}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146746,"byte_end":146751,"line_start":592,"line_end":592,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":146754,"byte_end":146765,"line_start":592,"line_end":592,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":650},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":147842,"byte_end":147850,"line_start":629,"line_end":629,"column_start":30,"column_end":38},"kind":{"Impl":{"id":271}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":700}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\cast.rs","byte_start":149088,"byte_end":149092,"line_start":670,"line_end":670,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":708}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150752,"byte_end":150757,"line_start":9,"line_end":9,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":3009},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150764,"byte_end":150768,"line_start":10,"line_end":10,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3014},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150775,"byte_end":150778,"line_start":11,"line_end":11,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":792},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150781,"byte_end":150788,"line_start":11,"line_end":11,"column_start":13,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":700},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150795,"byte_end":150802,"line_start":12,"line_end":12,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":397},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150809,"byte_end":150819,"line_start":13,"line_end":13,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2702},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150822,"byte_end":150825,"line_start":13,"line_end":13,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2691},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150828,"byte_end":150830,"line_start":13,"line_end":13,"column_start":26,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2660},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150837,"byte_end":150840,"line_start":14,"line_end":14,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3123},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150860,"byte_end":150866,"line_start":15,"line_end":15,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":3127},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150886,"byte_end":150891,"line_start":16,"line_end":16,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":3132},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150911,"byte_end":150917,"line_start":17,"line_end":17,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":3137},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150937,"byte_end":150940,"line_start":18,"line_end":18,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3142},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150967,"byte_end":150970,"line_start":19,"line_end":19,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3148},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":150997,"byte_end":151007,"line_start":20,"line_end":20,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":258},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151027,"byte_end":151037,"line_start":21,"line_end":21,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151057,"byte_end":151067,"line_start":22,"line_end":22,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":263},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151087,"byte_end":151097,"line_start":23,"line_end":23,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":265},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\int.rs","byte_start":151117,"byte_end":151127,"line_start":24,"line_end":24,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":231},"to":{"krate":0,"index":746}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1979,"byte_end":1988,"line_start":63,"line_end":63,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2655},"to":{"krate":0,"index":792}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1991,"byte_end":1995,"line_start":63,"line_end":63,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":172},"to":{"krate":0,"index":792}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":1998,"byte_end":2001,"line_start":63,"line_end":63,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":180},"to":{"krate":0,"index":792}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2004,"byte_end":2010,"line_start":63,"line_end":63,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":795},"to":{"krate":0,"index":792}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2671,"byte_end":2674,"line_start":87,"line_end":87,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":795}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2703,"byte_end":2706,"line_start":88,"line_end":88,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3076},"to":{"krate":0,"index":795}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2735,"byte_end":2738,"line_start":89,"line_end":89,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3081},"to":{"krate":0,"index":795}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2767,"byte_end":2770,"line_start":90,"line_end":90,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3086},"to":{"krate":0,"index":795}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2799,"byte_end":2802,"line_start":91,"line_end":91,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3092},"to":{"krate":0,"index":795}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":2874,"byte_end":2875,"line_start":94,"line_end":94,"column_start":46,"column_end":47},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":799},"to":{"krate":0,"index":795}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3270,"byte_end":3273,"line_start":106,"line_end":106,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":792},"to":{"krate":0,"index":802}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3284,"byte_end":3290,"line_start":106,"line_end":106,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":795},"to":{"krate":0,"index":802}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3323,"byte_end":3324,"line_start":107,"line_end":107,"column_start":20,"column_end":21},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":802}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3601,"byte_end":3607,"line_start":113,"line_end":113,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":795},"to":{"krate":0,"index":807}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3630,"byte_end":3636,"line_start":113,"line_end":113,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":795},"to":{"krate":0,"index":807}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3687,"byte_end":3688,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":811},"to":{"krate":0,"index":807}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3957,"byte_end":3966,"line_start":120,"line_end":120,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":3102},"to":{"krate":0,"index":814}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3978,"byte_end":3987,"line_start":121,"line_end":121,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":3106},"to":{"krate":0,"index":814}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":3999,"byte_end":4008,"line_start":122,"line_end":122,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":3110},"to":{"krate":0,"index":814}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4020,"byte_end":4029,"line_start":123,"line_end":123,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":3114},"to":{"krate":0,"index":814}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4041,"byte_end":4050,"line_start":124,"line_end":124,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":3118},"to":{"krate":0,"index":814}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4095,"byte_end":4096,"line_start":127,"line_end":127,"column_start":36,"column_end":37},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":817},"to":{"krate":0,"index":814}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4398,"byte_end":4401,"line_start":138,"line_end":138,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":792},"to":{"krate":0,"index":819}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4404,"byte_end":4416,"line_start":138,"line_end":138,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":814},"to":{"krate":0,"index":819}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4442,"byte_end":4443,"line_start":139,"line_end":139,"column_start":23,"column_end":24},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":821},"to":{"krate":0,"index":819}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4706,"byte_end":4715,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":819},"to":{"krate":0,"index":822}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4726,"byte_end":4738,"line_start":145,"line_end":145,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":814},"to":{"krate":0,"index":822}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":4777,"byte_end":4778,"line_start":146,"line_end":146,"column_start":26,"column_end":27},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":825},"to":{"krate":0,"index":822}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":5378,"byte_end":5386,"line_start":166,"line_end":166,"column_start":22,"column_end":30},"kind":{"Impl":{"id":694}},"from":{"krate":1,"index":24842},"to":{"krate":0,"index":792}},{"span":{"file_name":"C:\\Users\\Researchers\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.5\\src\\lib.rs","byte_start":6062,"byte_end":6077,"line_start":190,"line_end":190,"column_start":23,"column_end":38},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":4519},"to":{"krate":1,"index":9357}}]}